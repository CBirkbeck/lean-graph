[{"references": [], "name": "Dvd", "constType": "Other"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddMonoid.add_zero",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_3",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "IsUnit",
   "Nat.monoid",
   "Units",
   "Eq",
   "Units.val",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Nat.isUnit_iff.match_2",
  "constType": "Definition"},
 {"references": ["Decidable", "Not", "Decidable.byCases.match_1"],
  "name": "Decidable.byCases",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "rfl",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.sub_zero",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.zero_add",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalSemiring.mk", "constType": "Other"},
 {"references": [], "name": "CommMonoid", "constType": "Other"},
 {"references":
  ["Eq", "Nat", "OfNat.ofNat", "instOfNatNat", "Nat.noConfusion", "False"],
  "name": "Nat.zero_ne_one",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.nsmul_zero",
  "constType": "Definition"},
 {"references":
  ["DivInvMonoid",
   "Eq.mpr",
   "Eq",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "DivInvMonoid.toMonoid",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "div_eq_mul_inv",
   "MulOneClass.toOne",
   "one_mul"],
  "name": "inv_eq_one_div",
  "constType": "Theorem"},
 {"references": ["Or.imp", "id"],
  "name": "Or.imp_left",
  "constType": "Theorem"},
 {"references": ["Mod", "HMod.mk", "Mod.mod"],
  "name": "instHMod",
  "constType": "Definition"},
 {"references":
  ["Not", "propext", "False", "Iff.intro", "absurd", "False.elim"],
  "name": "eq_false",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "if_pos.match_1",
   "Eq",
   "ite",
   "rfl",
   "Decidable.isTrue",
   "Not",
   "absurd",
   "Decidable.isFalse"],
  "name": "if_pos",
  "constType": "Theorem"},
 {"references": [], "name": "OrderedSemiring", "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.le_total.match_1",
   "Or",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "LE.le",
   "Nat.lt_or_ge",
   "Or.inl",
   "Nat.le_of_lt",
   "Or.inr"],
  "name": "Nat.le_total",
  "constType": "Theorem"},
 {"references": ["AddCancelCommMonoid"],
  "name": "AddCancelCommMonoid.toAddLeftCancelMonoid",
  "constType": "Definition"},
 {"references":
  ["CancelCommMonoidWithZero",
   "IsCancelMulZero.mk",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "MonoidWithZero.toMonoid",
   "CommMonoidWithZero.toMonoidWithZero",
   "CancelCommMonoidWithZero.toCommMonoidWithZero",
   "MonoidWithZero.toZero",
   "IsCancelMulZero.toIsLeftCancelMulZero",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "CommMonoid.toCommSemigroup",
   "CommMonoidWithZero.toCommMonoid",
   "CommMonoidWithZero.toZero",
   "CancelCommMonoidWithZero.toCancelMonoidWithZero.proof_1",
   "IsCancelMulZero.toIsRightCancelMulZero"],
  "name": "CancelCommMonoidWithZero.toCancelMonoidWithZero.proof_2",
  "constType": "Theorem"},
 {"references": ["le_of_lt"], "name": "LT.lt.le", "constType": "Theorem"},
 {"references":
  ["Monoid",
   "MulOneClass.one_mul",
   "Units",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits"],
  "name": "Units.instGroupUnits.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "Nat.zero",
   "And.intro",
   "And.casesOn"],
  "name": "Nat.modCore_eq_mod.match_1",
  "constType": "Definition"},
 {"references": [], "name": "HAdd", "constType": "Other"},
 {"references":
  ["Decidable",
   "Not",
   "Decidable.isTrue",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "decide_eq_false.match_1",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Monoid",
   "Nat",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Nat.commSemiring"],
  "name": "Nat.monoid",
  "constType": "Definition"},
 {"references": [], "name": "AddCancelMonoid", "constType": "Other"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.toAddRightCancelSemigroup",
  "constType": "Definition"},
 {"references":
  ["Nat", "Nat.pow.match_1", "Unit", "OfNat.ofNat", "instOfNatNat"],
  "name": "Nat.pred",
  "constType": "Definition"},
 {"references": ["LE.mk", "Nat", "Nat.le"],
  "name": "instLENat",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.min_def",
  "constType": "Definition"},
 {"references": ["MulOneClass", "MulOneClass.one_mul"],
  "name": "one_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Or.rec", "constType": "Other"},
 {"references": [], "name": "NatCast.mk", "constType": "Other"},
 {"references": ["CommMonoid"],
  "name": "CommMonoid.mul_comm",
  "constType": "Definition"},
 {"references": ["Exists", "forall_exists_index.match_1", "Exists.intro"],
  "name": "Exists.imp",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "ite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Eq.rec",
   "Eq.symm",
   "Nat.mod_eq",
   "Not",
   "if_neg",
   "Nat.mod_zero.match_1",
   "False",
   "absurd",
   "Nat.lt_irrefl"],
  "name": "Nat.mod_zero",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "Eq",
   "Bool",
   "Decidable.decide",
   "Bool.true",
   "of_decide_eq_true.match_1",
   "Not",
   "absurd",
   "ne_true_of_eq_false",
   "decide_eq_false"],
  "name": "of_decide_eq_true",
  "constType": "Theorem"},
 {"references": ["le_of_eq"], "name": "Eq.le", "constType": "Theorem"},
 {"references": [], "name": "ExistsAddOfLE.mk", "constType": "Other"},
 {"references":
  ["Preorder",
   "And",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "And.intro",
   "And.casesOn"],
  "name": "lt_irrefl.match_1",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Irreducible",
   "Not",
   "IsUnit",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Or",
   "Irreducible.mk",
   "Irreducible.rec"],
  "name": "Irreducible.casesOn",
  "constType": "Definition"},
 {"references":
  ["Semiring.npow_zero",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_11",
  "constType": "Theorem"},
 {"references": [], "name": "HAdd.mk", "constType": "Other"},
 {"references": [], "name": "Max", "constType": "Other"},
 {"references":
  ["NonUnitalNonAssocSemiring.mul_zero",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_5",
  "constType": "Theorem"},
 {"references": ["Not", "Eq"], "name": "Ne", "constType": "Definition"},
 {"references": [], "name": "AddCommMonoid", "constType": "Other"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.brecOn",
   "Or",
   "Eq",
   "LT.lt",
   "instLTNat",
   "Nat.below",
   "Nat.eq_or_lt_of_le.match_2",
   "Nat.zero",
   "Or.inl",
   "rfl",
   "Nat.succ",
   "Or.inr",
   "Nat.succ_le_succ",
   "Nat.zero_le",
   "absurd",
   "Nat.not_succ_le_zero",
   "Nat.eq_or_lt_of_le.match_1",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.le_of_succ_le_succ",
   "Eq.rec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.eq_or_lt_of_le",
  "constType": "Theorem"},
 {"references":
  ["WellFoundedRelation.mk", "Nat", "Nat.lt", "Nat.lt_wfRel.proof_1"],
  "name": "Nat.lt_wfRel",
  "constType": "Definition"},
 {"references": [], "name": "Div", "constType": "Other"},
 {"references": ["Mul", "Zero", "IsCancelMulZero"],
  "name": "IsCancelMulZero.toIsLeftCancelMulZero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero",
   "Eq.casesOn",
   "HEq",
   "Nat.noConfusion",
   "Eq.refl",
   "Nat.add",
   "HEq.refl"],
  "name": "Nat.eq_zero_of_add_eq_zero.match_1",
  "constType": "Definition"},
 {"references":
  ["LinearOrder.mk",
   "Nat",
   "PartialOrder.mk",
   "Preorder.mk",
   "LE.mk",
   "Nat.le",
   "LT.mk",
   "Nat.lt",
   "Nat.le_refl",
   "Nat.le_trans",
   "Nat.lt_iff_le_not_le",
   "Nat.le_antisymm",
   "instMinNat",
   "Nat.instMaxNat",
   "instOrdNat",
   "Nat.le_total",
   "inferInstance",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Nat.decLe",
   "DecidableEq",
   "instDecidableEqNat",
   "LT.lt",
   "Preorder.toLT",
   "Nat.decLt",
   "Nat.linearOrder.proof_1",
   "Nat.linearOrder.proof_2",
   "Nat.linearOrder.proof_3"],
  "name": "Nat.linearOrder",
  "constType": "Definition"},
 {"references": ["Exists", "Exists.intro", "Exists.casesOn"],
  "name": "Exists.elim.match_1",
  "constType": "Definition"},
 {"references":
  ["CommMonoid",
   "CommSemigroup.mk",
   "Monoid.toSemigroup",
   "CommMonoid.toMonoid",
   "CommMonoid.mul_comm"],
  "name": "CommMonoid.toCommSemigroup",
  "constType": "Definition"},
 {"references": ["Preorder"],
  "name": "Preorder.toLE",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "Eq",
   "ite",
   "And",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Eq.rec",
   "Eq.symm",
   "Nat.mod_eq",
   "Not",
   "if_neg",
   "Nat.div_rec_lemma.match_1",
   "False",
   "absurd",
   "Nat.not_le_of_gt"],
  "name": "Nat.mod_eq_of_lt",
  "constType": "Theorem"},
 {"references": ["Pow"], "name": "Pow.pow", "constType": "Definition"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "implies_congr",
  "constType": "Theorem"},
 {"references": ["SizeOf.mk", "Nat"],
  "name": "instSizeOfNat",
  "constType": "Definition"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.toMulOneClass",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Eq.refl",
   "zpowRec",
   "MulOneClass.toOne",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "MulOneClass.toMul",
   "Inv.mk",
   "Units.mk",
   "Units.inv",
   "Units.val",
   "Units.inv_val",
   "Units.val_inv",
   "OfNat.ofNat",
   "Int",
   "instOfNatInt"],
  "name": "Units.instGroupUnits.proof_8",
  "constType": "Theorem"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.add_le_add_left",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "GT.gt",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.lt_of_lt_of_le",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.mul",
   "Nat.add_lt_add_left",
   "Eq.rec",
   "Nat.succ",
   "Eq",
   "LE.le",
   "instLENat",
   "Nat.mul_le_mul_left",
   "Nat.succ_le_of_lt",
   "Nat.mul_succ"],
  "name": "Nat.mul_lt_mul_of_pos_left",
  "constType": "Theorem"},
 {"references": ["Acc", "_private.Init.WF.0.InvImage.accAux", "rfl"],
  "name": "InvImage.accessible",
  "constType": "Definition"},
 {"references": [], "name": "AddCancelMonoid.mk", "constType": "Other"},
 {"references":
  ["Acc", "Acc.rec", "Eq", "WellFounded.fixF", "Acc.inv", "rfl", "Acc.intro"],
  "name": "WellFounded.fixFEq",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.decidableLT",
  "constType": "Definition"},
 {"references": [], "name": "IsRightCancelMulZero", "constType": "Other"},
 {"references": ["outParam", "HMod"],
  "name": "HMod.hMod",
  "constType": "Definition"},
 {"references": [], "name": "inferInstanceAs", "constType": "Definition"},
 {"references": ["Nat", "Nat.not_succ_le_self"],
  "name": "Nat.lt_irrefl",
  "constType": "Theorem"},
 {"references":
  ["Zero", "NeZero", "Ne.symm", "OfNat.ofNat", "Zero.toOfNat0", "NeZero.out"],
  "name": "NeZero.ne'",
  "constType": "Theorem"},
 {"references": [], "name": "Bool.false", "constType": "Other"},
 {"references":
  ["Mul",
   "Zero",
   "IsLeftCancelMulZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "mul_left_cancel₀"],
  "name": "mul_right_injective₀",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.brecOn",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.below",
   "Nat.le.dest.match_2",
   "Nat.zero",
   "Exists.intro",
   "OfNat.ofNat",
   "instOfNatNat",
   "rfl",
   "Nat.succ",
   "Eq.rec",
   "Eq.symm",
   "Nat.add_comm",
   "absurd",
   "Nat.not_succ_le_zero",
   "Nat.le.dest.match_1",
   "Nat.succ_add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.le_of_succ_le_succ"],
  "name": "Nat.le.dest",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.dvd_antisymm",
   "Nat.gcd",
   "Nat.dvd_gcd",
   "Nat.gcd_dvd_right",
   "Nat.gcd_dvd_left"],
  "name": "Nat.gcd_comm",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq.rec",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq",
   "Nat.mul_one",
   "Nat.mul_comm"],
  "name": "Nat.one_mul",
  "constType": "Theorem"},
 {"references": ["AddSemigroup"],
  "name": "AddSemigroup.add_assoc",
  "constType": "Definition"},
 {"references": [], "name": "Units", "constType": "Other"},
 {"references":
  ["Nat",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Not",
   "Nat.div.inductionOn"],
  "name": "Nat.mod.inductionOn",
  "constType": "Theorem"},
 {"references": ["Nat", "Eq", "Eq.rec", "LE.le", "instLENat", "Nat.le_refl"],
  "name": "Nat.le_of_eq",
  "constType": "Theorem"},
 {"references": ["maxOfLe", "Nat", "instLENat", "Nat.decLe"],
  "name": "Nat.instMaxNat",
  "constType": "Definition"},
 {"references":
  ["Bool",
   "Eq",
   "Bool.false",
   "ne_true_of_eq_false.match_1",
   "Not",
   "Bool.true",
   "Bool.noConfusion",
   "False"],
  "name": "ne_true_of_eq_false",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.min_def",
  "constType": "Definition"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "LE.le",
   "Preorder.toLE",
   "lt_of_lt_of_le.match_2",
   "lt_of_lt_of_le.match_1",
   "And",
   "Not",
   "le_not_le_of_lt",
   "lt_of_le_not_le",
   "le_trans"],
  "name": "lt_of_lt_of_le",
  "constType": "Theorem"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.toZero",
  "constType": "Definition"},
 {"references": [], "name": "IsLeftCancelAdd.mk", "constType": "Other"},
 {"references":
  ["Monoid",
   "MulOneClass.mul_one",
   "Units",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits"],
  "name": "Units.instGroupUnits.proof_3",
  "constType": "Theorem"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
  "constType": "Definition"},
 {"references":
  ["Group",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toMonoid",
   "Group.toDivInvMonoid",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "mul_left_inv",
   "_private.Mathlib.Algebra.Group.Defs.0.inv_eq_of_mul"],
  "name": "mul_right_inv",
  "constType": "Theorem"},
 {"references": ["CanonicallyOrderedAddCommMonoid"],
  "name": "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Iff.intro",
   "Not",
   "And",
   "Or",
   "Decidable.not_and_iff_or_not.match_1",
   "absurd",
   "And.intro",
   "Or.inr",
   "Or.inl",
   "And.comm.match_1",
   "False",
   "Decidable.not_and_iff_or_not.match_2"],
  "name": "Decidable.not_and_iff_or_not",
  "constType": "Theorem"},
 {"references":
  ["Bool",
   "Bool.decEq.match_1",
   "Decidable",
   "Eq",
   "Unit",
   "Decidable.isTrue",
   "Bool.false",
   "rfl",
   "Decidable.isFalse",
   "Bool.true",
   "Bool.noConfusion",
   "False"],
  "name": "Bool.decEq",
  "constType": "Definition"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "Eq.mpr",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "add_comm",
   "le_self_add"],
  "name": "le_add_self",
  "constType": "Theorem"},
 {"references": [], "name": "IsRightCancelAdd", "constType": "Other"},
 {"references": [], "name": "AddRightCancelSemigroup", "constType": "Other"},
 {"references": ["Nat", "eq_false", "LT.lt", "instLTNat", "Nat.lt_irrefl"],
  "name": "Init.Data.Nat.Basic._auxLemma.3",
  "constType": "Theorem"},
 {"references":
  ["Nontrivial.mk",
   "Nat",
   "Exists.intro",
   "Exists",
   "Ne",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.ne_of_lt",
   "Nat.zero_lt_one"],
  "name": "Nat.linearOrderedCommSemiring.proof_5",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Units",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.val",
   "Units.inv",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "mul_assoc",
   "Eq.symm",
   "Units.val_inv",
   "MulOneClass.toOne",
   "one_mul"],
  "name": "Units.instMulOneClassUnits.proof_2",
  "constType": "Theorem"},
 {"references": [], "name": "Exists.intro", "constType": "Other"},
 {"references": [], "name": "HDiv", "constType": "Other"},
 {"references": ["lt_of_lt_of_le"],
  "name": "LT.lt.trans_le",
  "constType": "Theorem"},
 {"references": ["Subtype"], "name": "Subtype.val", "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "Nat.brecOn",
   "Ne",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.below",
   "Nat.sub_ne_zero_of_lt.match_1",
   "absurd",
   "Nat.lt_irrefl",
   "Nat.succ",
   "of_eq_true",
   "Not",
   "Eq",
   "Eq.trans",
   "False",
   "True",
   "congrArg",
   "eq_false'",
   "Nat.noConfusion",
   "not_false_eq_true",
   "Nat.not_lt_zero",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.succ_sub_succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.lt_of_succ_lt_succ"],
  "name": "Nat.sub_ne_zero_of_lt",
  "constType": "Theorem"},
 {"references": ["NonUnitalSemiring"],
  "name": "NonUnitalSemiring.mul_assoc",
  "constType": "Definition"},
 {"references":
  ["Nat", "And.right", "Dvd.dvd", "Nat.instDvdNat", "Nat.gcd", "Nat.gcd_dvd"],
  "name": "Nat.gcd_dvd_right",
  "constType": "Theorem"},
 {"references": ["Iff", "Iff.intro", "Iff.mp", "Iff.mpr"],
  "name": "forall_congr'",
  "constType": "Theorem"},
 {"references": ["Inv"], "name": "Inv.inv", "constType": "Definition"},
 {"references":
  ["DivisionMonoid",
   "DivInvMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivInvOneMonoid.mk",
   "DivInvMonoid.mk",
   "DivInvMonoid.toMonoid",
   "DivInvMonoid.toInv",
   "DivInvMonoid.toDiv",
   "DivInvMonoid.div_eq_mul_inv",
   "DivInvMonoid.zpow",
   "DivInvMonoid.zpow_zero'",
   "DivInvMonoid.zpow_succ'",
   "DivInvMonoid.zpow_neg'",
   "DivisionMonoid.toDivInvOneMonoid.proof_1"],
  "name": "DivisionMonoid.toDivInvOneMonoid",
  "constType": "Definition"},
 {"references": [], "name": "AddCommSemigroup.mk", "constType": "Other"},
 {"references": ["OrderedCancelAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.decidableLT",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Irreducible",
   "Eq",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Eq.refl",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Irreducible.ne_one.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "And.intro",
   "And.casesOn"],
  "name": "Nat.div_rec_lemma.match_1",
  "constType": "Definition"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.add_zero",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toOrd",
  "constType": "Definition"},
 {"references": [], "name": "NonAssocSemiring", "constType": "Other"},
 {"references": ["Decidable.isTrue", "True", "trivial"],
  "name": "instDecidableTrue",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
  "constType": "Definition"},
 {"references": [], "name": "Semiring", "constType": "Other"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toMax",
  "constType": "Definition"},
 {"references": ["Nat", "Eq.refl", "Min.min", "instMinNat"],
  "name": "Nat.linearOrder.proof_1",
  "constType": "Theorem"},
 {"references": ["outParam", "HPow"],
  "name": "HPow.hPow",
  "constType": "Definition"},
 {"references":
  ["Nat", "rfl", "HMul.hMul", "instHMul", "instMulNat", "Nat.succ"],
  "name": "Nat.mul_succ",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.succ",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.casesOn",
   "Nat.zero"],
  "name": "Nat.not_succ_le_zero.match_3",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.inv",
   "Units.val",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "mul_assoc",
   "Eq.symm",
   "Units.inv_val",
   "MulOneClass.toOne",
   "one_mul"],
  "name": "Units.instMulOneClassUnits.proof_3",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.mpr",
   "Nat.zero",
   "OfNat.ofNat",
   "instOfNatNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.zero_mul",
   "Nat.succ",
   "congr",
   "congrArg",
   "Eq.trans",
   "Nat.succ_mul",
   "congrFun",
   "Nat.add_assoc",
   "Nat.add_left_comm"],
  "name": "Nat.left_distrib",
  "constType": "Theorem"},
 {"references":
  ["CommSemigroup",
   "Zero",
   "IsLeftCancelMulZero",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "IsRightCancelMulZero.mk",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "mul_left_cancel₀",
   "Eq.trans",
   "mul_comm"],
  "name": "IsLeftCancelMulZero.to_isRightCancelMulZero",
  "constType": "Theorem"},
 {"references": ["outParam", "HDiv"],
  "name": "HDiv.hDiv",
  "constType": "Definition"},
 {"references": [], "name": "CommMonoidWithZero.mk", "constType": "Other"},
 {"references": [], "name": "Decidable.isFalse", "constType": "Other"},
 {"references":
  ["Nat", "Unit", "Nat.zero", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Nat.zero_le.match_1",
  "constType": "Definition"},
 {"references": ["Nat", "invImage", "Nat.lt_wfRel"],
  "name": "measure",
  "constType": "Definition"},
 {"references": ["lt_of_le_of_ne"],
  "name": "LE.le.lt_of_ne",
  "constType": "Theorem"},
 {"references": ["True.intro"], "name": "trivial", "constType": "Definition"},
 {"references":
  ["Nat",
   "Or",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "Or.inl",
   "Or.inr",
   "Or.casesOn"],
  "name": "Nat.le_total.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Iff.mp",
   "Not",
   "LE.le",
   "instLENat",
   "LT.lt",
   "instLTNat",
   "Iff.intro",
   "Nat.gt_of_not_le",
   "Nat.not_le_of_gt"],
  "name": "Nat.lt_of_not_ge",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "Nat.brecOn",
   "LE.le",
   "instLENat",
   "Nat.below",
   "Nat.le_of_ble_eq_true.match_1",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero_le",
   "Nat.succ",
   "Nat.succ_le_succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.le_of_ble_eq_true",
  "constType": "Theorem"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.mul_zero",
  "constType": "Definition"},
 {"references":
  ["One",
   "Mul",
   "Nat",
   "Nat.brecOn",
   "Nat.below",
   "npowRec.match_1",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "npowRec",
  "constType": "Definition"},
 {"references": [], "name": "OrderedSemiring.mk", "constType": "Other"},
 {"references": ["OfNat", "Zero.mk", "OfNat.ofNat"],
  "name": "Zero.ofOfNat0",
  "constType": "Definition"},
 {"references": ["Preorder", "LE.le", "Preorder.toLE", "Not"],
  "name": "lt_of_le_not_le.match_1",
  "constType": "Definition"},
 {"references": ["CommSemiring"],
  "name": "CommSemiring.toSemiring",
  "constType": "Definition"},
 {"references": [], "name": "DivisionCommMonoid.mk", "constType": "Other"},
 {"references": [], "name": "OrderedCancelAddCommMonoid", "constType": "Other"},
 {"references": ["CanonicallyOrderedAddCommMonoid"],
  "name": "CanonicallyOrderedAddCommMonoid.exists_add_of_le",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "Or.casesOn",
   "Eq",
   "LT.lt",
   "Preorder.toLT",
   "Or",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "Decidable.eq_or_lt_of_le",
   "Eq.ndrec",
   "le_refl",
   "of_eq_true",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "MulZeroClass.toZero",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "MulZeroClass.zero_mul",
   "Mathlib.Order.Basic._auxLemma.1",
   "LT.lt.le",
   "mul_lt_mul_of_pos_left",
   "StrictOrderedSemiring.toPosMulStrictMono"],
  "name": "StrictOrderedSemiring.toOrderedSemiring'.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.le_trans.match_1",
   "Nat.le",
   "Nat.succ",
   "Nat.le.step",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.le_trans",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalSemiring",
   "SemigroupWithZero.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalSemiring.mul_assoc",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "NonUnitalSemiring.toSemigroupWithZero",
  "constType": "Definition"},
 {"references": ["Monoid", "Units"],
  "name": "Units.val",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "NonUnitalNonAssocSemiring.mul_zero",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "inferInstanceAs"],
  "name": "CommSemiring.toCommMonoidWithZero.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.add_assoc",
   "Nat.add_comm"],
  "name": "Nat.add_left_comm",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Nat",
   "Units",
   "Eq.refl",
   "zpowRec",
   "MulOneClass.toOne",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "MulOneClass.toMul",
   "Inv.mk",
   "Units.mk",
   "Units.inv",
   "Units.val",
   "Units.inv_val",
   "Units.val_inv",
   "Int.ofNat",
   "Nat.succ"],
  "name": "Units.instGroupUnits.proof_9",
  "constType": "Theorem"},
 {"references": ["And", "And.intro", "And.casesOn"],
  "name": "And.symm.match_1",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "propext",
   "Irreducible",
   "And",
   "Not",
   "IsUnit",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Or",
   "irreducible_iff"],
  "name": "Mathlib.Algebra.Associated._auxLemma.3",
  "constType": "Theorem"},
 {"references":
  ["IsLeftCancelMulZero.mk",
   "Nat",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "CommMonoid.toMonoid",
   "CommMonoidWithZero.toCommMonoid",
   "CommMonoidWithZero.mk",
   "inferInstance",
   "CommMonoidWithZero",
   "CommSemiring.toCommMonoidWithZero",
   "Nat.commSemiring",
   "CommMonoidWithZero.toZero",
   "CommMonoidWithZero.zero_mul",
   "CommMonoidWithZero.mul_zero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Nat.eq_of_mul_eq_mul_left",
   "Nat.pos_of_ne_zero"],
  "name": "Nat.cancelCommMonoidWithZero.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.ge_of_not_lt",
   "absurd",
   "False",
   "Nat.not_le_of_gt",
   "Nat.mul_lt_mul_of_pos_left"],
  "name": "Nat.le_of_mul_le_mul_left",
  "constType": "Theorem"},
 {"references": ["OrderedAddCommMonoid"],
  "name": "OrderedAddCommMonoid.add_le_add_left",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.pred",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.zero",
   "Eq.ndrec",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "Nat.zero_mul",
   "congrFun",
   "Nat.zero_sub",
   "eq_self",
   "Eq.symm",
   "Nat.succ",
   "Eq.mpr",
   "id",
   "Eq.refl",
   "Nat.pred_succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ_mul",
   "Nat.add_sub_cancel"],
  "name": "Nat.mul_pred_left",
  "constType": "Theorem"},
 {"references": [], "name": "id", "constType": "Definition"},
 {"references": ["Not", "Iff", "Iff.mpr"],
  "name": "instDecidableIff.proof_3",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.compare_eq_compareOfLessAndEq",
  "constType": "Definition"},
 {"references":
  ["Semiring.natCast_succ",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_10",
  "constType": "Theorem"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddCancelCommMonoid.mk",
   "AddLeftCancelMonoid.mk",
   "AddLeftCancelSemigroup.mk",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_1",
   "AddMonoid.toZero",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_2",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_3",
   "AddMonoid.nsmul",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_4",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_5",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_6"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_comm",
   "Nat.add_sub_of_le"],
  "name": "Nat.sub_add_cancel",
  "constType": "Theorem"},
 {"references":
  ["Group",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toMonoid",
   "Group.toDivInvMonoid",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "left_inv_eq_right_inv",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "inv_mul_self"],
  "name": "_private.Mathlib.Algebra.Group.Defs.0.inv_eq_of_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Sub.mk", "constType": "Other"},
 {"references": ["Sub.mk", "Nat", "Nat.sub"],
  "name": "instSubNat",
  "constType": "Definition"},
 {"references": ["eq_false", "And", "False", "And.left"],
  "name": "false_and",
  "constType": "Theorem"},
 {"references": ["WellFoundedRelation"],
  "name": "WellFoundedRelation.wf",
  "constType": "Definition"},
 {"references":
  ["Nat", "rfl", "HAdd.hAdd", "instHAdd", "instAddNat", "Nat.succ"],
  "name": "Nat.add_succ",
  "constType": "Theorem"},
 {"references": ["SizeOf", "measure", "SizeOf.sizeOf"],
  "name": "sizeOfWFRel",
  "constType": "Definition"},
 {"references": [], "name": "And.rec", "constType": "Other"},
 {"references":
  ["Nat",
   "id",
   "Eq",
   "Nat.modCore",
   "ite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.modCore._unary",
   "PSigma.mk",
   "Eq.trans",
   "WellFounded.fix",
   "PSigma",
   "invImage",
   "PSigma.casesOn",
   "SizeOf.sizeOf",
   "instSizeOfNat",
   "instWellFoundedRelation",
   "Nat.modCore._unary.proof_1",
   "dite",
   "Nat.div_rec_lemma",
   "Not",
   "WellFounded.fix_eq",
   "Eq.refl"],
  "name": "_private.Init.Data.Nat.Div.0.Nat.modCore._eq_1",
  "constType": "Theorem"},
 {"references":
  ["PartialOrder.le_antisymm",
   "Nat",
   "LinearOrder.toPartialOrder",
   "Nat.linearOrder"],
  "name": "Nat.linearOrderedCommSemiring.proof_4",
  "constType": "Theorem"},
 {"references": ["Or", "Not", "Or.inl", "Or.inr", "Or.casesOn"],
  "name": "Decidable.not_and_iff_or_not.match_2",
  "constType": "Definition"},
 {"references": [], "name": "AddLeftCancelMonoid.mk", "constType": "Other"},
 {"references": [], "name": "Bot.mk", "constType": "Other"},
 {"references":
  ["AddMonoidWithOne",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "OfNat.ofNat",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "Nat",
   "instOfNatNat",
   "Nat.cast",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.cast_one",
   "instAddNat",
   "Nat.cast_add",
   "congrArg",
   "of_decide_eq_true",
   "instDecidableEqNat",
   "Bool",
   "Bool.true"],
  "name": "one_add_one_eq_two",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.below",
   "Nat.add_assoc.match_1",
   "rfl",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "of_eq_true",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "congrFun",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.left_distrib",
   "eq_self"],
  "name": "Nat.mul_assoc",
  "constType": "Theorem"},
 {"references":
  ["PartialOrder",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Or.symm",
   "LT.lt",
   "Preorder.toLT",
   "Eq",
   "Decidable.lt_or_eq_of_le"],
  "name": "Decidable.eq_or_lt_of_le",
  "constType": "Theorem"},
 {"references": [], "name": "LinearOrderedCommSemiring", "constType": "Other"},
 {"references":
  ["Nat",
   "Iff.intro",
   "LT.lt",
   "instLTNat",
   "And",
   "LE.le",
   "instLENat",
   "Not",
   "And.intro",
   "Nat.le_of_lt",
   "Nat.not_le_of_gt",
   "Nat.lt_iff_le_not_le.match_1",
   "Nat.lt_of_not_ge"],
  "name": "Nat.lt_iff_le_not_le",
  "constType": "Theorem"},
 {"references": [], "name": "AddCommMagma.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Or",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "GT.gt",
   "instLTNat",
   "Or.inl",
   "Or.inr",
   "Or.casesOn"],
  "name": "Nat.mod_eq_sub_mod.match_1",
  "constType": "Definition"},
 {"references": ["Mul", "Zero", "IsLeftCancelMulZero"],
  "name": "IsLeftCancelMulZero.mul_left_cancel_of_ne_zero",
  "constType": "Definition"},
 {"references":
  ["Mul",
   "Zero",
   "Preorder",
   "CovariantClass",
   "Subtype",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "HMul.hMul",
   "instHMul",
   "Subtype.val"],
  "name": "PosMulStrictMono",
  "constType": "Definition"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow_zero'",
  "constType": "Definition"},
 {"references":
  ["Nat.Prime",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Irreducible.ne_zero",
   "Semiring.toMonoidWithZero",
   "Nat.semiring",
   "rfl"],
  "name": "Nat.not_prime_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Iff.intro",
   "IsUnit",
   "Nat.monoid",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.isUnit_iff.match_2",
   "Units",
   "Units.val",
   "Nat.isUnit_iff.match_1",
   "One.toOfNat1",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommGroup.toDivisionCommMonoid",
   "Units.instCommGroupUnits",
   "Nat.commMonoid",
   "Nat.units_eq_one",
   "rfl",
   "Eq.rec",
   "Exists.intro",
   "Eq.symm"],
  "name": "Nat.isUnit_iff",
  "constType": "Theorem"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "Iff.mpr",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "le_iff_exists_add",
   "Exists.intro",
   "Eq.symm",
   "AddZeroClass.toZero",
   "zero_add"],
  "name": "zero_le",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.decidableEq",
  "constType": "Definition"},
 {"references": [], "name": "Pow.mk", "constType": "Other"},
 {"references": [], "name": "AddCommSemigroup", "constType": "Other"},
 {"references": ["AddCancelMonoid"],
  "name": "AddCancelMonoid.add_right_cancel",
  "constType": "Definition"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddCommMonoid.add_comm",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_6",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.ndrec"], "name": "Eq.subst", "constType": "Theorem"},
 {"references":
  ["Nat", "LE.le", "instLENat", "Nat.zero", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.eq_or_lt_of_le.match_2",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.eq_zero_of_mul_eq_zero.match_1",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Or",
   "Or.inl",
   "rfl",
   "Eq.mpr",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.succ_mul",
   "Or.inr",
   "Nat.eq_zero_of_add_eq_zero_left"],
  "name": "Nat.eq_zero_of_mul_eq_zero",
  "constType": "Theorem"},
 {"references": ["SizeOf", "sizeOfWFRel"],
  "name": "instWellFoundedRelation",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.succ",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.not_succ_le_zero.match_3",
   "False",
   "Nat.not_succ_le_zero.match_1",
   "Nat.not_succ_le_zero.match_2"],
  "name": "Nat.not_succ_le_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.Prime",
   "Nat.Prime.two_le.match_1",
   "LE.le",
   "instLENat",
   "OfNat.ofNat",
   "instOfNatNat",
   "False.elim",
   "Nat.not_prime_zero",
   "Nat.not_prime_one",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "le_add_self",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "Nat.canonicallyOrderedCommSemiring"],
  "name": "Nat.Prime.two_le",
  "constType": "Theorem"},
 {"references": ["Semiring"],
  "name": "Semiring.npow_zero",
  "constType": "Definition"},
 {"references": ["Decidable", "Not", "Decidable.casesOn"],
  "name": "dite",
  "constType": "Definition"},
 {"references": ["LE", "DecidableRel", "LE.le", "Min.mk", "ite"],
  "name": "minOfLe",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.dvd_add.match_1",
   "LE.le",
   "instLENat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.le_of_dvd.match_1",
   "False.elim",
   "Eq.mp",
   "False",
   "Init.Data.Nat.Basic._auxLemma.3",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.mul_one",
   "Nat.mul_le_mul_left",
   "Nat.succ_pos"],
  "name": "Nat.le_of_dvd",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Eq",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Nat.dvd_add_iff_right.match_1",
  "constType": "Definition"},
 {"references": [],
  "name": "LinearOrderedCommSemiring.mk",
  "constType": "Other"},
 {"references":
  ["Nat",
   "Not",
   "LE.le",
   "instLENat",
   "Nat.gt_of_not_le.match_1",
   "Or",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "GT.gt",
   "Nat.lt_or_ge",
   "absurd"],
  "name": "Nat.gt_of_not_le",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.mul.match_1",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.mul",
  "constType": "Definition"},
 {"references": [], "name": "InvOneClass", "constType": "Other"},
 {"references": ["Nat", "LT.lt", "instLTNat", "Ne.symm", "Nat.ne_of_lt"],
  "name": "Nat.ne_of_gt",
  "constType": "Theorem"},
 {"references": [], "name": "AddMonoidWithOne", "constType": "Other"},
 {"references": ["AddCommSemigroup"],
  "name": "AddCommSemigroup.add_comm",
  "constType": "Definition"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.natCast_succ",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Nat.eq_zero_of_zero_dvd.match_1",
  "constType": "Definition"},
 {"references": ["LE"], "name": "LE.le", "constType": "Definition"},
 {"references":
  ["Monoid",
   "MulOneClass.mk",
   "Monoid.toOne",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Monoid.one_mul",
   "Monoid.mul_one"],
  "name": "Monoid.toMulOneClass",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.propIntro",
   "Eq",
   "Nat.succ",
   "Nat.noConfusion",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "HEq.refl"],
  "name": "Nat.succ.injEq",
  "constType": "Theorem"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toOrd",
  "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocSemiring.left_distrib",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_2",
  "constType": "Theorem"},
 {"references": [], "name": "Ordering.eq", "constType": "Other"},
 {"references": [], "name": "AddSemigroup.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Exists.intro",
   "Eq",
   "Eq.refl",
   "Exists.casesOn",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Nat.dvd_add_iff_right.match_2",
  "constType": "Definition"},
 {"references":
  ["Decidable", "Decidable.byCases", "Or", "Not", "Or.inl", "Or.inr"],
  "name": "Decidable.em",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "LinearOrderedSemiring",
   "Nat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Nat.linearOrderedCommSemiring"],
  "name": "Nat.linearOrderedSemiring",
  "constType": "Definition"},
 {"references": ["Not", "False.rec", "False"],
  "name": "absurd",
  "constType": "Definition"},
 {"references": [], "name": "IsCancelAdd.mk", "constType": "Other"},
 {"references": ["Nat.zero_add"],
  "name": "Nat.mul_one",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "rfl",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "Nat.succ"],
  "name": "Nat.pow_succ",
  "constType": "Theorem"},
 {"references":
  ["Group",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toMonoid",
   "Group.toDivInvMonoid",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "mul_assoc",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "mul_right_inv",
   "MulOneClass.toOne",
   "one_mul"],
  "name": "mul_inv_cancel_left",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "Decidable.isTrue",
   "Not",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "of_decide_eq_true.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Trans", "constType": "Other"},
 {"references": ["LE", "DecidableRel", "LE.le", "Max.mk", "ite"],
  "name": "maxOfLe",
  "constType": "Definition"},
 {"references": [], "name": "CommSemigroup", "constType": "Other"},
 {"references": [], "name": "Eq.refl", "constType": "Other"},
 {"references": ["Preorder", "Eq", "Eq.le", "Eq.symm"],
  "name": "Eq.ge",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.eq_zero_of_mul_eq_zero.match_1",
  "constType": "Definition"},
 {"references": ["WellFounded", "WellFounded.fixFEq", "WellFounded.apply"],
  "name": "WellFounded.fix_eq",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.nsmul",
  "constType": "Definition"},
 {"references": ["Subtype", "Subtype.property"],
  "name": "Subtype.prop",
  "constType": "Theorem"},
 {"references": [], "name": "SizeOf", "constType": "Other"},
 {"references":
  ["Bool", "Eq", "Eq.ndrec", "Bool.noConfusionType", "Bool.casesOn"],
  "name": "Bool.noConfusion",
  "constType": "Definition"},
 {"references": [], "name": "HPow.mk", "constType": "Other"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "congrFun",
  "constType": "Theorem"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.toZero",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalCommSemiring.mk", "constType": "Other"},
 {"references": [], "name": "And.intro", "constType": "Other"},
 {"references":
  ["Nat",
   "WellFounded.fix",
   "WellFoundedRelation.rel",
   "measure",
   "id",
   "Nat.gcd.proof_1",
   "_private.Init.Data.Nat.Gcd.0.Nat.gcdF"],
  "name": "Nat.gcd",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero"],
  "name": "Nat.gcd.induction.match_1",
  "constType": "Definition"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.toNonUnitalNonAssocSemiring",
  "constType": "Definition"},
 {"references": [], "name": "propext", "constType": "Axiom"},
 {"references": ["Iff.intro"],
  "name": "instDecidableIff.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.eq_zero_of_add_eq_zero.match_1",
   "And",
   "And.intro",
   "rfl",
   "Nat.noConfusion"],
  "name": "Nat.eq_zero_of_add_eq_zero",
  "constType": "Theorem"},
 {"references": ["CommMonoidWithZero"],
  "name": "CommMonoidWithZero.zero_mul",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.Prime",
   "OfNat.ofNat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero"],
  "name": "Nat.Prime.two_le.match_1",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.decidableLE",
  "constType": "Definition"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.mul_lt_mul_of_pos_left",
  "constType": "Definition"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "le_not_le_of_lt.match_1",
   "And",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "Iff.mp",
   "lt_iff_le_not_le"],
  "name": "le_not_le_of_lt",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocSemiring",
   "MulZeroClass.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "NonUnitalNonAssocSemiring.toMulZeroClass",
  "constType": "Definition"},
 {"references": ["Div", "HDiv.mk", "Div.div"],
  "name": "instHDiv",
  "constType": "Definition"},
 {"references": ["CommMonoidWithZero"],
  "name": "CommMonoidWithZero.mul_zero",
  "constType": "Definition"},
 {"references": ["One"], "name": "One.one", "constType": "Definition"},
 {"references":
  ["Monoid",
   "Irreducible",
   "Eq",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Irreducible.ne_one.match_1",
   "False",
   "not_irreducible_one"],
  "name": "Irreducible.ne_one",
  "constType": "Theorem"},
 {"references": [], "name": "Units.mk", "constType": "Other"},
 {"references": [], "name": "CovariantClass.mk", "constType": "Other"},
 {"references":
  ["Preorder", "LT.lt", "Preorder.toLT", "LE.le", "Preorder.toLE"],
  "name": "lt_of_lt_of_le.match_2",
  "constType": "Definition"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "le_not_le_of_lt.match_1",
   "LE.le",
   "Preorder.toLE",
   "And.left",
   "Not",
   "le_not_le_of_lt"],
  "name": "le_of_lt",
  "constType": "Theorem"},
 {"references": ["Div"], "name": "Div.div", "constType": "Definition"},
 {"references": ["AddCommMonoid"],
  "name": "AddCommMonoid.add_comm",
  "constType": "Definition"},
 {"references": [], "name": "Iff", "constType": "Other"},
 {"references": [], "name": "StrictOrderedSemiring.mk", "constType": "Other"},
 {"references": [], "name": "PProd", "constType": "Other"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Nat.gcd_rec.match_1",
  "constType": "Definition"},
 {"references": ["Bool", "Eq", "Bool.false", "Bool.true", "Bool.casesOn"],
  "name": "ne_true_of_eq_false.match_1",
  "constType": "Definition"},
 {"references":
  ["SemigroupWithZero",
   "Iff.intro",
   "Dvd.dvd",
   "semigroupDvd",
   "SemigroupWithZero.toSemigroup",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "SemigroupWithZero.toZero",
   "Eq",
   "eq_zero_of_zero_dvd",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Exists.intro",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "of_eq_true",
   "MulZeroClass.toMul",
   "SemigroupWithZero.toMulZeroClass",
   "MulZeroClass.toZero",
   "Eq.trans",
   "True",
   "congrArg",
   "MulZeroClass.mul_zero",
   "eq_self"],
  "name": "zero_dvd_iff",
  "constType": "Theorem"},
 {"references": [], "name": "PartialOrder.mk", "constType": "Other"},
 {"references": ["PartialOrder"],
  "name": "PartialOrder.toPreorder",
  "constType": "Definition"},
 {"references": ["outParam", "Trans"],
  "name": "Trans.trans",
  "constType": "Definition"},
 {"references": [], "name": "Acc.rec", "constType": "Other"},
 {"references":
  ["AddZeroClass",
   "LT",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "LT.lt",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Trans.trans",
   "Eq",
   "instTransEq",
   "Eq.symm",
   "add_zero",
   "add_lt_add_left"],
  "name": "lt_add_of_pos_right",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Or",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "Or.inl",
   "Or.inr",
   "Or.casesOn"],
  "name": "Nat.gt_of_not_le.match_1",
  "constType": "Definition"},
 {"references": ["Min"], "name": "Min.min", "constType": "Definition"},
 {"references": ["AddCommMagma"],
  "name": "AddCommMagma.add_comm",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Semiring",
   "Nat",
   "CommSemiring.toSemiring",
   "Nat.commSemiring"],
  "name": "Nat.semiring",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.zero", "Nat.succ", "Nat.rec"],
  "name": "Nat.casesOn",
  "constType": "Definition"},
 {"references": [], "name": "OrderBot.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Or",
   "Not",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "Or.inl",
   "Or.inr",
   "Or.casesOn"],
  "name": "Nat.mod_lt.match_1",
  "constType": "Definition"},
 {"references": [],
  "name": "OrderedCancelAddCommMonoid.mk",
  "constType": "Other"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.toSemiring",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_assoc",
   "Nat.add_comm",
   "Eq.symm"],
  "name": "Nat.add_right_comm",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.mod.match_1",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.modCore"],
  "name": "Nat.mod",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.below",
   "Nat.zero_add.match_1",
   "Unit",
   "rfl",
   "Nat.succ",
   "congrArg",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.zero_add",
  "constType": "Theorem"},
 {"references": ["AddRightCancelSemigroup"],
  "name": "AddRightCancelSemigroup.add_right_cancel",
  "constType": "Definition"},
 {"references": [], "name": "NatPow.mk", "constType": "Other"},
 {"references": ["outParam", "HSub"],
  "name": "HSub.hSub",
  "constType": "Definition"},
 {"references": ["AddSemigroup"],
  "name": "AddSemigroup.toAdd",
  "constType": "Definition"},
 {"references": ["Function.Injective", "mt", "Eq"],
  "name": "Function.Injective.ne",
  "constType": "Theorem"},
 {"references": ["Monoid", "Units"],
  "name": "Units.inv_val",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Decidable.isTrue",
   "Not",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "instDecidableAnd.match_1",
  "constType": "Definition"},
 {"references":
  ["DivisionMonoid",
   "of_eq_true",
   "Eq",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "DivisionMonoid.toDivInvMonoid",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "Eq.trans",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toMonoid",
   "True",
   "congr",
   "congrArg",
   "div_eq_mul_inv",
   "mul_inv_rev",
   "congrFun",
   "InvolutiveInv.toInv",
   "DivisionMonoid.toInvolutiveInv",
   "inv_inv",
   "eq_self"],
  "name": "inv_div",
  "constType": "Theorem"},
 {"references": ["Not", "Iff.intro", "absurd"],
  "name": "instDecidableIff.proof_4",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "NeZero.mk",
   "Zero.ofOfNat0",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "Nat.succ_ne_zero"],
  "name": "NeZero.succ",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "dite",
   "Decidable",
   "LE.le",
   "instLENat",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "instDecidableEqBool",
   "Decidable.isTrue",
   "Nat.le_of_ble_eq_true",
   "Not",
   "Decidable.isFalse",
   "Nat.not_le_of_not_ble_eq_true"],
  "name": "Nat.decLe",
  "constType": "Definition"},
 {"references": [], "name": "ContravariantClass", "constType": "Other"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "Eq.symm",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Iff.intro",
   "Nat.Prime",
   "And",
   "LE.le",
   "instLENat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Or",
   "Eq",
   "And.intro",
   "Nat.Prime.two_le",
   "Nat.Prime.eq_one_or_self_of_dvd",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "Irreducible.mk",
   "Nat.monoid",
   "mt",
   "IsUnit",
   "Iff.mp",
   "Nat.isUnit_iff",
   "LT.lt.ne'",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Eq.mpr",
   "id",
   "congr",
   "congrArg",
   "Mathlib.Data.Nat.Prime._auxLemma.1",
   "Or.imp_right",
   "Eq.ndrec",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "CancelMonoidWithZero.toMonoidWithZero",
   "CancelCommMonoidWithZero.toCancelMonoidWithZero",
   "Nat.cancelCommMonoidWithZero",
   "Eq.refl",
   "Eq.symm",
   "propext",
   "mul_right_inj'",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "Nat.canonicallyOrderedCommSemiring",
   "pos_of_gt",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "MulOneClass.toOne",
   "mul_one",
   "And.right",
   "dvd_mul_right",
   "Nat.semigroup",
   "LT.lt.trans_le",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "one_lt_two",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.orderedSemiring",
   "NeZero.succ",
   "Nat.zero",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddCancelCommMonoid.toAddCancelMonoid",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "And.left"],
  "name": "Nat.prime_def_lt''",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "Nat.modCore",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "Nat.zero",
   "Eq.ndrec",
   "Eq.mpr",
   "ite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "id",
   "Eq.refl",
   "_private.Init.Data.Nat.Div.0.Nat.modCore._eq_1",
   "if_neg",
   "Nat.modCore_eq_mod.match_1",
   "False",
   "Nat.lt_irrefl",
   "Nat.lt_of_lt_of_le",
   "Eq.symm",
   "Nat.succ"],
  "name": "Nat.modCore_eq_mod",
  "constType": "Theorem"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.toZero",
  "constType": "Definition"},
 {"references": [], "name": "LE", "constType": "Other"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.add_assoc.match_1",
  "constType": "Definition"},
 {"references": ["Pow", "HPow.mk", "Pow.pow"],
  "name": "instHPow",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.add.match_1",
   "Nat.zero",
   "Nat.succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.add",
  "constType": "Definition"},
 {"references": ["CommMagma", "CommMagma.mul_comm"],
  "name": "mul_comm",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "CommMonoid",
   "inferInstanceAs",
   "CommSemiring.toCommMonoid",
   "NonUnitalCommSemiring.mk",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "CommMonoid.mul_comm"],
  "name": "CommSemiring.toNonUnitalCommSemiring",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalCommSemiring", "constType": "Other"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.pow_succ",
   "Nat.mul_comm"],
  "name": "Nat.pow_succ'",
  "constType": "Theorem"},
 {"references":
  ["OrderedSemiring",
   "OrderedAddCommMonoid.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "OrderedSemiring.toSemiring",
   "OrderedSemiring.toPartialOrder",
   "OrderedSemiring.add_le_add_left"],
  "name": "OrderedSemiring.toOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.zero_add",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Eq.refl",
   "HDiv.hDiv",
   "instHDiv",
   "Div.mk",
   "DivInvMonoid.div'",
   "Monoid.mk",
   "Semigroup.mk",
   "MulOneClass.toMul",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "Units.ext",
   "HMul.hMul",
   "instHMul",
   "mul_assoc",
   "Units.val",
   "MulOneClass.toOne",
   "MulOneClass.one_mul",
   "MulOneClass.mul_one",
   "npowRec",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Inv.mk",
   "Units.mk",
   "Units.inv",
   "Units.inv_val",
   "Units.val_inv"],
  "name": "Units.instGroupUnits.proof_7",
  "constType": "Theorem"},
 {"references": [], "name": "CommMagma", "constType": "Other"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.decidableLE",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.rec",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.zero",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.zero_add",
   "eq_self",
   "Nat.succ",
   "Ne",
   "Eq.mpr",
   "Nat.pred",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.sub_succ",
   "Nat.succ_add",
   "Eq.symm",
   "Nat.add_succ",
   "Nat.succ_pred",
   "Nat.le_of_succ_le",
   "Nat.sub_ne_zero_of_lt"],
  "name": "Nat.add_sub_of_le",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.below",
   "Nat.add_assoc.match_1",
   "rfl",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "congrArg",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.add_assoc",
  "constType": "Theorem"},
 {"references":
  ["CommGroup",
   "DivisionMonoid",
   "Group.toDivisionMonoid",
   "CommGroup.toGroup",
   "DivisionCommMonoid.mk",
   "DivisionMonoid.mk",
   "Group.toDivInvMonoid",
   "DivisionMonoid.inv_inv",
   "DivisionMonoid.mul_inv_rev",
   "DivisionMonoid.inv_eq_of_mul",
   "CommGroup.mul_comm"],
  "name": "CommGroup.toDivisionCommMonoid",
  "constType": "Definition"},
 {"references": ["CancelMonoidWithZero"],
  "name": "CancelMonoidWithZero.toMonoidWithZero",
  "constType": "Definition"},
 {"references": [], "name": "Mod.mk", "constType": "Other"},
 {"references": ["Preorder", "LT.lt", "Preorder.toLT"],
  "name": "le_not_le_of_lt.match_1",
  "constType": "Definition"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.mul_one",
  "constType": "Definition"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.toInv",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Ne",
   "Nat.Coprime",
   "Iff.mpr",
   "Nat.Prime",
   "And",
   "LE.le",
   "instLENat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Eq",
   "Nat.prime_def_lt",
   "And.intro",
   "Nat.Coprime.eq_one_of_dvd",
   "Nat.Coprime.symm",
   "Eq.ndrec",
   "False",
   "LT.lt.ne'",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "Eq.mp",
   "Zero.toOfNat0",
   "SemigroupWithZero.toZero",
   "NonUnitalSemiring.toSemigroupWithZero",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "CommSemiring.toNonUnitalCommSemiring",
   "Nat.commSemiring",
   "semigroupDvd",
   "SemigroupWithZero.toSemigroup",
   "Eq.refl",
   "propext",
   "zero_dvd_iff",
   "Eq.symm"],
  "name": "Nat.prime_of_coprime",
  "constType": "Theorem"},
 {"references":
  ["Preorder.le_refl",
   "Nat",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Nat.linearOrder"],
  "name": "Nat.linearOrderedCommSemiring.proof_1",
  "constType": "Theorem"},
 {"references": ["Zero"], "name": "Zero.zero", "constType": "Definition"},
 {"references": ["WellFounded", "WellFounded.fixF", "WellFounded.apply"],
  "name": "WellFounded.fix",
  "constType": "Definition"},
 {"references": ["Or", "Or.inl", "Or.inr", "Or.rec"],
  "name": "Or.casesOn",
  "constType": "Definition"},
 {"references": [], "name": "Preorder", "constType": "Other"},
 {"references": [], "name": "DivisionMonoid.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.beq",
   "Bool.true",
   "Nat.brecOn",
   "Nat.below",
   "Nat.eq_of_beq_eq_true.match_1",
   "Nat.zero",
   "rfl",
   "Nat.succ",
   "Bool.noConfusion",
   "Eq.rec",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.eq_of_beq_eq_true",
  "constType": "Theorem"},
 {"references":
  ["WellFounded.intro",
   "Nat",
   "Nat.lt",
   "Nat.rec",
   "Acc",
   "Acc.intro",
   "OfNat.ofNat",
   "instOfNatNat",
   "absurd",
   "Nat.not_lt_zero",
   "Nat.succ",
   "Or",
   "Eq",
   "LT.lt",
   "instLTNat",
   "Nat.lt_wfRel.match_1",
   "Eq.ndrec",
   "Acc.inv",
   "Nat.eq_or_lt_of_le",
   "Nat.le_of_succ_le_succ"],
  "name": "Nat.lt_wfRel.proof_1",
  "constType": "Theorem"},
 {"references": ["congrArg"], "name": "congr_arg", "constType": "Theorem"},
 {"references":
  ["Nat", "And.left", "Dvd.dvd", "Nat.instDvdNat", "Nat.gcd", "Nat.gcd_dvd"],
  "name": "Nat.gcd_dvd_left",
  "constType": "Theorem"},
 {"references": [], "name": "AddCommMagma", "constType": "Other"},
 {"references": [], "name": "IsCancelMulZero.mk", "constType": "Other"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddMonoid.nsmul_zero",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_4",
  "constType": "Theorem"},
 {"references": ["CommMagma"],
  "name": "CommMagma.mul_comm",
  "constType": "Definition"},
 {"references": [], "name": "Nat", "constType": "Other"},
 {"references": ["id", "False"], "name": "not_false", "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.beq",
   "Bool.false",
   "Nat.brecOn",
   "False",
   "Nat.below",
   "Nat.ne_of_beq_eq_false.match_1",
   "Nat.zero",
   "Bool.noConfusion",
   "Nat.succ",
   "Nat.noConfusion",
   "absurd",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.ne_of_beq_eq_false",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Iff.intro",
   "Irreducible",
   "And",
   "Not",
   "IsUnit",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Or",
   "And.intro",
   "Irreducible.not_unit",
   "Irreducible.isUnit_or_isUnit'",
   "Irreducible.mk",
   "And.left",
   "And.right"],
  "name": "irreducible_iff",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.le.refl"],
  "name": "Nat.le_refl",
  "constType": "Theorem"},
 {"references": ["SizeOf"], "name": "SizeOf.sizeOf", "constType": "Definition"},
 {"references": ["WellFoundedRelation"],
  "name": "WellFoundedRelation.rel",
  "constType": "Definition"},
 {"references": ["DivisionCommMonoid"],
  "name": "DivisionCommMonoid.toDivisionMonoid",
  "constType": "Definition"},
 {"references": [], "name": "AddCommMonoid.mk", "constType": "Other"},
 {"references": ["Eq", "Eq.rec", "Eq.symm"],
  "name": "Eq.mpr",
  "constType": "Definition"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.toZero",
  "constType": "Definition"},
 {"references": [], "name": "Eq", "constType": "Other"},
 {"references": [],
  "name": "CancelCommMonoidWithZero.mk",
  "constType": "Other"},
 {"references": [], "name": "Mod", "constType": "Other"},
 {"references": [], "name": "MulOneClass.mk", "constType": "Other"},
 {"references":
  ["Nat", "Nat.succ_le_succ", "OfNat.ofNat", "instOfNatNat", "Nat.zero_le"],
  "name": "Nat.zero_lt_succ",
  "constType": "Theorem"},
 {"references": ["Monoid"], "name": "Monoid.toOne", "constType": "Definition"},
 {"references":
  ["Preorder",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "lt_of_le_not_le.match_1",
   "LT.lt",
   "Preorder.toLT",
   "Iff.mpr",
   "And",
   "lt_iff_le_not_le",
   "And.intro"],
  "name": "lt_of_le_not_le",
  "constType": "Theorem"},
 {"references": ["CommSemiring"],
  "name": "CommSemiring.mul_comm",
  "constType": "Definition"},
 {"references": ["Decidable"],
  "name": "DecidableRel",
  "constType": "Definition"},
 {"references":
  ["AddCancelCommMonoid",
   "AddCommMonoid.mk",
   "AddMonoid.mk",
   "AddLeftCancelSemigroup.toAddSemigroup",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "AddCancelCommMonoid.toAddLeftCancelMonoid",
   "AddLeftCancelMonoid.toZero",
   "AddLeftCancelMonoid.zero_add",
   "AddLeftCancelMonoid.add_zero",
   "AddLeftCancelMonoid.nsmul",
   "AddLeftCancelMonoid.nsmul_zero",
   "AddLeftCancelMonoid.nsmul_succ",
   "AddCancelCommMonoid.add_comm"],
  "name": "AddCancelCommMonoid.toAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["Nat", "Or", "Eq", "LT.lt", "instLTNat", "Or.inl", "Or.inr", "Or.casesOn"],
  "name": "Nat.lt_or_ge.match_1",
  "constType": "Definition"},
 {"references": [], "name": "False.rec", "constType": "Other"},
 {"references": ["Monoid", "Exists", "Units", "Eq", "Units.val"],
  "name": "IsUnit",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "CovariantClass.mk",
   "Subtype",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Subtype.val",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_left",
   "Subtype.prop"],
  "name": "StrictOrderedSemiring.toPosMulStrictMono",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.below",
   "Nat.zero_add.match_1",
   "Unit",
   "rfl",
   "Nat.succ",
   "Eq.rec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.symm",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.mul_succ"],
  "name": "Nat.zero_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Or.inl", "constType": "Other"},
 {"references": [], "name": "Dvd.mk", "constType": "Other"},
 {"references": ["le_antisymm"],
  "name": "LE.le.antisymm",
  "constType": "Theorem"},
 {"references": [], "name": "NonAssocSemiring.mk", "constType": "Other"},
 {"references":
  ["NonUnitalSemiring.mul_assoc",
   "Nat",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_6",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.toMonoid",
  "constType": "Definition"},
 {"references":
  ["AddLeftCancelSemigroup",
   "IsLeftCancelAdd.mk",
   "AddSemigroup.toAdd",
   "AddLeftCancelSemigroup.toAddSemigroup",
   "AddLeftCancelSemigroup.add_left_cancel"],
  "name": "AddLeftCancelSemigroup.toIsLeftCancelAdd",
  "constType": "Definition"},
 {"references": ["InvolutiveInv", "InvolutiveInv.inv_inv"],
  "name": "inv_inv",
  "constType": "Theorem"},
 {"references": [], "name": "IsCancelAdd", "constType": "Other"},
 {"references":
  ["Add",
   "LT",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "LT.lt",
   "CovariantClass.elim"],
  "name": "add_lt_add_left",
  "constType": "Theorem"},
 {"references": ["One", "OfNat.mk", "One.one"],
  "name": "One.toOfNat1",
  "constType": "Definition"},
 {"references": [], "name": "Nat.succ", "constType": "Other"},
 {"references": ["Nat", "Nat.not_succ_le_zero"],
  "name": "Nat.not_lt_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "rfl",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.add_zero",
  "constType": "Theorem"},
 {"references": [], "name": "CommMonoid.mk", "constType": "Other"},
 {"references":
  ["AddCancelCommMonoid",
   "IsRightCancelAdd",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCancelCommMonoid.toAddCommMonoid",
   "AddCancelCommMonoid.toAddCancelMonoid.proof_1",
   "AddCancelMonoid.mk",
   "AddCancelCommMonoid.toAddLeftCancelMonoid",
   "AddCancelCommMonoid.toAddCancelMonoid.proof_2"],
  "name": "AddCancelCommMonoid.toAddCancelMonoid",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.le.step", "Nat.le.refl"],
  "name": "Nat.le_succ",
  "constType": "Theorem"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.toOne",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.le_total",
  "constType": "Definition"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow_neg'",
  "constType": "Definition"},
 {"references": [], "name": "True", "constType": "Other"},
 {"references": ["Or.imp", "id"],
  "name": "Or.imp_right",
  "constType": "Theorem"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "LE.le.antisymm",
   "OrderedAddCommMonoid.toPartialOrder",
   "le_of_add_le_add_left",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedCancelAddCommMonoid.toContravariantClassLeLeft",
   "Eq.le",
   "Eq.ge"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_1",
  "constType": "Theorem"},
 {"references": ["SemigroupWithZero"],
  "name": "SemigroupWithZero.toZero",
  "constType": "Definition"},
 {"references": ["Nat", "rfl", "Nat.gcd", "OfNat.ofNat", "instOfNatNat"],
  "name": "Nat.gcd_zero_left",
  "constType": "Theorem"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.zero_add",
  "constType": "Definition"},
 {"references": [], "name": "Exists", "constType": "Other"},
 {"references":
  ["Group",
   "DivisionMonoid.mk",
   "Group.toDivInvMonoid",
   "Group.toDivisionMonoid.proof_1",
   "Group.toDivisionMonoid.proof_2",
   "_private.Mathlib.Algebra.Group.Defs.0.inv_eq_of_mul"],
  "name": "Group.toDivisionMonoid",
  "constType": "Definition"},
 {"references": [], "name": "Mul.mk", "constType": "Other"},
 {"references": ["PartialOrder", "PartialOrder.le_antisymm"],
  "name": "le_antisymm",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Or",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "Nat.below",
   "Nat.zero_le.match_1",
   "Unit",
   "Nat.zero",
   "Or.inr",
   "Nat.zero_le",
   "Nat.succ",
   "Nat.lt_or_ge.match_2",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Or.inl",
   "Nat.le_succ_of_le",
   "Nat.lt_or_ge.match_1",
   "Eq",
   "Nat.eq_or_lt_of_le",
   "Eq.rec",
   "Nat.le_refl"],
  "name": "Nat.lt_or_ge",
  "constType": "Theorem"},
 {"references": ["Trans.mk", "Eq", "Eq.rec", "Eq.symm"],
  "name": "instTransEq",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Not",
   "LE.le",
   "instLENat",
   "Nat.succ",
   "Nat.below",
   "Nat.not_succ_le_self.match_1",
   "Unit",
   "Nat.not_succ_le_zero",
   "OfNat.ofNat",
   "instOfNatNat",
   "absurd",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "False",
   "Nat.le_of_succ_le_succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.not_succ_le_self",
  "constType": "Theorem"},
 {"references": ["propext", "True", "Iff.intro", "trivial"],
  "name": "eq_true",
  "constType": "Theorem"},
 {"references":
  ["AddCancelCommMonoid",
   "IsRightCancelAdd.add_right_cancel",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCancelCommMonoid.toAddCommMonoid",
   "AddCancelCommMonoid.toAddCancelMonoid.proof_1"],
  "name": "AddCancelCommMonoid.toAddCancelMonoid.proof_2",
  "constType": "Theorem"},
 {"references": [], "name": "Preorder.mk", "constType": "Other"},
 {"references": ["CommMagma"],
  "name": "CommMagma.toMul",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.le", "Nat.succ"],
  "name": "Nat.lt",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero",
   "dite",
   "Eq",
   "instDecidableEqNat",
   "Eq.ndrec",
   "Eq.symm",
   "Not"],
  "name": "Nat.dvd_antisymm.match_1",
  "constType": "Definition"},
 {"references": ["LE", "OrderBot"],
  "name": "OrderBot.bot_le",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "namedPattern",
   "Nat.succ",
   "Nat.casesOn",
   "Eq.refl"],
  "name": "Nat.mod.match_1",
  "constType": "Definition"},
 {"references": ["HEq", "Eq", "cast", "rfl", "HEq.rec"],
  "name": "eq_of_heq",
  "constType": "Theorem"},
 {"references": [], "name": "SemigroupWithZero.mk", "constType": "Other"},
 {"references": [], "name": "Or", "constType": "Other"},
 {"references": [], "name": "MonoidWithZero", "constType": "Other"},
 {"references": ["Bool.decEq"],
  "name": "instDecidableEqBool",
  "constType": "Definition"},
 {"references":
  ["Mul",
   "Zero",
   "Preorder",
   "PosMulStrictMono",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "CovariantClass.elim",
   "Subtype",
   "HMul.hMul",
   "instHMul",
   "Subtype.val",
   "Subtype.mk"],
  "name": "mul_lt_mul_of_pos_left",
  "constType": "Theorem"},
 {"references": ["NonUnitalCommSemiring"],
  "name": "NonUnitalCommSemiring.toNonUnitalSemiring",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.compare_eq_compareOfLessAndEq",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedSemiring.mk",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.add_le_add_left",
   "StrictOrderedSemiring.zero_le_one",
   "StrictOrderedSemiring.toOrderedSemiring'.proof_1",
   "StrictOrderedSemiring.toOrderedSemiring'.proof_2"],
  "name": "StrictOrderedSemiring.toOrderedSemiring'",
  "constType": "Definition"},
 {"references": [], "name": "CommSemiring", "constType": "Other"},
 {"references": [], "name": "Bool.true", "constType": "Other"},
 {"references": ["NatCast", "NatCast.natCast"],
  "name": "Nat.cast",
  "constType": "Definition"},
 {"references": [], "name": "MonoidWithZero.mk", "constType": "Other"},
 {"references": [], "name": "One", "constType": "Other"},
 {"references": ["Semigroup", "Semigroup.mul_assoc"],
  "name": "mul_assoc",
  "constType": "Theorem"},
 {"references":
  ["Group",
   "_private.Mathlib.Algebra.Group.Defs.0.inv_eq_of_mul",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "Group.toDivInvMonoid",
   "mul_left_inv"],
  "name": "Group.toDivisionMonoid.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.mul_comm",
   "Nat.left_distrib",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "congr",
   "eq_self"],
  "name": "Nat.right_distrib",
  "constType": "Theorem"},
 {"references": ["NatPow"], "name": "NatPow.pow", "constType": "Definition"},
 {"references": ["Nat.decEq"],
  "name": "instDecidableEqNat",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.le.dest.match_1",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.le.dest",
   "Nat.le.intro",
   "Eq.trans",
   "congrArg",
   "Nat.add_assoc"],
  "name": "Nat.add_le_add_left",
  "constType": "Theorem"},
 {"references":
  ["Semiring.npow_succ",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_12",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "rfl",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.mul_zero",
  "constType": "Theorem"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.toMul",
  "constType": "Definition"},
 {"references": ["AddMonoidWithOne", "AddMonoidWithOne.natCast_zero"],
  "name": "Nat.cast_zero",
  "constType": "Theorem"},
 {"references": [], "name": "ZeroLEOneClass.mk", "constType": "Other"},
 {"references":
  ["Nat", "rfl", "HSub.hSub", "instHSub", "instSubNat", "Nat.succ"],
  "name": "Nat.sub_succ",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "Nat.lt_of_succ_le",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.rec",
   "Nat.succ",
   "Eq",
   "LE.le",
   "instLENat",
   "Nat.add_le_add_left",
   "Nat.succ_le_of_lt",
   "Nat.add_succ"],
  "name": "Nat.add_lt_add_left",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid", "DivInvMonoid.div_eq_mul_inv"],
  "name": "div_eq_mul_inv",
  "constType": "Theorem"},
 {"references":
  ["AddCommSemigroup",
   "AddCommMagma.mk",
   "AddSemigroup.toAdd",
   "AddCommSemigroup.toAddSemigroup",
   "AddCommSemigroup.add_comm"],
  "name": "AddCommSemigroup.toAddCommMagma",
  "constType": "Definition"},
 {"references":
  ["MonoidWithZero",
   "Irreducible",
   "MonoidWithZero.toMonoid",
   "Eq",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Irreducible.ne_zero.match_1",
   "False",
   "not_irreducible_zero"],
  "name": "Irreducible.ne_zero",
  "constType": "Theorem"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.le_of_add_le_add_left",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.mul.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "LE.le",
   "instLENat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.below",
   "Nat.zero_le.match_1",
   "Unit",
   "Nat.zero",
   "Nat.le.refl",
   "Nat.succ",
   "Nat.le.step",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.zero_le",
  "constType": "Theorem"},
 {"references": [], "name": "IsRightCancelAdd.mk", "constType": "Other"},
 {"references": [], "name": "Bool", "constType": "Other"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.zero_le_one",
  "constType": "Definition"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.toPartialOrder",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "of_eq_true",
   "eq_self",
   "Nat.succ",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.succ_sub_succ"],
  "name": "Nat.add_sub_add_right",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "Nat.brecOn",
   "Nat.succ",
   "Nat.below",
   "Nat.ble_succ_eq_true.match_1",
   "OfNat.ofNat",
   "instOfNatNat",
   "rfl",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.ble_succ_eq_true",
  "constType": "Theorem"},
 {"references": ["CommSemigroup"],
  "name": "CommSemigroup.mul_comm",
  "constType": "Definition"},
 {"references": ["Ord"], "name": "Ord.compare", "constType": "Definition"},
 {"references":
  ["Decidable",
   "Eq",
   "Not",
   "Or.casesOn",
   "Or",
   "Decidable.em",
   "ite",
   "Or.inl",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "if_pos",
   "Eq.symm",
   "Or.inr",
   "if_neg"],
  "name": "ite_congr",
  "constType": "Theorem"},
 {"references":
  ["Nat", "LE.le", "instLENat", "Nat.succ", "Nat.le_trans", "Nat.le_succ"],
  "name": "Nat.le_of_succ_le",
  "constType": "Theorem"},
 {"references": ["Monoid", "Irreducible"],
  "name": "Irreducible.not_unit",
  "constType": "Definition"},
 {"references": ["PUnit"], "name": "Unit", "constType": "Definition"},
 {"references": ["OrderedCancelAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.le_of_add_le_add_left",
  "constType": "Definition"},
 {"references": ["Add.mk", "Nat", "Nat.add"],
  "name": "instAddNat",
  "constType": "Definition"},
 {"references": ["Nat", "LT.lt", "instLTNat"],
  "name": "Nat.succ_le_of_lt",
  "constType": "Theorem"},
 {"references": ["Mul", "Zero", "IsRightCancelMulZero"],
  "name": "IsRightCancelMulZero.mul_right_cancel_of_ne_zero",
  "constType": "Definition"},
 {"references": [], "name": "Ordering", "constType": "Other"},
 {"references": ["WellFounded", "WellFounded.rec", "Acc"],
  "name": "WellFounded.apply",
  "constType": "Definition"},
 {"references": [], "name": "InvOneClass.mk", "constType": "Other"},
 {"references": ["eq_true", "Eq", "rfl"],
  "name": "eq_self",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.le_antisymm.match_1",
   "Eq",
   "rfl",
   "Nat.le",
   "Nat.succ",
   "absurd",
   "LT.lt",
   "instLTNat",
   "Nat.lt_of_le_of_lt",
   "Nat.lt_irrefl"],
  "name": "Nat.le_antisymm",
  "constType": "Theorem"},
 {"references": ["AddMonoidWithOne", "Nat", "AddMonoidWithOne.natCast_succ"],
  "name": "Nat.cast_succ",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.dvd_add.match_1",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Exists.intro",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "Nat.left_distrib",
   "eq_self"],
  "name": "Nat.dvd_add",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "instDecidableAnd.match_1",
   "Not",
   "Decidable.isFalse",
   "absurd",
   "False",
   "Decidable.isTrue"],
  "name": "instDecidableNot",
  "constType": "Definition"},
 {"references": ["Semiring"],
  "name": "Semiring.one_mul",
  "constType": "Definition"},
 {"references": [], "name": "AddSemigroup", "constType": "Other"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "Eq",
   "absurd",
   "False",
   "Eq.rec",
   "Not",
   "lt_irrefl"],
  "name": "ne_of_lt",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow_succ'",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Exists.intro",
   "Units",
   "Eq",
   "Units.val",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "Group.toDivisionMonoid",
   "Units.instGroupUnits",
   "rfl"],
  "name": "isUnit_one",
  "constType": "Theorem"},
 {"references": ["OrderedAddCommMonoid"],
  "name": "OrderedAddCommMonoid.toAddCommMonoid",
  "constType": "Definition"},
 {"references": ["NonUnitalSemiring"],
  "name": "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "GE.ge",
   "instLENat",
   "Nat.mod_eq_sub_mod.match_1",
   "Or",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "GT.gt",
   "instLTNat",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.eq_zero_or_pos",
   "Eq.rec",
   "rfl",
   "Eq.symm",
   "Nat.sub_zero",
   "ite",
   "And",
   "LT.lt",
   "LE.le",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "if_pos",
   "And.intro",
   "Nat.mod_eq"],
  "name": "Nat.mod_eq_sub_mod",
  "constType": "Theorem"},
 {"references":
  ["Function.Injective",
   "Iff.intro",
   "Ne",
   "mt",
   "Eq",
   "congr_arg",
   "Function.Injective.ne"],
  "name": "Function.Injective.ne_iff",
  "constType": "Theorem"},
 {"references": ["PartialOrder"],
  "name": "PartialOrder.le_antisymm",
  "constType": "Definition"},
 {"references": ["LE", "OrderBot"],
  "name": "OrderBot.toBot",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.Coprime",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Eq.mpr",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.gcd",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.Coprime.gcd_eq_one",
   "Nat.gcd_eq_left"],
  "name": "Nat.Coprime.eq_one_of_dvd",
  "constType": "Theorem"},
 {"references":
  ["Nat", "Or", "Eq", "LT.lt", "instLTNat", "Or.inl", "Or.inr", "Or.casesOn"],
  "name": "Nat.eq_or_lt_of_le.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Int.negSucc", "constType": "Other"},
 {"references":
  ["PartialOrder",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Ne",
   "lt_of_le_not_le",
   "mt",
   "Eq",
   "le_antisymm"],
  "name": "lt_of_le_of_ne",
  "constType": "Theorem"},
 {"references": ["Mod.mk", "Nat", "Nat.mod"],
  "name": "Nat.instModNat",
  "constType": "Definition"},
 {"references": ["NatPow", "Pow.mk", "Nat", "NatPow.pow"],
  "name": "instPowNat",
  "constType": "Definition"},
 {"references":
  ["MulZeroOneClass",
   "MulZeroClass.mk",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "MulZeroOneClass.toZero",
   "MulZeroOneClass.zero_mul",
   "MulZeroOneClass.mul_zero"],
  "name": "MulZeroOneClass.toMulZeroClass",
  "constType": "Definition"},
 {"references": ["Add", "LE", "ExistsAddOfLE"],
  "name": "ExistsAddOfLE.exists_add_of_le",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Unit",
   "Nat.le.refl",
   "Nat.le",
   "Nat.succ",
   "Nat.le.step",
   "Nat.le.casesOn",
   "Eq",
   "HEq",
   "Eq.ndrec",
   "Unit.unit",
   "Eq.symm",
   "eq_of_heq",
   "Eq.refl",
   "HEq.refl"],
  "name": "Nat.ble_eq_true_of_le.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.dvd_trans.match_1",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Exists.intro",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.mul_assoc",
   "eq_self"],
  "name": "Nat.dvd_trans",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Nat.le.dest.match_1",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.modCore._unary", "PSigma.mk"],
  "name": "Nat.modCore",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LT.lt",
   "instLTNat",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "Nat.strongInductionOn",
   "Nat.gcd.induction.match_1",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ_pos",
   "Nat.mod_lt"],
  "name": "Nat.gcd.induction",
  "constType": "Theorem"},
 {"references": [], "name": "Nat.AtLeastTwo.mk", "constType": "Other"},
 {"references": [], "name": "CancelMonoidWithZero.mk", "constType": "Other"},
 {"references": ["ContravariantClass"],
  "name": "ContravariantClass.elim",
  "constType": "Definition"},
 {"references": [], "name": "AddZeroClass", "constType": "Other"},
 {"references": ["And", "And.intro", "And.rec"],
  "name": "And.casesOn",
  "constType": "Definition"},
 {"references": ["eq_true", "Not", "False", "False.elim"],
  "name": "not_false_eq_true",
  "constType": "Theorem"},
 {"references": [], "name": "HPow", "constType": "Other"},
 {"references": ["Preorder", "Preorder.le_trans"],
  "name": "le_trans",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "GT.gt",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.rec",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Eq",
   "Nat.mul_lt_mul_of_pos_left",
   "Nat.mul_comm"],
  "name": "Nat.mul_lt_mul_of_pos_right",
  "constType": "Theorem"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.one_mul",
  "constType": "Definition"},
 {"references": ["NatPow.mk", "Nat", "Nat.pow"],
  "name": "instNatPowNat",
  "constType": "Definition"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.mul_inv_rev",
  "constType": "Definition"},
 {"references": ["Iff"], "name": "Iff.mp", "constType": "Definition"},
 {"references":
  ["Semiring",
   "NonAssocSemiring.mk",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.toNatCast",
   "Semiring.natCast_zero",
   "Semiring.natCast_succ"],
  "name": "Semiring.toNonAssocSemiring",
  "constType": "Definition"},
 {"references": [], "name": "Inv", "constType": "Other"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.add_zero",
  "constType": "Definition"},
 {"references": ["StrictOrderedCommSemiring"],
  "name": "StrictOrderedCommSemiring.toStrictOrderedSemiring",
  "constType": "Definition"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddMonoid.nsmul_succ",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_5",
  "constType": "Theorem"},
 {"references": [], "name": "OrderBot", "constType": "Other"},
 {"references":
  ["Monoid",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Eq.mpr",
   "MulOneClass.toOne",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "one_mul",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "mul_assoc",
   "mul_one"],
  "name": "left_inv_eq_right_inv",
  "constType": "Theorem"},
 {"references": ["outParam", "HAdd"],
  "name": "HAdd.hAdd",
  "constType": "Definition"},
 {"references": ["Mul", "Zero", "IsCancelMulZero"],
  "name": "IsCancelMulZero.toIsRightCancelMulZero",
  "constType": "Definition"},
 {"references": [], "name": "MulZeroOneClass.mk", "constType": "Other"},
 {"references": ["Nat", "LE.le", "instLENat", "Nat.succ"],
  "name": "Nat.lt_of_succ_le",
  "constType": "Theorem"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.add_zero",
  "constType": "Definition"},
 {"references": ["propext", "And", "Iff.intro", "And.left", "And.intro"],
  "name": "and_self",
  "constType": "Theorem"},
 {"references": ["Nat", "LT.lt", "instLTNat", "Nat.le_of_succ_le"],
  "name": "Nat.le_of_lt",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.beq",
   "Bool.true",
   "Nat.zero",
   "Nat.succ",
   "Nat.casesOn"],
  "name": "Nat.eq_of_beq_eq_true.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "WellFounded.fix",
   "PSigma",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Not",
   "invImage",
   "PSigma.casesOn",
   "SizeOf.sizeOf",
   "instSizeOfNat",
   "instWellFoundedRelation",
   "PSigma.mk",
   "dite",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "Nat.div_rec_lemma"],
  "name": "Nat.div.inductionOn._unary",
  "constType": "Theorem"},
 {"references":
  ["Semiring.natCast_zero",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_9",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.rec"],
  "name": "Eq.ndrec",
  "constType": "Definition"},
 {"references": ["Bool", "Bool.false", "Bool.true", "Bool.rec"],
  "name": "Bool.casesOn",
  "constType": "Definition"},
 {"references":
  ["CommSemiring.mk",
   "Nat",
   "Semiring.mk",
   "NonUnitalSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "AddMonoid.mk",
   "AddSemigroup.mk",
   "Add.mk",
   "Nat.add",
   "Nat.add_assoc",
   "Zero.mk",
   "Nat.zero",
   "Nat.zero_add",
   "Nat.add_zero",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.zero_mul",
   "Nat.commSemiring.proof_1",
   "Nat.add_comm",
   "Mul.mk",
   "Nat.mul",
   "Nat.left_distrib",
   "Nat.right_distrib",
   "Nat.mul_zero",
   "Nat.mul_assoc",
   "One.mk",
   "Nat.succ",
   "Nat.one_mul",
   "Nat.mul_one",
   "NatCast.mk",
   "Nat.commSemiring.proof_2",
   "Nat.commSemiring.proof_3",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "Nat.pow_zero",
   "Nat.pow_succ'",
   "Nat.mul_comm"],
  "name": "Nat.commSemiring",
  "constType": "Definition"},
 {"references": [], "name": "AddMonoid", "constType": "Other"},
 {"references":
  ["Monoid",
   "one_mul",
   "Monoid.toMulOneClass",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne"],
  "name": "Units.instMulOneClassUnits.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "id",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "AddSemigroup.toAdd",
   "AddSemigroup.mk",
   "Add.mk",
   "Nat.add",
   "Nat.add_assoc",
   "Eq.mpr",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_comm",
   "Nat.right_distrib",
   "Nat.one_mul"],
  "name": "Nat.commSemiring.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "Irreducible.mk", "constType": "Other"},
 {"references":
  ["Monoid",
   "Inv",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Inv.inv"],
  "name": "DivInvMonoid.div'",
  "constType": "Definition"},
 {"references": [], "name": "DivInvMonoid.mk", "constType": "Other"},
 {"references":
  ["Decidable",
   "instDecidableAnd.match_1",
   "And",
   "Decidable.isTrue",
   "And.intro",
   "Not",
   "Decidable.isFalse",
   "instDecidableAnd.proof_1",
   "instDecidableAnd.proof_2"],
  "name": "instDecidableAnd",
  "constType": "Definition"},
 {"references":
  ["One",
   "AddZeroClass",
   "PartialOrder",
   "ZeroLEOneClass",
   "AddZeroClass.toZero",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "LT.lt",
   "Preorder.toLT",
   "lt_add_of_pos_right",
   "zero_lt_one"],
  "name": "lt_add_one",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.refl",
   "Nat.zero",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Nat.mul_succ",
   "Nat.add_succ",
   "Nat.add_right_comm"],
  "name": "Nat.succ_mul",
  "constType": "Theorem"},
 {"references": [], "name": "AddCommMonoidWithOne.mk", "constType": "Other"},
 {"references": [], "name": "HMod", "constType": "Other"},
 {"references": ["Div.mk", "Nat", "Nat.div"],
  "name": "Nat.instDivNat",
  "constType": "Definition"},
 {"references": ["Or", "Or.rec", "Or.inr", "Or.inl"],
  "name": "Or.symm",
  "constType": "Theorem"},
 {"references": ["AddZeroClass", "AddZeroClass.zero_add"],
  "name": "zero_add",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow",
  "constType": "Definition"},
 {"references": [], "name": "Inv.mk", "constType": "Other"},
 {"references": ["Nat", "Nat.decLe", "Nat.succ"],
  "name": "Nat.decLt",
  "constType": "Definition"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.mul_lt_mul_of_pos_right",
  "constType": "Definition"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.nsmul_succ",
  "constType": "Definition"},
 {"references": [], "name": "HEq", "constType": "Other"},
 {"references": [], "name": "CommGroup.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.le.refl",
   "Nat.le",
   "Nat.succ",
   "Nat.le.step",
   "Nat.le.casesOn",
   "Eq",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "Eq.refl",
   "HEq.refl"],
  "name": "Nat.le_trans.match_1",
  "constType": "Definition"},
 {"references":
  ["OrderBot.mk",
   "Nat",
   "instLENat",
   "Bot.mk",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero_le"],
  "name": "Nat.orderBot",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toPartialOrder",
  "constType": "Definition"},
 {"references":
  ["Ord.mk",
   "Nat",
   "compareOfLessAndEq",
   "instLTNat",
   "Nat.decLt",
   "instDecidableEqNat"],
  "name": "instOrdNat",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.AtLeastTwo.mk",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ_le_succ",
   "Nat.zero_le"],
  "name": "instNatAtLeastTwo",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "GT.gt",
   "instLTNat",
   "LE.le",
   "instLENat",
   "Nat.le_total.match_1",
   "Or",
   "LT.lt",
   "GE.ge",
   "False",
   "Nat.lt_or_ge",
   "absurd",
   "Nat.lt_trans",
   "Nat.lt_irrefl",
   "Eq",
   "Eq.subst",
   "Nat.le_antisymm"],
  "name": "Nat.not_le_of_gt",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "Decidable.isTrue",
   "Not",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "Decidable.not_and_iff_or_not.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.beq",
   "Bool.false",
   "Nat.zero",
   "Nat.succ",
   "Nat.casesOn"],
  "name": "Nat.ne_of_beq_eq_false.match_1",
  "constType": "Definition"},
 {"references": ["PProd"], "name": "PProd.fst", "constType": "Definition"},
 {"references": [], "name": "And", "constType": "Other"},
 {"references":
  ["Monoid",
   "MulOneClass",
   "Units",
   "inferInstance",
   "Units.instMulOneClassUnits",
   "Group.mk",
   "DivInvMonoid.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "MulOneClass.toMul",
   "Units.instGroupUnits.proof_1",
   "MulOneClass.toOne",
   "Units.instGroupUnits.proof_2",
   "Units.instGroupUnits.proof_3",
   "npowRec",
   "Units.instGroupUnits.proof_4",
   "Units.instGroupUnits.proof_5",
   "Inv.mk",
   "Inv.inv",
   "Units.instInv",
   "Div.mk",
   "DivInvMonoid.div'",
   "Units.instGroupUnits.proof_6",
   "Units.mk",
   "Units.inv",
   "Units.val",
   "Units.inv_val",
   "Units.val_inv",
   "Units.instGroupUnits.proof_7",
   "zpowRec",
   "Units.instGroupUnits.proof_8",
   "Units.instGroupUnits.proof_9",
   "Units.instGroupUnits.proof_10",
   "Units.instGroupUnits.proof_11"],
  "name": "Units.instGroupUnits",
  "constType": "Definition"},
 {"references": ["Eq"], "name": "namedPattern", "constType": "Definition"},
 {"references": [], "name": "PartialOrder", "constType": "Other"},
 {"references": [], "name": "HMod.mk", "constType": "Other"},
 {"references":
  ["Monoid",
   "Units",
   "Units.ext",
   "HMul.hMul",
   "instHMul",
   "Mul.mk",
   "Units.mk",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.val",
   "Units.inv",
   "Eq.mpr",
   "Eq",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "mul_assoc",
   "Eq.symm",
   "Units.val_inv",
   "MulOneClass.toOne",
   "one_mul",
   "Units.inv_val",
   "One.mk"],
  "name": "Units.instMulOneClassUnits.proof_4",
  "constType": "Theorem"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.toOne",
  "constType": "Definition"},
 {"references": [], "name": "NatPow", "constType": "Other"},
 {"references":
  ["Monoid",
   "Units",
   "Units.ext",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "DivInvMonoid.toMonoid",
   "DivInvMonoid.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "MulOneClass.toMul",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "mul_assoc",
   "Units.val",
   "MulOneClass.toOne",
   "MulOneClass.one_mul",
   "MulOneClass.mul_one",
   "npowRec",
   "Eq.refl",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Inv.mk",
   "Inv.inv",
   "Units.instInv",
   "Div.mk",
   "DivInvMonoid.div'",
   "Units.mk",
   "Units.inv",
   "Units.inv_val",
   "Units.val_inv",
   "HDiv.hDiv",
   "instHDiv",
   "zpowRec",
   "Int",
   "instOfNatInt",
   "Int.ofNat",
   "Nat.succ",
   "Int.negSucc",
   "DivInvMonoid.toInv",
   "One.toOfNat1",
   "Monoid.toOne"],
  "name": "Units.instGroupUnits.proof_11",
  "constType": "Theorem"},
 {"references": [], "name": "Subtype", "constType": "Other"},
 {"references": ["Nat", "NatCast", "Nat.AtLeastTwo", "OfNat.mk", "Nat.cast"],
  "name": "instOfNat",
  "constType": "Definition"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.zero_mul",
  "constType": "Definition"},
 {"references": ["Mod"], "name": "Mod.mod", "constType": "Definition"},
 {"references": [], "name": "DivisionCommMonoid", "constType": "Other"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.zero_mul",
  "constType": "Definition"},
 {"references": [], "name": "Div.mk", "constType": "Other"},
 {"references":
  ["Decidable",
   "Decidable.isTrue",
   "Not",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "Decidable.byCases.match_1",
  "constType": "Definition"},
 {"references": ["And"], "name": "And.right", "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Bool",
   "Nat.below",
   "Nat.beq.match_1",
   "Unit",
   "Nat.zero",
   "Bool.true",
   "Nat.succ",
   "Bool.false",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.ble",
  "constType": "Definition"},
 {"references": ["CancelCommMonoidWithZero"],
  "name": "CancelCommMonoidWithZero.toIsLeftCancelMulZero",
  "constType": "Definition"},
 {"references": [], "name": "AddCancelCommMonoid", "constType": "Other"},
 {"references": ["Semiring"],
  "name": "Semiring.toNatCast",
  "constType": "Definition"},
 {"references": ["ne_of_lt"], "name": "LT.lt.ne", "constType": "Theorem"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Iff.intro",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.dvd_add",
   "Nat.dvd_add_iff_right.match_2",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.dvd_add_iff_right.match_1",
   "Eq",
   "Exists.intro",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.mul_sub_left_distrib",
   "Eq.symm",
   "Nat.add_sub_cancel_left"],
  "name": "Nat.dvd_add_iff_right",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.decEq.match_1",
   "Bool",
   "Decidable",
   "Eq",
   "Nat.beq",
   "Bool.true",
   "Decidable.isTrue",
   "Nat.eq_of_beq_eq_true",
   "Bool.false",
   "Decidable.isFalse",
   "Nat.ne_of_beq_eq_false"],
  "name": "Nat.decEq",
  "constType": "Definition"},
 {"references": ["And"], "name": "And.left", "constType": "Definition"},
 {"references": ["Add", "IsLeftCancelAdd", "add_left_cancel"],
  "name": "add_right_injective",
  "constType": "Theorem"},
 {"references": [], "name": "Nontrivial.mk", "constType": "Other"},
 {"references":
  ["DivInvMonoid",
   "Eq.symm",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "DivInvMonoid.toMonoid",
   "inv_eq_one_div"],
  "name": "one_div",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "of_eq_true",
   "Not",
   "Irreducible",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Eq.trans",
   "False",
   "True",
   "congrArg",
   "And",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Or",
   "IsUnit",
   "Mathlib.Algebra.Associated._auxLemma.3",
   "congrFun",
   "Mathlib.Algebra.Group.Units._auxLemma.25",
   "not_true_eq_false",
   "false_and",
   "not_false_eq_true"],
  "name": "not_irreducible_one",
  "constType": "Theorem"},
 {"references": ["AddLeftCancelSemigroup"],
  "name": "AddLeftCancelSemigroup.add_left_cancel",
  "constType": "Definition"},
 {"references": ["Nat", "OfNat"],
  "name": "OfNat.ofNat",
  "constType": "Definition"},
 {"references": [], "name": "WellFounded.intro", "constType": "Other"},
 {"references":
  ["Add",
   "IsLeftCancelAdd",
   "Function.Injective.ne_iff",
   "HAdd.hAdd",
   "instHAdd",
   "add_right_injective"],
  "name": "add_ne_add_right",
  "constType": "Theorem"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.nsmul",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Eq.mpr",
   "Iff",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_comm",
   "Nat.dvd_add_iff_right"],
  "name": "Nat.dvd_add_iff_left",
  "constType": "Theorem"},
 {"references": ["outParam", "HMul"],
  "name": "HMul.hMul",
  "constType": "Definition"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.toNatCast",
  "constType": "Definition"},
 {"references": [], "name": "CovariantClass", "constType": "Other"},
 {"references": ["Preorder", "Preorder.le_refl"],
  "name": "le_refl",
  "constType": "Theorem"},
 {"references": ["Max"], "name": "Max.max", "constType": "Definition"},
 {"references": [], "name": "IsLeftCancelMulZero.mk", "constType": "Other"},
 {"references":
  ["CommMonoid",
   "CommGroup.mk",
   "Units",
   "CommMonoid.toMonoid",
   "Units.instGroupUnits",
   "Units.instCommGroupUnits.proof_1"],
  "name": "Units.instCommGroupUnits",
  "constType": "Definition"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "Iff.intro",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "ExistsAddOfLE.exists_add_of_le",
   "CanonicallyOrderedAddCommMonoid.existsAddOfLE",
   "Exists.casesOn",
   "Eq.ndrec",
   "le_self_add",
   "Eq.symm"],
  "name": "le_iff_exists_add",
  "constType": "Theorem"},
 {"references":
  ["Add",
   "LE",
   "ContravariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "LE.le",
   "ContravariantClass.elim"],
  "name": "le_of_add_le_add_left",
  "constType": "Theorem"},
 {"references": ["Semiring"],
  "name": "Semiring.toOne",
  "constType": "Definition"},
 {"references": ["LT", "LT.lt"], "name": "GT.gt", "constType": "Definition"},
 {"references": [], "name": "CommGroup", "constType": "Other"},
 {"references":
  ["Preorder",
   "LE.le",
   "Preorder.toLE",
   "LT.lt",
   "Preorder.toLT",
   "lt_of_le_of_lt.match_1",
   "lt_of_lt_of_le.match_1",
   "And",
   "Not",
   "le_not_le_of_lt",
   "lt_of_le_not_le",
   "le_trans"],
  "name": "lt_of_le_of_lt",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "of_eq_true",
   "eq_self",
   "Eq.mpr",
   "Nat.succ",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_succ",
   "Nat.pred",
   "Nat.sub_succ"],
  "name": "Nat.sub_sub",
  "constType": "Theorem"},
 {"references":
  ["AddCancelMonoid",
   "AddRightCancelMonoid.mk",
   "AddRightCancelSemigroup.mk",
   "AddLeftCancelSemigroup.toAddSemigroup",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "AddCancelMonoid.toAddLeftCancelMonoid",
   "AddCancelMonoid.add_right_cancel",
   "AddLeftCancelMonoid.toZero",
   "AddLeftCancelMonoid.zero_add",
   "AddLeftCancelMonoid.add_zero",
   "AddLeftCancelMonoid.nsmul",
   "AddLeftCancelMonoid.nsmul_zero",
   "AddLeftCancelMonoid.nsmul_succ"],
  "name": "AddCancelMonoid.toAddRightCancelMonoid",
  "constType": "Definition"},
 {"references": ["Preorder"],
  "name": "Preorder.toLT",
  "constType": "Definition"},
 {"references": ["Nat", "Eq.refl", "Ordering", "Ord.compare", "instOrdNat"],
  "name": "Nat.linearOrder.proof_3",
  "constType": "Theorem"},
 {"references": ["Zero", "OfNat.mk", "Zero.zero"],
  "name": "Zero.toOfNat0",
  "constType": "Definition"},
 {"references": ["Group"],
  "name": "Group.mul_left_inv",
  "constType": "Definition"},
 {"references":
  ["Preorder", "Eq", "Eq.rec", "LE.le", "Preorder.toLE", "le_refl"],
  "name": "le_of_eq",
  "constType": "Theorem"},
 {"references": [], "name": "Nat.le.refl", "constType": "Other"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toMin",
  "constType": "Definition"},
 {"references": [], "name": "Zero", "constType": "Other"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero",
   "Eq.casesOn",
   "HEq",
   "Bool.noConfusion",
   "Eq.refl",
   "Bool.false",
   "HEq.refl"],
  "name": "Nat.ble_succ_eq_true.match_1",
  "constType": "Definition"},
 {"references": ["False"], "name": "Not", "constType": "Definition"},
 {"references": ["Mul", "HMul.mk", "Mul.mul"],
  "name": "instHMul",
  "constType": "Definition"},
 {"references": [], "name": "Iff.intro", "constType": "Other"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Iff",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HDiv.hDiv",
   "instHDiv",
   "Nat.instDivNat",
   "Eq.mp",
   "Eq.ndrec",
   "Eq",
   "Eq.refl",
   "Nat.mod_add_div",
   "Nat.dvd_add_iff_left",
   "Nat.dvd_trans",
   "Nat.dvd_mul_right"],
  "name": "Nat.dvd_mod_iff",
  "constType": "Theorem"},
 {"references": [], "name": "AddCancelCommMonoid.mk", "constType": "Other"},
 {"references": ["Add", "IsLeftCancelAdd"],
  "name": "IsLeftCancelAdd.add_left_cancel",
  "constType": "Definition"},
 {"references": [], "name": "DivInvOneMonoid", "constType": "Other"},
 {"references": [], "name": "Monoid", "constType": "Other"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "WellFounded.fix",
   "WellFoundedRelation.rel",
   "Nat.lt_wfRel",
   "WellFoundedRelation.wf"],
  "name": "Nat.strongInductionOn",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.mod.inductionOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HDiv.hDiv",
   "instHDiv",
   "Nat.instDivNat",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Eq.mpr",
   "ite",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.div_eq",
   "Nat.mod_eq",
   "congrFun",
   "True",
   "instDecidableTrue",
   "congrArg",
   "congr",
   "ite_congr",
   "Eq.trans",
   "eq_true",
   "and_self",
   "Not",
   "Nat.succ",
   "Nat.mul_succ",
   "Eq.symm",
   "Nat.add_assoc",
   "Nat.sub_add_cancel",
   "And.right",
   "of_eq_true",
   "False",
   "instDecidableFalse",
   "eq_false",
   "eq_self"],
  "name": "Nat.mod_add_div",
  "constType": "Theorem"},
 {"references": ["Semiring"],
  "name": "Semiring.npow",
  "constType": "Definition"},
 {"references": [], "name": "PUnit.unit", "constType": "Other"},
 {"references": [], "name": "AddRightCancelMonoid.mk", "constType": "Other"},
 {"references": ["LT.mk", "Nat", "Nat.lt"],
  "name": "instLTNat",
  "constType": "Definition"},
 {"references": ["CancelMonoidWithZero"],
  "name": "CancelMonoidWithZero.toIsCancelMulZero",
  "constType": "Definition"},
 {"references": [], "name": "ExistsAddOfLE", "constType": "Other"},
 {"references": ["Exists", "Exists.intro", "Exists.rec"],
  "name": "Exists.casesOn",
  "constType": "Definition"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.mul_zero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "LT.lt",
   "instLTNat",
   "Nat.le_trans",
   "Nat.succ",
   "Nat.succ_le_succ"],
  "name": "Nat.lt_of_le_of_lt",
  "constType": "Theorem"},
 {"references": [], "name": "Min", "constType": "Other"},
 {"references": ["Monoid"],
  "name": "Monoid.mul_one",
  "constType": "Definition"},
 {"references": [], "name": "Add", "constType": "Other"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.toAddCommMonoid",
  "constType": "Definition"},
 {"references": [], "name": "Ordering.gt", "constType": "Other"},
 {"references":
  ["CommSemigroup",
   "Zero",
   "IsLeftCancelMulZero",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "IsRightCancelMulZero",
   "IsLeftCancelMulZero.to_isRightCancelMulZero",
   "IsCancelMulZero.mk",
   "IsRightCancelMulZero.mk",
   "IsRightCancelMulZero.mul_right_cancel_of_ne_zero"],
  "name": "IsLeftCancelMulZero.to_isCancelMulZero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Nat.le_of_add_le_add_left.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.below",
   "Nat.succ_add.match_1",
   "Eq.rec",
   "OfNat.ofNat",
   "instOfNatNat",
   "rfl",
   "Eq.symm",
   "Nat.mul_zero",
   "Nat.zero_mul",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.succ_mul",
   "Nat.mul_succ"],
  "name": "Nat.mul_comm",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "npowRec.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Not",
   "LT.lt",
   "instLTNat",
   "Nat.le_total.match_1",
   "Or",
   "GE.ge",
   "instLENat",
   "Nat.lt_or_ge",
   "absurd"],
  "name": "Nat.ge_of_not_lt",
  "constType": "Theorem"},
 {"references": [], "name": "One.mk", "constType": "Other"},
 {"references": ["Semiring"],
  "name": "Semiring.mul_one",
  "constType": "Definition"},
 {"references": [], "name": "Or.inr", "constType": "Other"},
 {"references":
  ["CommMonoidWithZero",
   "MonoidWithZero.mk",
   "CommMonoid.toMonoid",
   "CommMonoidWithZero.toCommMonoid",
   "CommMonoidWithZero.toZero",
   "CommMonoidWithZero.zero_mul",
   "CommMonoidWithZero.mul_zero"],
  "name": "CommMonoidWithZero.toMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Not",
   "if_pos.match_1",
   "Eq",
   "ite",
   "absurd",
   "Decidable.isTrue",
   "rfl",
   "Decidable.isFalse"],
  "name": "if_neg",
  "constType": "Theorem"},
 {"references":
  ["Preorder.lt_iff_le_not_le",
   "Nat",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Nat.linearOrder"],
  "name": "Nat.linearOrderedCommSemiring.proof_3",
  "constType": "Theorem"},
 {"references":
  ["LT",
   "Decidable",
   "LT.lt",
   "DecidableEq",
   "ite",
   "Ordering",
   "Ordering.lt",
   "Eq",
   "Ordering.eq",
   "Ordering.gt"],
  "name": "compareOfLessAndEq",
  "constType": "Definition"},
 {"references":
  ["CancelCommMonoidWithZero",
   "IsLeftCancelMulZero.to_isCancelMulZero",
   "CommMonoid.toCommSemigroup",
   "CommMonoidWithZero.toCommMonoid",
   "CancelCommMonoidWithZero.toCommMonoidWithZero",
   "CommMonoidWithZero.toZero",
   "CancelCommMonoidWithZero.toIsLeftCancelMulZero"],
  "name": "CancelCommMonoidWithZero.toCancelMonoidWithZero.proof_1",
  "constType": "Theorem"},
 {"references":
  ["CommMonoidWithZero",
   "Nat",
   "inferInstance",
   "CommSemiring.toCommMonoidWithZero",
   "Nat.commSemiring",
   "CancelCommMonoidWithZero.mk",
   "CommMonoidWithZero.mk",
   "CommMonoidWithZero.toCommMonoid",
   "CommMonoidWithZero.toZero",
   "CommMonoidWithZero.zero_mul",
   "CommMonoidWithZero.mul_zero",
   "Nat.cancelCommMonoidWithZero.proof_1"],
  "name": "Nat.cancelCommMonoidWithZero",
  "constType": "Definition"},
 {"references": [], "name": "Decidable", "constType": "Other"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.toAddSemigroup",
  "constType": "Definition"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.toNatCast",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "ite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.modCore",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.modCore_eq_mod",
   "_private.Init.Data.Nat.Div.0.Nat.modCore._eq_1"],
  "name": "Nat.mod_eq",
  "constType": "Theorem"},
 {"references": ["Acc", "Acc.intro", "Acc.rec"],
  "name": "Acc.recOn",
  "constType": "Definition"},
 {"references": ["Subtype"],
  "name": "Subtype.property",
  "constType": "Definition"},
 {"references": ["Bool", "Bool.casesOn"],
  "name": "Bool.noConfusionType",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Units",
   "Nat.monoid",
   "Eq",
   "Units.val",
   "OfNat.ofNat",
   "One.toOfNat1",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommGroup.toDivisionCommMonoid",
   "Units.instCommGroupUnits",
   "Nat.commMonoid",
   "IsUnit",
   "Eq.refl",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Nat.isUnit_iff.match_1",
  "constType": "Definition"},
 {"references": [], "name": "LT", "constType": "Other"},
 {"references":
  ["Semiring",
   "MonoidWithZero.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "NonUnitalSemiring.mul_assoc",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.npow",
   "Semiring.npow_zero",
   "Semiring.npow_succ",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "Semiring.toMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.dvd_antisymm",
   "Nat.gcd",
   "Nat.gcd_dvd_left",
   "Nat.dvd_gcd",
   "Nat.dvd_refl"],
  "name": "Nat.gcd_eq_left",
  "constType": "Theorem"},
 {"references": [], "name": "MulOneClass", "constType": "Other"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "lt_of_le_of_lt",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "zero_le"],
  "name": "pos_of_gt",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.div._unary", "PSigma.mk"],
  "name": "Nat.div",
  "constType": "Definition"},
 {"references": [], "name": "AddLeftCancelSemigroup", "constType": "Other"},
 {"references": ["Acc", "Acc.rec"],
  "name": "WellFounded.fixF",
  "constType": "Definition"},
 {"references": [], "name": "ContravariantClass.mk", "constType": "Other"},
 {"references": [], "name": "PProd.mk", "constType": "Other"},
 {"references": ["Preorder", "LT.lt", "Preorder.toLT"],
  "name": "lt_irrefl.match_2",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Bool",
   "Nat.below",
   "Nat.beq.match_1",
   "Unit",
   "Nat.zero",
   "Bool.true",
   "Bool.false",
   "Nat.succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.beq",
  "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocSemiring.zero_mul",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_4",
  "constType": "Theorem"},
 {"references": ["Monoid"],
  "name": "Monoid.one_mul",
  "constType": "Definition"},
 {"references": ["LT"], "name": "LT.lt", "constType": "Definition"},
 {"references": ["Decidable", "Eq"],
  "name": "DecidableEq",
  "constType": "Definition"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.toOne",
  "constType": "Definition"},
 {"references":
  ["MonoidWithZero",
   "MulZeroOneClass.mk",
   "MulOneClass.mk",
   "Monoid.toOne",
   "MonoidWithZero.toMonoid",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Monoid.one_mul",
   "Monoid.mul_one",
   "MonoidWithZero.toZero",
   "MonoidWithZero.zero_mul",
   "MonoidWithZero.mul_zero"],
  "name": "MonoidWithZero.toMulZeroOneClass",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "And.intro",
   "And.casesOn"],
  "name": "Nat.mod_zero.match_1",
  "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Nat.rec",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congrArg",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "Nat.cast_zero",
   "add_zero",
   "AddMonoid.toAddZeroClass",
   "eq_self",
   "Nat.succ",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "congr",
   "Nat.cast_succ",
   "congrFun",
   "add_assoc"],
  "name": "Nat.cast_add",
  "constType": "Theorem"},
 {"references": ["Monoid", "Units"],
  "name": "Units.inv",
  "constType": "Definition"},
 {"references":
  ["invImage",
   "PSigma",
   "Nat",
   "PSigma.casesOn",
   "SizeOf.sizeOf",
   "instSizeOfNat",
   "instWellFoundedRelation"],
  "name": "Nat.modCore._unary.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "Eq",
   "absurd",
   "False",
   "Eq.rec",
   "Eq.symm",
   "Nat.lt_irrefl"],
  "name": "Nat.ne_of_lt",
  "constType": "Theorem"},
 {"references": [], "name": "Function.comp", "constType": "Definition"},
 {"references": ["CommMonoidWithZero"],
  "name": "CommMonoidWithZero.toCommMonoid",
  "constType": "Definition"},
 {"references": [],
  "name": "CanonicallyOrderedCommSemiring.mk",
  "constType": "Other"},
 {"references": [], "name": "LinearOrderedSemiring.mk", "constType": "Other"},
 {"references": [], "name": "AddMonoidWithOne.mk", "constType": "Other"},
 {"references": [], "name": "WellFoundedRelation.mk", "constType": "Other"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "lt_irrefl.match_2",
   "False",
   "lt_irrefl.match_1",
   "And",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "le_not_le_of_lt"],
  "name": "lt_irrefl",
  "constType": "Theorem"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.zero_add",
  "constType": "Definition"},
 {"references":
  ["AddRightCancelMonoid",
   "AddMonoid.mk",
   "AddRightCancelSemigroup.toAddSemigroup",
   "AddRightCancelMonoid.toAddRightCancelSemigroup",
   "AddRightCancelMonoid.toZero",
   "AddRightCancelMonoid.zero_add",
   "AddRightCancelMonoid.add_zero",
   "AddRightCancelMonoid.nsmul",
   "AddRightCancelMonoid.nsmul_zero",
   "AddRightCancelMonoid.nsmul_succ"],
  "name": "AddRightCancelMonoid.toAddMonoid",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congrArg",
   "Nat.zero_mul",
   "eq_self",
   "Eq.mpr",
   "Nat.succ",
   "Nat.pred",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.sub_succ",
   "Nat.mul_pred_left",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ_mul",
   "Nat.sub_sub"],
  "name": "Nat.mul_sub_right_distrib",
  "constType": "Theorem"},
 {"references": [], "name": "NeZero.mk", "constType": "Other"},
 {"references": ["Preorder", "Preorder.lt_iff_le_not_le"],
  "name": "lt_iff_le_not_le",
  "constType": "Theorem"},
 {"references": [], "name": "IsRightCancelMulZero.mk", "constType": "Other"},
 {"references": [], "name": "Decidable.isTrue", "constType": "Other"},
 {"references":
  ["Nat", "Or", "Eq", "LT.lt", "instLTNat", "Or.inl", "Or.inr", "Or.casesOn"],
  "name": "Nat.lt_wfRel.match_1",
  "constType": "Definition"},
 {"references": ["Semiring"],
  "name": "Semiring.npow_succ",
  "constType": "Definition"},
 {"references":
  ["invImage",
   "PSigma",
   "Nat",
   "PSigma.casesOn",
   "SizeOf.sizeOf",
   "instSizeOfNat",
   "instWellFoundedRelation"],
  "name": "Nat.div._unary.proof_1",
  "constType": "Theorem"},
 {"references": ["AddCancelCommMonoid"],
  "name": "AddCancelCommMonoid.add_comm",
  "constType": "Definition"},
 {"references":
  ["LE.le",
   "Nat",
   "instLENat",
   "Nat.succ",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.le",
   "Nat.le.casesOn",
   "Eq",
   "HEq",
   "Nat.noConfusion",
   "Nat.le.refl",
   "Nat.le.step",
   "Eq.refl",
   "HEq.refl"],
  "name": "Nat.not_succ_le_zero.match_1",
  "constType": "Definition"},
 {"references": ["WellFoundedRelation.wf", "Nat", "measure", "id"],
  "name": "Nat.gcd.proof_1",
  "constType": "Theorem"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.natCast_zero",
  "constType": "Definition"},
 {"references": ["Preorder", "LT.lt", "Preorder.toLT", "Ne.symm", "LT.lt.ne"],
  "name": "LT.lt.ne'",
  "constType": "Theorem"},
 {"references": [], "name": "AddRightCancelMonoid", "constType": "Other"},
 {"references":
  ["Add",
   "IsLeftCancelAdd",
   "PartialOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "CovariantClass.mk",
   "LT.lt",
   "Preorder.toLT",
   "LE.le.lt_of_ne",
   "CovariantClass.elim",
   "LT.lt.le",
   "Iff.mpr",
   "Ne",
   "add_ne_add_right",
   "LT.lt.ne"],
  "name": "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
  "constType": "Definition"},
 {"references": [], "name": "PSigma", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Nat.commSemiring",
   "LinearOrder",
   "Nat.linearOrder",
   "LinearOrderedCommSemiring.mk",
   "StrictOrderedCommSemiring.mk",
   "StrictOrderedSemiring.mk",
   "CommSemiring.toSemiring",
   "PartialOrder.mk",
   "Preorder.mk",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "LT.mk",
   "Nat.lt",
   "Nat.linearOrderedCommSemiring.proof_1",
   "Nat.linearOrderedCommSemiring.proof_2",
   "Nat.linearOrderedCommSemiring.proof_3",
   "Nat.linearOrderedCommSemiring.proof_4",
   "Nat.add_le_add_left",
   "Nat.le_of_add_le_add_left",
   "Nat.linearOrderedCommSemiring.proof_5",
   "Nat.linearOrderedCommSemiring.proof_6",
   "Nat.mul_lt_mul_of_pos_left",
   "Nat.mul_lt_mul_of_pos_right",
   "CommSemiring.mul_comm",
   "LinearOrder.toMin",
   "LinearOrder.toMax",
   "LinearOrder.toOrd",
   "LinearOrder.le_total",
   "LinearOrder.decidableLE",
   "LinearOrder.decidableEq",
   "LinearOrder.decidableLT",
   "LinearOrder.min_def",
   "LinearOrder.max_def",
   "LinearOrder.compare_eq_compareOfLessAndEq"],
  "name": "Nat.linearOrderedCommSemiring",
  "constType": "Definition"},
 {"references": ["Mul.mk", "Nat", "Nat.mul"],
  "name": "instMulNat",
  "constType": "Definition"},
 {"references": ["Semigroup"],
  "name": "Semigroup.mul_assoc",
  "constType": "Definition"},
 {"references": ["Group"],
  "name": "Group.toDivInvMonoid",
  "constType": "Definition"},
 {"references": [], "name": "WellFoundedRelation", "constType": "Other"},
 {"references":
  ["Zero", "One", "LE", "ZeroLEOneClass", "ZeroLEOneClass.zero_le_one"],
  "name": "zero_le_one",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Units",
   "Units.ext",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "mul_assoc",
   "Units.val"],
  "name": "Units.instGroupUnits.proof_6",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.zero", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.add.match_1",
  "constType": "Definition"},
 {"references": ["Exists", "Exists.intro", "Exists.casesOn"],
  "name": "forall_exists_index.match_1",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.toMul",
  "constType": "Definition"},
 {"references": [], "name": "DivInvMonoid", "constType": "Other"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.toAddMonoid",
  "constType": "Definition"},
 {"references":
  ["WellFounded",
   "WellFounded.intro",
   "InvImage",
   "InvImage.accessible",
   "WellFounded.apply"],
  "name": "InvImage.wf",
  "constType": "Definition"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.inv_inv",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.gcd.induction",
   "And",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.gcd",
   "Eq.mpr",
   "OfNat.ofNat",
   "instOfNatNat",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.gcd_zero_left",
   "And.intro",
   "Nat.dvd_zero",
   "Nat.dvd_refl",
   "LT.lt",
   "instLTNat",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "And.right",
   "Eq.mp",
   "Eq.symm",
   "Nat.gcd_rec",
   "Iff.mp",
   "Nat.dvd_mod_iff",
   "And.left"],
  "name": "Nat.gcd_dvd",
  "constType": "Theorem"},
 {"references": [], "name": "False", "constType": "Other"},
 {"references":
  ["Preorder", "LE.le", "Preorder.toLE", "LT.lt", "Preorder.toLT"],
  "name": "lt_of_le_of_lt.match_1",
  "constType": "Definition"},
 {"references": [], "name": "CommMagma.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.succ",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.le",
   "Nat.le.casesOn",
   "Eq",
   "HEq",
   "Nat.noConfusion",
   "Nat.le.refl",
   "Nat.le.step",
   "Eq.refl",
   "HEq.refl"],
  "name": "Nat.not_succ_le_zero.match_2",
  "constType": "Definition"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.toZero",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Units.mk",
   "Units.rec"],
  "name": "Units.casesOn",
  "constType": "Definition"},
 {"references": [], "name": "Acc.intro", "constType": "Other"},
 {"references":
  ["Semigroup",
   "Dvd.dvd",
   "semigroupDvd",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Exists.elim"],
  "name": "Dvd.elim",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.toZero",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.pred_le_pred", "Nat.succ"],
  "name": "Nat.le_of_succ_le_succ",
  "constType": "Theorem"},
 {"references": ["Acc", "Acc.recOn"],
  "name": "Acc.inv",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "CommMonoid",
   "Nat",
   "CommSemiring.toCommMonoid",
   "Nat.commSemiring"],
  "name": "Nat.commMonoid",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.succ_sub_succ_eq_sub"],
  "name": "Nat.succ_sub_succ",
  "constType": "Theorem"},
 {"references": [], "name": "SemigroupWithZero", "constType": "Other"},
 {"references":
  ["Preorder",
   "And",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "And.intro",
   "And.casesOn"],
  "name": "lt_of_lt_of_le.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Min.mk", "constType": "Other"},
 {"references": [], "name": "Sub", "constType": "Other"},
 {"references": ["Group", "mul_left_inv"],
  "name": "inv_mul_self",
  "constType": "Theorem"},
 {"references":
  ["Dvd.mk", "Nat", "Exists", "Eq", "HMul.hMul", "instHMul", "instMulNat"],
  "name": "Nat.instDvdNat",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "OrderedCancelAddCommMonoid.mk",
   "OrderedAddCommMonoid.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedSemiring.add_le_add_left",
   "StrictOrderedSemiring.le_of_add_le_add_left"],
  "name": "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
  "constType": "Definition"},
 {"references": [], "name": "Nat.le", "constType": "Other"},
 {"references": [], "name": "NonUnitalNonAssocSemiring", "constType": "Other"},
 {"references":
  ["PartialOrder",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "dite",
   "Or",
   "LT.lt",
   "Preorder.toLT",
   "Eq",
   "Or.inr",
   "le_antisymm",
   "Not",
   "Or.inl",
   "lt_of_le_not_le"],
  "name": "Decidable.lt_or_eq_of_le",
  "constType": "Theorem"},
 {"references": [], "name": "Int.ofNat", "constType": "Other"},
 {"references": ["Preorder"],
  "name": "Preorder.lt_iff_le_not_le",
  "constType": "Definition"},
 {"references": ["Zero", "NeZero"],
  "name": "NeZero.out",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.brecOn",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "Nat.below",
   "Nat.ble_eq_true_of_le.match_1",
   "Unit",
   "Nat.ble_self_eq_true",
   "Nat.le",
   "Nat.succ",
   "Nat.ble_succ_eq_true",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.ble_eq_true_of_le",
  "constType": "Theorem"},
 {"references": ["MulOneClass", "MulOneClass.mul_one"],
  "name": "mul_one",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toMax",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec"], "name": "Eq.mp", "constType": "Definition"},
 {"references": [], "name": "HEq.refl", "constType": "Other"},
 {"references":
  ["Monoid",
   "MulOneClass.mk",
   "Units",
   "One.mk",
   "Units.mk",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Units.instMulOneClassUnits.proof_1",
   "Mul.mk",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.val",
   "Units.inv",
   "Units.instMulOneClassUnits.proof_2",
   "Units.instMulOneClassUnits.proof_3",
   "Units.instMulOneClassUnits.proof_4",
   "Units.instMulOneClassUnits.proof_5"],
  "name": "Units.instMulOneClassUnits",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec"], "name": "cast", "constType": "Definition"},
 {"references": ["SemigroupWithZero"],
  "name": "SemigroupWithZero.toSemigroup",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.left_distrib",
  "constType": "Definition"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.nsmul_zero",
  "constType": "Definition"},
 {"references":
  ["Iff",
   "Iff.intro",
   "And",
   "And.symm.match_1",
   "And.intro",
   "Iff.mp",
   "Iff.mpr"],
  "name": "and_congr_right",
  "constType": "Theorem"},
 {"references":
  ["rfl",
   "Nat",
   "NatCast.natCast",
   "NatCast.mk",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.commSemiring.proof_2",
  "constType": "Theorem"},
 {"references": [], "name": "Decidable.rec", "constType": "Other"},
 {"references":
  ["Semiring.one_mul",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_7",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.Prime",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Exists.casesOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Or",
   "OfNat.ofNat",
   "instOfNatNat",
   "IsUnit",
   "Nat.monoid",
   "Or.imp_right",
   "Eq.ndrec",
   "Eq.mpr",
   "id",
   "Eq.refl",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "mul_one",
   "Eq.symm",
   "Eq.mp",
   "propext",
   "Nat.isUnit_iff",
   "Irreducible.isUnit_or_isUnit"],
  "name": "Nat.Prime.eq_one_or_self_of_dvd",
  "constType": "Theorem"},
 {"references": ["Sub"], "name": "Sub.sub", "constType": "Definition"},
 {"references": ["Nat", "Eq.refl", "Max.max", "Nat.instMaxNat"],
  "name": "Nat.linearOrder.proof_2",
  "constType": "Theorem"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.toMonoid",
  "constType": "Definition"},
 {"references": ["Not", "Iff", "Eq", "Eq.rec", "Iff.rfl"],
  "name": "instDecidableEqProp.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Not",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "LE.le",
   "instLENat",
   "absurd",
   "False",
   "Nat.ble_eq_true_of_le"],
  "name": "Nat.not_le_of_not_ble_eq_true",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Exists.intro",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "of_eq_true",
   "eq_self"],
  "name": "Nat.dvd_zero",
  "constType": "Theorem"},
 {"references": [], "name": "WellFounded.rec", "constType": "Other"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.natCast_zero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Iff.trans",
   "Nat.Prime",
   "And",
   "LE.le",
   "instLENat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Or",
   "Eq",
   "LT.lt",
   "instLTNat",
   "Nat.prime_def_lt''",
   "and_congr_right",
   "forall_congr'",
   "Iff.intro",
   "Or.resolve_right",
   "Nat.ne_of_lt",
   "Or.imp_left",
   "LE.le.lt_or_eq_dec",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "Nat.decLe",
   "Nat.le_of_dvd",
   "Nat.le_of_succ_le",
   "Nat.succ"],
  "name": "Nat.prime_def_lt",
  "constType": "Theorem"},
 {"references": [], "name": "Nat.AtLeastTwo", "constType": "Other"},
 {"references": [], "name": "CancelMonoidWithZero", "constType": "Other"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.toMul",
  "constType": "Definition"},
 {"references": [], "name": "Units.rec", "constType": "Other"},
 {"references": ["Mul"], "name": "Mul.mul", "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Eq",
   "Units.val",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Units.mk",
   "Units.casesOn"],
  "name": "Units.ext.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Nontrivial", "constType": "Other"},
 {"references": [], "name": "HSub", "constType": "Other"},
 {"references": [],
  "name": "CanonicallyOrderedAddCommMonoid",
  "constType": "Other"},
 {"references": [], "name": "HSub.mk", "constType": "Other"},
 {"references": ["Zero", "One", "LE", "ZeroLEOneClass"],
  "name": "ZeroLEOneClass.zero_le_one",
  "constType": "Definition"},
 {"references":
  ["WellFoundedRelation",
   "WellFoundedRelation.mk",
   "InvImage",
   "WellFoundedRelation.rel",
   "invImage.proof_1"],
  "name": "invImage",
  "constType": "Definition"},
 {"references":
  ["WellFounded.fix",
   "PSigma",
   "Nat",
   "invImage",
   "PSigma.casesOn",
   "SizeOf.sizeOf",
   "instSizeOfNat",
   "instWellFoundedRelation",
   "Nat.modCore._unary.proof_1",
   "PSigma.mk",
   "dite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.div_rec_lemma",
   "Not"],
  "name": "Nat.modCore._unary",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "Or.casesOn",
   "Eq",
   "LT.lt",
   "Preorder.toLT",
   "Or",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "Decidable.eq_or_lt_of_le",
   "Eq.ndrec",
   "le_refl",
   "of_eq_true",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "MulZeroClass.toZero",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "MulZeroClass.mul_zero",
   "Mathlib.Order.Basic._auxLemma.1",
   "LT.lt.le",
   "mul_lt_mul_of_pos_right",
   "StrictOrderedSemiring.toMulPosStrictMono"],
  "name": "StrictOrderedSemiring.toOrderedSemiring'.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Unit",
   "Nat.le.refl",
   "Nat.le",
   "Nat.succ",
   "Nat.le.step",
   "Nat.le.casesOn",
   "Eq",
   "HEq",
   "Eq.ndrec",
   "Unit.unit",
   "Eq.symm",
   "eq_of_heq",
   "Eq.refl",
   "HEq.refl"],
  "name": "Nat.succ_le_succ.match_1",
  "constType": "Definition"},
 {"references": ["Nat", "rfl", "Nat.gcd", "Nat.succ"],
  "name": "Nat.gcd_succ",
  "constType": "Theorem"},
 {"references":
  ["AddCommMagma",
   "IsLeftCancelAdd",
   "AddCommMagma.toAdd",
   "IsRightCancelAdd.mk",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "add_left_cancel",
   "Eq.trans",
   "add_comm"],
  "name": "AddCommMagma.IsLeftCancelAdd.toIsRightCancelAdd",
  "constType": "Theorem"},
 {"references": [], "name": "OrderedAddCommMonoid.mk", "constType": "Other"},
 {"references": ["Monoid"],
  "name": "Monoid.toSemigroup",
  "constType": "Definition"},
 {"references": ["Or", "Or.elim.match_1"],
  "name": "Or.elim",
  "constType": "Theorem"},
 {"references":
  ["DivisionMonoid",
   "InvolutiveInv.mk",
   "DivInvMonoid.toInv",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionMonoid.inv_inv"],
  "name": "DivisionMonoid.toInvolutiveInv",
  "constType": "Definition"},
 {"references": ["Group", "Group.mul_left_inv"],
  "name": "mul_left_inv",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.toStrictOrderedSemiring",
  "constType": "Definition"},
 {"references":
  ["MonoidWithZero",
   "Irreducible",
   "MonoidWithZero.toMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "not_irreducible_zero.match_1",
   "False",
   "Not",
   "IsUnit",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Or",
   "Or.elim",
   "Eq.symm",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "MulZeroClass.toZero",
   "MulZeroClass.mul_zero"],
  "name": "not_irreducible_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "Nat.succ",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.noConfusion",
   "False"],
  "name": "Nat.succ_ne_zero",
  "constType": "Theorem"},
 {"references": ["PUnit.unit"], "name": "Unit.unit", "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.le.dest.match_1",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.le.dest",
   "Nat.le.intro",
   "Eq.rec",
   "rfl",
   "Eq.symm",
   "Nat.left_distrib"],
  "name": "Nat.mul_le_mul_left",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.le_of_add_le_add_left.match_1",
   "Exists",
   "Eq",
   "Nat.le.dest",
   "Nat.le.intro",
   "Nat.add_left_cancel",
   "Eq.mp",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_assoc"],
  "name": "Nat.le_of_add_le_add_left",
  "constType": "Theorem"},
 {"references": [], "name": "StrictOrderedSemiring", "constType": "Other"},
 {"references":
  ["Decidable",
   "Decidable.isTrue",
   "Not",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "if_pos.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat.Prime",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Irreducible.ne_one",
   "Nat.monoid",
   "rfl"],
  "name": "Nat.not_prime_one",
  "constType": "Theorem"},
 {"references": ["Eq.refl"], "name": "rfl", "constType": "Definition"},
 {"references":
  ["NonAssocSemiring",
   "MulZeroOneClass.mk",
   "MulOneClass.mk",
   "NonAssocSemiring.toOne",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring.one_mul",
   "NonAssocSemiring.mul_one",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "NonAssocSemiring.toMulZeroOneClass",
  "constType": "Definition"},
 {"references": [], "name": "LT.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.eq_zero_of_zero_dvd.match_1",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Eq.trans",
   "Nat.zero_mul"],
  "name": "Nat.eq_zero_of_zero_dvd",
  "constType": "Theorem"},
 {"references": ["Nat", "OfNat.mk", "Int", "Int.ofNat"],
  "name": "instOfNatInt",
  "constType": "Definition"},
 {"references": [], "name": "Monoid.mk", "constType": "Other"},
 {"references": [], "name": "DivInvOneMonoid.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.pos_of_ne_zero",
   "Eq",
   "Nat.ne_of_gt",
   "Nat.eq_zero_of_zero_dvd",
   "Eq.rec"],
  "name": "Nat.pos_of_dvd_of_pos",
  "constType": "Theorem"},
 {"references": ["Nat", "LE.le", "instLENat", "Nat.le.step"],
  "name": "Nat.le_step",
  "constType": "Theorem"},
 {"references": ["SemigroupWithZero"],
  "name": "SemigroupWithZero.zero_mul",
  "constType": "Definition"},
 {"references":
  ["Preorder.le_trans",
   "Nat",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Nat.linearOrder"],
  "name": "Nat.linearOrderedCommSemiring.proof_2",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "congr",
  "constType": "Theorem"},
 {"references": ["Eq"],
  "name": "Function.Injective",
  "constType": "Definition"},
 {"references": ["False", "False.rec"],
  "name": "False.elim",
  "constType": "Definition"},
 {"references": ["Add"], "name": "Add.add", "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.le_antisymm",
   "Nat.le_of_mul_le_mul_left",
   "Nat.le_of_eq",
   "Eq.symm"],
  "name": "Nat.eq_of_mul_eq_mul_left",
  "constType": "Theorem"},
 {"references": ["CovariantClass"],
  "name": "CovariantClass.elim",
  "constType": "Definition"},
 {"references": [], "name": "Ord", "constType": "Other"},
 {"references":
  ["Monoid",
   "eq_true",
   "IsUnit",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "isUnit_one"],
  "name": "Mathlib.Algebra.Group.Units._auxLemma.25",
  "constType": "Theorem"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.decidableEq",
  "constType": "Definition"},
 {"references":
  ["CommMonoid",
   "Units",
   "CommMonoid.toMonoid",
   "Units.ext",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "DivInvMonoid.toMonoid",
   "Group.toDivInvMonoid",
   "Units.instGroupUnits",
   "mul_comm",
   "CommSemigroup.toCommMagma",
   "CommMonoid.toCommSemigroup",
   "Units.val"],
  "name": "Units.instCommGroupUnits.proof_1",
  "constType": "Theorem"},
 {"references": ["AddCommMagma"],
  "name": "AddCommMagma.toAdd",
  "constType": "Definition"},
 {"references": ["InvolutiveInv"],
  "name": "InvolutiveInv.inv_inv",
  "constType": "Definition"},
 {"references": ["AddCommMagma", "AddCommMagma.add_comm"],
  "name": "add_comm",
  "constType": "Theorem"},
 {"references": ["AddSemigroup", "AddSemigroup.add_assoc"],
  "name": "add_assoc",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "id",
   "Eq",
   "Nat.div",
   "ite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.div._unary",
   "PSigma.mk",
   "Eq.trans",
   "WellFounded.fix",
   "PSigma",
   "invImage",
   "PSigma.casesOn",
   "SizeOf.sizeOf",
   "instSizeOfNat",
   "instWellFoundedRelation",
   "Nat.div._unary.proof_1",
   "dite",
   "Nat.div_rec_lemma",
   "Not",
   "WellFounded.fix_eq",
   "Eq.refl"],
  "name": "_private.Init.Data.Nat.Div.0.Nat.div._eq_1",
  "constType": "Theorem"},
 {"references": [], "name": "InvolutiveInv.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "rfl",
   "NatCast.natCast",
   "NatCast.mk",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.commSemiring.proof_3",
  "constType": "Theorem"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.natCast_succ",
  "constType": "Definition"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.div_eq_mul_inv",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "CommMonoid.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "NonUnitalSemiring.mul_assoc",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.npow",
   "Semiring.npow_zero",
   "Semiring.npow_succ",
   "CommSemiring.mul_comm"],
  "name": "CommSemiring.toCommMonoid",
  "constType": "Definition"},
 {"references": ["DivInvOneMonoid"],
  "name": "DivInvOneMonoid.inv_one",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Not",
   "decide_eq_false.match_1",
   "Eq",
   "Bool",
   "Decidable.decide",
   "Bool.false",
   "absurd",
   "Decidable.isTrue",
   "rfl",
   "Decidable.isFalse"],
  "name": "decide_eq_false",
  "constType": "Theorem"},
 {"references": [], "name": "inferInstance", "constType": "Definition"},
 {"references": [], "name": "DivisionMonoid", "constType": "Other"},
 {"references": ["Decidable", "Decidable.casesOn", "Not"],
  "name": "ite",
  "constType": "Definition"},
 {"references": ["Or", "Not", "Or.elim", "id", "absurd"],
  "name": "Or.resolve_right",
  "constType": "Theorem"},
 {"references":
  ["Mul",
   "Zero",
   "IsLeftCancelMulZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "IsLeftCancelMulZero.mul_left_cancel_of_ne_zero"],
  "name": "mul_left_cancel₀",
  "constType": "Theorem"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.mul_one",
  "constType": "Definition"},
 {"references": [], "name": "HMul", "constType": "Other"},
 {"references":
  ["Nat",
   "propext",
   "IsUnit",
   "Nat.monoid",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.isUnit_iff"],
  "name": "Mathlib.Data.Nat.Prime._auxLemma.1",
  "constType": "Theorem"},
 {"references": ["Nat", "Eq", "Nat.gcd", "OfNat.ofNat", "instOfNatNat"],
  "name": "Nat.Coprime",
  "constType": "Definition"},
 {"references": [], "name": "PSigma.mk", "constType": "Other"},
 {"references": ["And", "And.intro", "And.casesOn"],
  "name": "And.comm.match_1",
  "constType": "Definition"},
 {"references":
  ["CommSemigroup",
   "CommMagma.mk",
   "Semigroup.toMul",
   "CommSemigroup.toSemigroup",
   "CommSemigroup.mul_comm"],
  "name": "CommSemigroup.toCommMagma",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.mod_lt", "Nat.succ", "Nat.zero_lt_succ"],
  "name": "_private.Init.Data.Nat.Gcd.0.Nat.gcdF.proof_1",
  "constType": "Theorem"},
 {"references":
  ["MonoidWithZero",
   "Irreducible",
   "MonoidWithZero.toMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Not",
   "IsUnit",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Or",
   "Irreducible.mk",
   "Irreducible.casesOn"],
  "name": "not_irreducible_zero.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.mpr",
   "Nat.zero",
   "id",
   "implies_congr",
   "OfNat.ofNat",
   "instOfNatNat",
   "congr",
   "congrArg",
   "Nat.zero_add",
   "Eq.refl",
   "Nat.succ",
   "Eq.trans",
   "Nat.succ_add",
   "Nat.succ.injEq"],
  "name": "Nat.add_left_cancel",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "dite",
   "Iff",
   "Decidable.isTrue",
   "instDecidableIff.proof_1",
   "Not",
   "Decidable.isFalse",
   "instDecidableIff.proof_2",
   "instDecidableIff.proof_3",
   "instDecidableIff.proof_4"],
  "name": "instDecidableIff",
  "constType": "Definition"},
 {"references": ["AddCancelMonoid"],
  "name": "AddCancelMonoid.toAddLeftCancelMonoid",
  "constType": "Definition"},
 {"references":
  ["Nat", "Unit", "Nat.zero", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Nat.beq.match_1",
  "constType": "Definition"},
 {"references": [], "name": "MulZeroClass", "constType": "Other"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.le_total",
  "constType": "Definition"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Nat.zero_add.match_1",
  "constType": "Definition"},
 {"references": ["Add", "HAdd.mk", "Add.add"],
  "name": "instHAdd",
  "constType": "Definition"},
 {"references": [], "name": "CommSemigroup.mk", "constType": "Other"},
 {"references": ["PSigma", "PSigma.mk", "PSigma.rec"],
  "name": "PSigma.casesOn",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.below",
   "Nat.succ_add.match_1",
   "rfl",
   "OfNat.ofNat",
   "instOfNatNat",
   "congrArg",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.succ_add",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.zero_lt_succ"],
  "name": "Nat.succ_pos",
  "constType": "Theorem"},
 {"references": [], "name": "HMul.mk", "constType": "Other"},
 {"references":
  ["AddCommMonoid",
   "AddCommSemigroup.mk",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "AddCommMonoid.add_comm"],
  "name": "AddCommMonoid.toAddCommSemigroup",
  "constType": "Definition"},
 {"references": ["CommMonoid"],
  "name": "CommMonoid.toMonoid",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toMin",
  "constType": "Definition"},
 {"references": [], "name": "Group.mk", "constType": "Other"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.nsmul_zero",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Semigroup",
   "Nat",
   "SemigroupWithZero.toSemigroup",
   "NonUnitalSemiring.toSemigroupWithZero",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "CommSemiring.toNonUnitalCommSemiring",
   "Nat.commSemiring"],
  "name": "Nat.semigroup",
  "constType": "Definition"},
 {"references": [], "name": "AddRightCancelSemigroup.mk", "constType": "Other"},
 {"references": [], "name": "outParam", "constType": "Definition"},
 {"references": [], "name": "OrderedAddCommMonoid", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "inferInstanceAs"],
  "name": "CommSemiring.toCommMonoidWithZero.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "SizeOf.mk", "constType": "Other"},
 {"references":
  ["Nat", "Nat.le", "Nat.le.refl", "Nat.succ", "Nat.le.step", "Nat.le.rec"],
  "name": "Nat.le.casesOn",
  "constType": "Definition"},
 {"references": ["AddCommMonoid"],
  "name": "AddCommMonoid.toAddMonoid",
  "constType": "Definition"},
 {"references":
  ["Nat.le_of_lt",
   "OfNat.ofNat",
   "Nat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "Nat.commSemiring",
   "One.toOfNat1",
   "Semiring.toOne",
   "Nat.zero_lt_succ",
   "instOfNatNat"],
  "name": "Nat.linearOrderedCommSemiring.proof_6",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.casesOn", "Eq"],
  "name": "Nat.noConfusionType",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.below",
   "Nat.succ_add.match_1",
   "Eq.symm",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero_add",
   "Nat.succ",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.succ_add",
   "congrArg",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.add_comm",
  "constType": "Theorem"},
 {"references": [], "name": "LE.mk", "constType": "Other"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "congrArg",
  "constType": "Theorem"},
 {"references": ["AddZeroClass", "AddZeroClass.add_zero"],
  "name": "add_zero",
  "constType": "Theorem"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.one_mul",
  "constType": "Definition"},
 {"references": [], "name": "HDiv.mk", "constType": "Other"},
 {"references":
  ["AddCancelCommMonoid",
   "AddCommMagma.IsLeftCancelAdd.toIsRightCancelAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCancelCommMonoid.toAddCommMonoid",
   "AddLeftCancelSemigroup.toIsLeftCancelAdd",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "AddCancelCommMonoid.toAddLeftCancelMonoid"],
  "name": "AddCancelCommMonoid.toAddCancelMonoid.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "Zero.mk", "constType": "Other"},
 {"references": [], "name": "LinearOrderedSemiring", "constType": "Other"},
 {"references":
  ["Nat", "Eq.trans", "Nat.gcd", "OfNat.ofNat", "instOfNatNat", "Nat.gcd_comm"],
  "name": "Nat.Coprime.symm",
  "constType": "Theorem"},
 {"references":
  ["AddCancelMonoid",
   "IsCancelAdd.mk",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddRightCancelMonoid.toAddMonoid",
   "AddCancelMonoid.toAddRightCancelMonoid",
   "IsLeftCancelAdd.mk",
   "AddLeftCancelSemigroup.add_left_cancel",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "AddCancelMonoid.toAddLeftCancelMonoid",
   "IsRightCancelAdd.mk",
   "AddRightCancelSemigroup.add_right_cancel",
   "AddRightCancelMonoid.toAddRightCancelSemigroup"],
  "name": "AddCancelMonoid.toIsCancelAdd",
  "constType": "Definition"},
 {"references": [], "name": "Nat.rec", "constType": "Other"},
 {"references": [], "name": "MulZeroClass.mk", "constType": "Other"},
 {"references": [], "name": "Nat.le.rec", "constType": "Other"},
 {"references": [], "name": "AddMonoid.mk", "constType": "Other"},
 {"references":
  ["CancelMonoidWithZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "CancelMonoidWithZero.toMonoidWithZero",
   "Function.Injective.eq_iff",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "mul_right_injective₀",
   "IsCancelMulZero.toIsLeftCancelMulZero",
   "CancelMonoidWithZero.toIsCancelMulZero"],
  "name": "mul_right_inj'",
  "constType": "Theorem"},
 {"references":
  ["Mul",
   "Zero",
   "Preorder",
   "CovariantClass",
   "Subtype",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "HMul.hMul",
   "instHMul",
   "Subtype.val"],
  "name": "MulPosStrictMono",
  "constType": "Definition"},
 {"references": ["AddCommMonoidWithOne"],
  "name": "AddCommMonoidWithOne.toAddMonoidWithOne",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Units.ext",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "mul_assoc",
   "Monoid.toSemigroup",
   "Units.val"],
  "name": "Units.instGroupUnits.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nontrivial",
   "Nat",
   "Nat.nontrivial",
   "OrderBot",
   "instLENat",
   "Nat.orderBot",
   "OrderedAddCommMonoid",
   "inferInstance",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Nat.orderedSemiring",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring",
   "CommSemiring",
   "Nat.commSemiring",
   "CanonicallyOrderedCommSemiring.mk",
   "CanonicallyOrderedAddCommMonoid.mk",
   "OrderedAddCommMonoid.mk",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.add_le_add_left",
   "OrderBot.mk",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderBot.toBot",
   "OrderBot.bot_le",
   "Nat.canonicallyOrderedCommSemiring.proof_1",
   "Nat.le_add_right",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Nat.canonicallyOrderedCommSemiring.proof_2",
   "Nat.canonicallyOrderedCommSemiring.proof_3",
   "Nat.canonicallyOrderedCommSemiring.proof_4",
   "Nat.canonicallyOrderedCommSemiring.proof_5",
   "Nat.canonicallyOrderedCommSemiring.proof_6",
   "Semiring.toOne",
   "Nat.canonicallyOrderedCommSemiring.proof_7",
   "Nat.canonicallyOrderedCommSemiring.proof_8",
   "Semiring.toNatCast",
   "Nat.canonicallyOrderedCommSemiring.proof_9",
   "Nat.canonicallyOrderedCommSemiring.proof_10",
   "Semiring.npow",
   "Nat.canonicallyOrderedCommSemiring.proof_11",
   "Nat.canonicallyOrderedCommSemiring.proof_12",
   "CommSemiring.mul_comm",
   "Nat.eq_zero_of_mul_eq_zero"],
  "name": "Nat.canonicallyOrderedCommSemiring",
  "constType": "Definition"},
 {"references": ["Preorder"],
  "name": "Preorder.le_refl",
  "constType": "Definition"},
 {"references":
  ["OrderedSemiring",
   "ZeroLEOneClass.mk",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "OrderedSemiring.toSemiring",
   "Semiring.toOne",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toPartialOrder",
   "OrderedSemiring.zero_le_one"],
  "name": "OrderedSemiring.zeroLEOneClass",
  "constType": "Definition"},
 {"references":
  ["Nat", "LE.le", "instLENat", "Nat.zero", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.le.dest.match_2",
  "constType": "Definition"},
 {"references": [], "name": "Semigroup.mk", "constType": "Other"},
 {"references": ["OrderedAddCommMonoid"],
  "name": "OrderedAddCommMonoid.toPartialOrder",
  "constType": "Definition"},
 {"references": ["Not", "And", "And.right"],
  "name": "instDecidableAnd.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Nat.dvd_add.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Mul", "constType": "Other"},
 {"references": [], "name": "WellFounded", "constType": "Other"},
 {"references": [], "name": "Ordering.lt", "constType": "Other"},
 {"references":
  ["WellFoundedRelation",
   "InvImage.wf",
   "WellFoundedRelation.rel",
   "WellFoundedRelation.wf"],
  "name": "invImage.proof_1",
  "constType": "Theorem"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "zpowRec.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.pred_le_pred.match_1",
   "Nat.pred",
   "Nat.le.refl",
   "Nat.le",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.le_trans",
   "Nat.le_succ"],
  "name": "Nat.pred_le_pred",
  "constType": "Theorem"},
 {"references": [], "name": "InvImage", "constType": "Definition"},
 {"references": [], "name": "OfNat.mk", "constType": "Other"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.add_le_add_left",
  "constType": "Definition"},
 {"references": [], "name": "OfNat", "constType": "Other"},
 {"references": ["AddLeftCancelSemigroup"],
  "name": "AddLeftCancelSemigroup.toAddSemigroup",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalSemiring", "constType": "Other"},
 {"references": [], "name": "Nat.le.step", "constType": "Other"},
 {"references": ["Semiring"],
  "name": "Semiring.natCast_succ",
  "constType": "Definition"},
 {"references": ["Not", "And", "And.left"],
  "name": "instDecidableAnd.proof_2",
  "constType": "Theorem"},
 {"references": ["Or", "Or.elim", "Function.comp", "Or.inl", "Or.inr"],
  "name": "Or.imp",
  "constType": "Theorem"},
 {"references": [], "name": "IsLeftCancelAdd", "constType": "Other"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.dvd_antisymm.match_1",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.eq_zero_of_zero_dvd",
   "Eq.symm",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.le_antisymm",
   "Nat.le_of_dvd",
   "Nat.succ_pos"],
  "name": "Nat.dvd_antisymm",
  "constType": "Theorem"},
 {"references": [], "name": "Irreducible.rec", "constType": "Other"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Nat.dvd_trans.match_1",
  "constType": "Definition"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.nsmul",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Iff",
   "Decidable.isTrue",
   "Not",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "instDecidableEqProp.match_1",
  "constType": "Definition"},
 {"references": ["InvOneClass"],
  "name": "InvOneClass.toOne",
  "constType": "Definition"},
 {"references": ["CanonicallyOrderedCommSemiring"],
  "name": "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Or",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "Or.inl",
   "Or.inr",
   "Or.casesOn"],
  "name": "Nat.lt_or_ge.match_2",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "Nat.gcd",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero",
   "Eq.ndrec",
   "of_eq_true",
   "eq_self",
   "Eq.symm",
   "Nat.succ",
   "Eq.mpr",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "id",
   "Eq.refl",
   "Nat.gcd_succ",
   "Nat.gcd_zero_left"],
  "name": "Nat.gcd_zero_right",
  "constType": "Theorem"},
 {"references": [], "name": "CommMonoidWithZero", "constType": "Other"},
 {"references": ["Function.Injective", "Iff.intro", "Eq", "congr_arg"],
  "name": "Function.Injective.eq_iff",
  "constType": "Theorem"},
 {"references": ["Ne", "Eq", "Eq.symm"],
  "name": "Ne.symm",
  "constType": "Theorem"},
 {"references": [], "name": "AddZeroClass.mk", "constType": "Other"},
 {"references": [], "name": "LinearOrder", "constType": "Other"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "CanonicallyOrderedAddCommMonoid.le_self_add"],
  "name": "le_self_add",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.toDiv",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Iff",
   "instDecidableEqProp.match_1",
   "Eq",
   "Decidable.isTrue",
   "propext",
   "Not",
   "Decidable.isFalse",
   "instDecidableEqProp.proof_1"],
  "name": "instDecidableEqProp",
  "constType": "Definition"},
 {"references": ["InvolutiveInv"],
  "name": "InvolutiveInv.toInv",
  "constType": "Definition"},
 {"references": [], "name": "Eq.rec", "constType": "Other"},
 {"references": ["Nat", "id", "Nat.Coprime"],
  "name": "Nat.Coprime.gcd_eq_one",
  "constType": "Theorem"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.right_distrib",
  "constType": "Definition"},
 {"references": [], "name": "NeZero", "constType": "Other"},
 {"references":
  ["AddMonoidWithOne",
   "PartialOrder",
   "ZeroLEOneClass",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddMonoidWithOne.toOne",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "LT.lt",
   "Preorder.toLT",
   "Eq.mpr",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "Nat",
   "instOfNatNat",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "one_add_one_eq_two",
   "lt_add_one",
   "AddMonoid.toAddZeroClass"],
  "name": "one_lt_two",
  "constType": "Theorem"},
 {"references":
  ["SemigroupWithZero",
   "MulZeroClass.mk",
   "Semigroup.toMul",
   "SemigroupWithZero.toSemigroup",
   "SemigroupWithZero.toZero",
   "SemigroupWithZero.zero_mul",
   "SemigroupWithZero.mul_zero"],
  "name": "SemigroupWithZero.toMulZeroClass",
  "constType": "Definition"},
 {"references":
  ["Semigroup",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Exists.intro",
   "Eq.symm"],
  "name": "Dvd.intro",
  "constType": "Theorem"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.zero_mul",
  "constType": "Definition"},
 {"references":
  ["AddMonoid",
   "AddZeroClass.mk",
   "AddMonoid.toZero",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoid.zero_add",
   "AddMonoid.add_zero"],
  "name": "AddMonoid.toAddZeroClass",
  "constType": "Definition"},
 {"references":
  ["Units",
   "Nat",
   "Nat.monoid",
   "Units.ext",
   "OfNat.ofNat",
   "One.toOfNat1",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommGroup.toDivisionCommMonoid",
   "Units.instCommGroupUnits",
   "Nat.commMonoid",
   "Nat.eq_one_of_dvd_one",
   "Units.val",
   "Exists.intro",
   "Eq",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Units.inv",
   "Eq.symm",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Monoid.toOne",
   "Units.val_inv"],
  "name": "Nat.units_eq_one",
  "constType": "Theorem"},
 {"references":
  ["DivisionMonoid",
   "id",
   "Eq",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "DivInvMonoid.mk",
   "DivInvMonoid.toMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivInvMonoid.toDiv",
   "DivInvMonoid.div_eq_mul_inv",
   "DivInvMonoid.zpow",
   "DivInvMonoid.zpow_zero'",
   "DivInvMonoid.zpow_succ'",
   "DivInvMonoid.zpow_neg'",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Eq.mp",
   "HDiv.hDiv",
   "instHDiv",
   "congr",
   "congrArg",
   "one_div",
   "Eq.trans",
   "inv_inv",
   "DivisionMonoid.toInvolutiveInv",
   "Eq.symm",
   "inv_div"],
  "name": "DivisionMonoid.toDivInvOneMonoid.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "PSigma.rec", "constType": "Other"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.zero_le_one",
  "constType": "Definition"},
 {"references": ["CancelCommMonoidWithZero"],
  "name": "CancelCommMonoidWithZero.toCommMonoidWithZero",
  "constType": "Definition"},
 {"references": [],
  "name": "StrictOrderedCommSemiring.mk",
  "constType": "Other"},
 {"references":
  ["Nat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero"],
  "name": "Nat.le_of_dvd.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Int", "constType": "Other"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.mul_zero",
  "constType": "Definition"},
 {"references": [], "name": "Nat.zero", "constType": "Other"},
 {"references":
  ["Nat", "LE.le", "instLENat", "Nat.le_trans", "Nat.succ", "Nat.le_succ"],
  "name": "Nat.le_succ_of_le",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.gcd.induction",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.gcd",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.mpr",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.gcd_zero_left",
   "LT.lt",
   "instLTNat",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "Nat.gcd_rec",
   "Iff.mpr",
   "Nat.dvd_mod_iff"],
  "name": "Nat.dvd_gcd",
  "constType": "Theorem"},
 {"references": ["SemigroupWithZero"],
  "name": "SemigroupWithZero.mul_zero",
  "constType": "Definition"},
 {"references": ["Preorder", "eq_true", "LE.le", "Preorder.toLE", "le_refl"],
  "name": "Mathlib.Order.Basic._auxLemma.1",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Or.resolve_left",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "GT.gt",
   "instLTNat",
   "Nat.eq_zero_or_pos"],
  "name": "Nat.pos_of_ne_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.below",
   "Nat.rec",
   "PProd",
   "PProd.mk",
   "Nat.zero",
   "PUnit",
   "PUnit.unit",
   "Nat.succ"],
  "name": "Nat.brecOn",
  "constType": "Definition"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "ContravariantClass.mk",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedCancelAddCommMonoid.le_of_add_le_add_left"],
  "name": "OrderedCancelAddCommMonoid.toContravariantClassLeLeft",
  "constType": "Definition"},
 {"references": ["Semiring"],
  "name": "Semiring.natCast_zero",
  "constType": "Definition"},
 {"references": ["Sub", "HSub.mk", "Sub.sub"],
  "name": "instHSub",
  "constType": "Definition"},
 {"references": ["DivInvOneMonoid"],
  "name": "DivInvOneMonoid.toDivInvMonoid",
  "constType": "Definition"},
 {"references": ["Add", "IsRightCancelAdd"],
  "name": "IsRightCancelAdd.add_right_cancel",
  "constType": "Definition"},
 {"references": [], "name": "PUnit", "constType": "Other"},
 {"references": ["Not", "Iff", "Iff.mp"],
  "name": "instDecidableIff.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "Not",
   "Decidable.isFalse",
   "Decidable.isTrue",
   "Decidable.rec"],
  "name": "Decidable.casesOn",
  "constType": "Definition"},
 {"references": ["Nat", "Irreducible", "Nat.monoid"],
  "name": "Nat.Prime",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Ne",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.rec",
   "Eq",
   "Nat.succ",
   "Nat.pred",
   "Nat.zero",
   "absurd",
   "Eq.refl"],
  "name": "Nat.succ_pred",
  "constType": "Theorem"},
 {"references": ["Iff"], "name": "Iff.mpr", "constType": "Definition"},
 {"references":
  ["Nat",
   "rfl",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.pow_zero",
  "constType": "Theorem"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.max_def",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.mul.match_1",
   "Nat.succ",
   "Nat.pred",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.sub",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.le_trans", "Nat.succ"],
  "name": "Nat.lt_of_lt_of_le",
  "constType": "Theorem"},
 {"references":
  ["NonAssocSemiring",
   "AddCommMonoidWithOne.mk",
   "AddMonoidWithOne.mk",
   "NonAssocSemiring.toNatCast",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring.toOne",
   "NonAssocSemiring.natCast_zero",
   "NonAssocSemiring.natCast_succ",
   "AddCommMonoid.add_comm"],
  "name": "NonAssocSemiring.toAddCommMonoidWithOne",
  "constType": "Definition"},
 {"references": ["Semiring"],
  "name": "Semiring.toNonUnitalSemiring",
  "constType": "Definition"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.toPartialOrder",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.mul_zero",
  "constType": "Definition"},
 {"references": [], "name": "InvolutiveInv", "constType": "Other"},
 {"references": ["Eq", "Eq.refl", "Eq.rec"],
  "name": "Eq.casesOn",
  "constType": "Definition"},
 {"references":
  ["Mul",
   "Zero",
   "Preorder",
   "MulPosStrictMono",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "CovariantClass.elim",
   "Subtype",
   "HMul.hMul",
   "instHMul",
   "Subtype.val",
   "Subtype.mk"],
  "name": "mul_lt_mul_of_pos_right",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.nsmul_succ",
  "constType": "Definition"},
 {"references":
  ["Bool", "Unit", "Bool.false", "Bool.true", "Bool.casesOn", "Unit.unit"],
  "name": "Bool.decEq.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.sub_lt.match_1",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "absurd",
   "Nat.lt_irrefl",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.rec",
   "Eq",
   "Nat.succ",
   "Nat.lt_succ_of_le",
   "Nat.sub_le",
   "Eq.symm",
   "Nat.succ_sub_succ_eq_sub"],
  "name": "Nat.sub_lt",
  "constType": "Theorem"},
 {"references": ["CommSemigroup"],
  "name": "CommSemigroup.toSemigroup",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.gcd_rec.match_1",
   "Eq",
   "Nat.gcd",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "Unit",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.gcd_zero_right",
   "Eq.symm",
   "Nat.mod_zero",
   "of_eq_true",
   "Nat.succ",
   "eq_self"],
  "name": "Nat.gcd_rec",
  "constType": "Theorem"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.toSemiring",
  "constType": "Definition"},
 {"references": [], "name": "Pow", "constType": "Other"},
 {"references": ["Not"], "name": "mt", "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.mod.inductionOn",
   "GT.gt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LT.lt",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "And",
   "LE.le",
   "instLENat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.div_rec_lemma.match_1",
   "Eq.mpr",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.mod_eq_sub_mod",
   "Not",
   "Or",
   "Nat.mod_lt.match_1",
   "absurd",
   "Eq.mp",
   "Eq.symm",
   "Nat.mod_eq_of_lt",
   "Nat.gt_of_not_le",
   "Iff.mp",
   "Decidable.not_and_iff_or_not",
   "Nat.decLt",
   "Nat.decLe"],
  "name": "Nat.mod_lt",
  "constType": "Theorem"},
 {"references": ["Exists", "Exists.elim.match_1"],
  "name": "Exists.elim",
  "constType": "Theorem"},
 {"references": ["Dvd"], "name": "Dvd.dvd", "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "Nat.below",
   "Nat.not_succ_le_self.match_1",
   "Unit",
   "rfl",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.ble_self_eq_true",
  "constType": "Theorem"},
 {"references":
  ["Nat", "Exists.intro", "Eq", "HMul.hMul", "instHMul", "instMulNat", "rfl"],
  "name": "Nat.dvd_mul_right",
  "constType": "Theorem"},
 {"references": ["CommGroup"],
  "name": "CommGroup.mul_comm",
  "constType": "Definition"},
 {"references":
  ["WellFounded.fix",
   "PSigma",
   "Nat",
   "invImage",
   "PSigma.casesOn",
   "SizeOf.sizeOf",
   "instSizeOfNat",
   "instWellFoundedRelation",
   "Nat.div._unary.proof_1",
   "PSigma.mk",
   "dite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.div_rec_lemma",
   "Not"],
  "name": "Nat.div._unary",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.mul_comm",
   "Nat.mul_sub_right_distrib"],
  "name": "Nat.mul_sub_left_distrib",
  "constType": "Theorem"},
 {"references": ["Add", "IsCancelAdd"],
  "name": "IsCancelAdd.toIsLeftCancelAdd",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "CommMonoid",
   "inferInstanceAs",
   "CommSemiring.toCommMonoid",
   "CommMonoidWithZero.mk",
   "CommMonoid.mk",
   "CommMonoid.toMonoid",
   "CommMonoid.mul_comm",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "CommSemiring.toCommMonoidWithZero.proof_1",
   "CommSemiring.toCommMonoidWithZero.proof_2"],
  "name": "CommSemiring.toCommMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["Acc", "Acc.rec", "Eq", "InvImage", "Acc.intro", "Eq.ndrec", "rfl"],
  "name": "_private.Init.WF.0.InvImage.accAux",
  "constType": "Definition"},
 {"references": ["Nat", "OfNat.mk"],
  "name": "instOfNatNat",
  "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocSemiring.right_distrib",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_3",
  "constType": "Theorem"},
 {"references":
  ["StrictOrderedSemiring",
   "CovariantClass.mk",
   "Subtype",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Subtype.val",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_right",
   "Subtype.prop"],
  "name": "StrictOrderedSemiring.toMulPosStrictMono",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "Nat.div_rec_lemma.match_1",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Nat.sub_lt",
   "Nat.lt_of_lt_of_le"],
  "name": "Nat.div_rec_lemma",
  "constType": "Theorem"},
 {"references": ["False", "eq_false"],
  "name": "eq_false'",
  "constType": "Theorem"},
 {"references": [], "name": "CancelCommMonoidWithZero", "constType": "Other"},
 {"references": [], "name": "AddLeftCancelSemigroup.mk", "constType": "Other"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.succ_add.match_1",
  "constType": "Definition"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.zero_mul",
  "constType": "Definition"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddMonoid.zero_add",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_2",
  "constType": "Theorem"},
 {"references":
  ["MonoidWithZero",
   "Irreducible",
   "MonoidWithZero.toMonoid",
   "Eq",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Eq.refl",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Irreducible.ne_zero.match_1",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Eq.refl",
   "npowRec",
   "MulOneClass.toOne",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "MulOneClass.toMul",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat"],
  "name": "Units.instGroupUnits.proof_4",
  "constType": "Theorem"},
 {"references":
  ["CancelCommMonoidWithZero",
   "IsCancelMulZero",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "CommMonoid.toCommSemigroup",
   "CommMonoidWithZero.toCommMonoid",
   "CancelCommMonoidWithZero.toCommMonoidWithZero",
   "CommMonoidWithZero.toZero",
   "CancelCommMonoidWithZero.toCancelMonoidWithZero.proof_1",
   "CancelMonoidWithZero.mk",
   "CommMonoidWithZero.toMonoidWithZero",
   "CancelCommMonoidWithZero.toCancelMonoidWithZero.proof_2"],
  "name": "CancelCommMonoidWithZero.toCancelMonoidWithZero",
  "constType": "Definition"},
 {"references": [], "name": "Semigroup", "constType": "Other"},
 {"references": ["propext", "Iff.intro"],
  "name": "Eq.propIntro",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "Nat.div",
   "ite",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "instDecidableAnd",
   "Nat.decLt",
   "Nat.decLe",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HDiv.hDiv",
   "instHDiv",
   "Nat.instDivNat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "_private.Init.Data.Nat.Div.0.Nat.div._eq_1"],
  "name": "Nat.div_eq",
  "constType": "Theorem"},
 {"references": [], "name": "Int.rec", "constType": "Other"},
 {"references": ["Nat.zero_lt_succ", "OfNat.ofNat", "Nat", "instOfNatNat"],
  "name": "Nat.zero_lt_one",
  "constType": "Theorem"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "_private.Init.Data.Nat.Gcd.0.Nat.gcdF.match_1",
  "constType": "Definition"},
 {"references":
  ["DivInvOneMonoid",
   "InvOneClass.mk",
   "Monoid.toOne",
   "DivInvMonoid.toMonoid",
   "DivInvOneMonoid.toDivInvMonoid",
   "DivInvMonoid.toInv",
   "DivInvOneMonoid.inv_one"],
  "name": "DivInvOneMonoid.toInvOneClass",
  "constType": "Definition"},
 {"references": ["Eq", "True", "Eq.rec", "trivial", "Eq.symm"],
  "name": "of_eq_true",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Units",
   "Eq",
   "Units.val",
   "Units.ext.match_1",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Units.mk",
   "Eq.ndrec",
   "Eq.rec",
   "Eq.refl",
   "Eq.mp",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "congr",
   "congrArg",
   "Eq.trans",
   "congrFun",
   "one_mul",
   "mul_one",
   "mul_assoc"],
  "name": "Units.ext",
  "constType": "Theorem"},
 {"references": [], "name": "True.intro", "constType": "Other"},
 {"references": ["Or", "Not", "Or.elim", "absurd", "id"],
  "name": "Or.resolve_left",
  "constType": "Theorem"},
 {"references": [], "name": "MulZeroOneClass", "constType": "Other"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.add_zero",
  "constType": "Definition"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.toZero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "_private.Init.Data.Nat.Gcd.0.Nat.gcdF.match_1",
   "LT.lt",
   "instLTNat",
   "Unit",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "_private.Init.Data.Nat.Gcd.0.Nat.gcdF.proof_1"],
  "name": "_private.Init.Data.Nat.Gcd.0.Nat.gcdF",
  "constType": "Definition"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.inv_eq_of_mul",
  "constType": "Definition"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Nat.not_succ_le_self.match_1",
  "constType": "Definition"},
 {"references":
  ["SemigroupWithZero",
   "Dvd.dvd",
   "semigroupDvd",
   "SemigroupWithZero.toSemigroup",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "SemigroupWithZero.toZero",
   "Dvd.elim",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Eq.trans",
   "MulZeroClass.zero_mul",
   "SemigroupWithZero.toMulZeroClass"],
  "name": "eq_zero_of_zero_dvd",
  "constType": "Theorem"},
 {"references": [], "name": "Irreducible", "constType": "Other"},
 {"references": [], "name": "StrictOrderedCommSemiring", "constType": "Other"},
 {"references":
  ["Nat",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.le_antisymm",
   "Nat.le_of_dvd",
   "of_decide_eq_true",
   "LT.lt",
   "instLTNat",
   "Nat.decLt",
   "Eq.refl",
   "Bool",
   "Bool.true",
   "Nat.pos_of_dvd_of_pos"],
  "name": "Nat.eq_one_of_dvd_one",
  "constType": "Theorem"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.rec"],
  "name": "Int.casesOn",
  "constType": "Definition"},
 {"references": [], "name": "Add.mk", "constType": "Other"},
 {"references":
  ["AddMonoidWithOne",
   "Eq.mpr",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "id",
   "Eq.ndrec",
   "Nat.succ",
   "Eq.refl",
   "Nat.cast_succ",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "Nat.cast_zero",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddZeroClass.toZero",
   "zero_add"],
  "name": "Nat.cast_one",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.rec"], "name": "Eq.trans", "constType": "Theorem"},
 {"references": ["CanonicallyOrderedAddCommMonoid"],
  "name": "CanonicallyOrderedAddCommMonoid.le_self_add",
  "constType": "Definition"},
 {"references": ["DivisionMonoid", "DivisionMonoid.mul_inv_rev"],
  "name": "mul_inv_rev",
  "constType": "Theorem"},
 {"references": [],
  "name": "CanonicallyOrderedAddCommMonoid.mk",
  "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.pow.match_1",
   "Unit",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.mul",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.pow",
  "constType": "Definition"},
 {"references": [], "name": "HEq.rec", "constType": "Other"},
 {"references": ["AddCommSemigroup"],
  "name": "AddCommSemigroup.toAddSemigroup",
  "constType": "Definition"},
 {"references": [], "name": "LinearOrder.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero"],
  "name": "Nat.sub_ne_zero_of_lt.match_1",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Units",
   "Units.ext",
   "HMul.hMul",
   "instHMul",
   "Mul.mk",
   "Units.mk",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.val",
   "Units.inv",
   "Eq.mpr",
   "Eq",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "mul_assoc",
   "Eq.symm",
   "Units.val_inv",
   "MulOneClass.toOne",
   "one_mul",
   "Units.inv_val",
   "One.mk",
   "mul_one"],
  "name": "Units.instMulOneClassUnits.proof_5",
  "constType": "Theorem"},
 {"references":
  ["Nontrivial.mk",
   "Nat",
   "Exists.intro",
   "Exists",
   "Ne",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero_ne_one"],
  "name": "Nat.nontrivial",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.zero_add.match_1",
   "Or",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "GT.gt",
   "instLTNat",
   "Unit",
   "Or.inl",
   "rfl",
   "Or.inr",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ_pos"],
  "name": "Nat.eq_zero_or_pos",
  "constType": "Theorem"},
 {"references": [], "name": "AddLeftCancelMonoid", "constType": "Other"},
 {"references":
  ["Semigroup", "Dvd.intro", "HMul.hMul", "instHMul", "Semigroup.toMul", "rfl"],
  "name": "dvd_mul_right",
  "constType": "Theorem"},
 {"references":
  ["Group",
   "_private.Mathlib.Algebra.Group.Defs.0.inv_eq_of_mul",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "DivInvMonoid.toMonoid",
   "Group.toDivInvMonoid",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "Eq.mpr",
   "Eq",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "mul_assoc",
   "mul_inv_cancel_left",
   "mul_right_inv"],
  "name": "Group.toDivisionMonoid.proof_2",
  "constType": "Theorem"},
 {"references": ["AddRightCancelSemigroup"],
  "name": "AddRightCancelSemigroup.toAddSemigroup",
  "constType": "Definition"},
 {"references": [], "name": "ZeroLEOneClass", "constType": "Other"},
 {"references": [], "name": "Semiring.mk", "constType": "Other"},
 {"references":
  ["One",
   "Mul",
   "Inv",
   "Int",
   "zpowRec.match_1",
   "Nat",
   "npowRec",
   "Inv.inv",
   "Nat.succ"],
  "name": "zpowRec",
  "constType": "Definition"},
 {"references": [], "name": "AddCommMonoidWithOne", "constType": "Other"},
 {"references": [], "name": "Subtype.mk", "constType": "Other"},
 {"references": [], "name": "Trans.mk", "constType": "Other"},
 {"references": ["minOfLe", "Nat", "instLENat", "Nat.decLe"],
  "name": "instMinNat",
  "constType": "Definition"},
 {"references":
  ["of_decide_eq_true",
   "Eq",
   "Not",
   "True",
   "False",
   "instDecidableEqProp",
   "instDecidableIff",
   "instDecidableNot",
   "instDecidableTrue",
   "instDecidableFalse",
   "Eq.refl",
   "Bool",
   "Bool.true"],
  "name": "not_true_eq_false",
  "constType": "Theorem"},
 {"references": ["Decidable.lt_or_eq_of_le"],
  "name": "LE.le.lt_or_eq_dec",
  "constType": "Theorem"},
 {"references":
  ["Nat", "LT.lt", "instLTNat", "Nat.le_trans", "Nat.succ", "Nat.le_step"],
  "name": "Nat.lt_trans",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_comm",
   "Nat.add_sub_add_right"],
  "name": "Nat.add_sub_add_left",
  "constType": "Theorem"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.toDivInvMonoid",
  "constType": "Definition"},
 {"references": ["Or", "Or.inl", "Or.inr", "Or.casesOn"],
  "name": "Or.elim.match_1",
  "constType": "Definition"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Nat.pow.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "And.right",
   "Nat.eq_zero_of_add_eq_zero"],
  "name": "Nat.eq_zero_of_add_eq_zero_left",
  "constType": "Theorem"},
 {"references": [], "name": "Exists.rec", "constType": "Other"},
 {"references": ["Monoid", "Irreducible"],
  "name": "Irreducible.isUnit_or_isUnit'",
  "constType": "Definition"},
 {"references": [], "name": "Bool.rec", "constType": "Other"},
 {"references":
  ["OrderedAddCommMonoid",
   "CovariantClass.mk",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.add_le_add_left"],
  "name": "OrderedAddCommMonoid.toCovariantClassLeft",
  "constType": "Definition"},
 {"references":
  ["Nat", "And", "LE.le", "instLENat", "Not", "And.intro", "And.casesOn"],
  "name": "Nat.lt_iff_le_not_le.match_1",
  "constType": "Definition"},
 {"references": ["CommGroup"],
  "name": "CommGroup.toGroup",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.rec", "PUnit", "PProd"],
  "name": "Nat.below",
  "constType": "Definition"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "ExistsAddOfLE.mk",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.exists_add_of_le"],
  "name": "CanonicallyOrderedAddCommMonoid.existsAddOfLE",
  "constType": "Definition"},
 {"references":
  ["Zero",
   "One",
   "PartialOrder",
   "ZeroLEOneClass",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "LE.le.lt_of_ne",
   "Zero.toOfNat0",
   "zero_le_one",
   "NeZero.ne'"],
  "name": "zero_lt_one",
  "constType": "Theorem"},
 {"references": [], "name": "Group", "constType": "Other"},
 {"references": ["Add", "IsLeftCancelAdd", "IsLeftCancelAdd.add_left_cancel"],
  "name": "add_left_cancel",
  "constType": "Theorem"},
 {"references": ["Monoid", "Units"],
  "name": "Units.val_inv",
  "constType": "Definition"},
 {"references": [],
  "name": "NonUnitalNonAssocSemiring.mk",
  "constType": "Other"},
 {"references":
  ["Monoid",
   "Nat",
   "Units",
   "Eq.refl",
   "zpowRec",
   "MulOneClass.toOne",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "MulOneClass.toMul",
   "Inv.mk",
   "Units.mk",
   "Units.inv",
   "Units.val",
   "Units.inv_val",
   "Units.val_inv",
   "Int.negSucc"],
  "name": "Units.instGroupUnits.proof_10",
  "constType": "Theorem"},
 {"references": [], "name": "Acc", "constType": "Other"},
 {"references":
  ["Semigroup",
   "Dvd.mk",
   "Exists",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul"],
  "name": "semigroupDvd",
  "constType": "Definition"},
 {"references": [],
  "name": "CanonicallyOrderedCommSemiring",
  "constType": "Other"},
 {"references":
  ["Nat",
   "Exists.intro",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrArg",
   "Nat.mul_one",
   "eq_self"],
  "name": "Nat.dvd_refl",
  "constType": "Theorem"},
 {"references": ["Preorder"],
  "name": "Preorder.le_trans",
  "constType": "Definition"},
 {"references": ["LE", "LE.le"], "name": "GE.ge", "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.max_def",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero",
   "Eq.casesOn",
   "HEq",
   "Bool.noConfusion",
   "Eq.refl",
   "Bool.false",
   "HEq.refl"],
  "name": "Nat.le_of_ble_eq_true.match_1",
  "constType": "Definition"},
 {"references": [], "name": "NatCast", "constType": "Other"},
 {"references": ["CommMonoidWithZero"],
  "name": "CommMonoidWithZero.toZero",
  "constType": "Definition"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.toAdd",
  "constType": "Definition"},
 {"references": [], "name": "IsLeftCancelMulZero", "constType": "Other"},
 {"references":
  ["Monoid",
   "Irreducible",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Irreducible.isUnit_or_isUnit'"],
  "name": "Irreducible.isUnit_or_isUnit",
  "constType": "Theorem"},
 {"references": [], "name": "IsCancelMulZero", "constType": "Other"},
 {"references":
  ["Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.rec",
   "LE.le",
   "instLENat",
   "Nat.le_add_right"],
  "name": "Nat.le.intro",
  "constType": "Theorem"},
 {"references":
  ["StrictOrderedSemiring.toOrderedSemiring'",
   "Nat",
   "Nat.strictOrderedSemiring",
   "Nat.decLe"],
  "name": "Nat.orderedSemiring",
  "constType": "Definition"},
 {"references":
  ["Nat", "Eq", "Eq.ndrec", "Nat.noConfusionType", "Nat.casesOn", "Eq.refl"],
  "name": "Nat.noConfusion",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.mk",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "inferInstance",
   "OrderedAddCommMonoid",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Nat.orderedSemiring",
   "OrderedAddCommMonoid.add_le_add_left",
   "Exists.imp",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "Eq.symm",
   "Nat.le.dest"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_1",
  "constType": "Theorem"},
 {"references": ["Decidable.isFalse", "False", "not_false"],
  "name": "instDecidableFalse",
  "constType": "Definition"},
 {"references": ["NatCast"],
  "name": "NatCast.natCast",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Nat",
   "Units",
   "Eq.refl",
   "npowRec",
   "MulOneClass.toOne",
   "inferInstance",
   "MulOneClass",
   "Units.instMulOneClassUnits",
   "MulOneClass.toMul",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Units.instGroupUnits.proof_5",
  "constType": "Theorem"},
 {"references": [], "name": "CommSemiring.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "LE.le",
   "instLENat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.below",
   "Nat.succ_add.match_1",
   "Nat.le_refl",
   "Nat.succ",
   "Nat.le_succ_of_le",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.le_add_right",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "StrictOrderedSemiring",
   "Nat",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.strictOrderedSemiring",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.le.refl",
   "Nat.le",
   "Nat.succ",
   "Nat.le.step",
   "Nat.le.casesOn",
   "Eq",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "Eq.refl",
   "HEq.refl"],
  "name": "Nat.le_antisymm.match_1",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedCommSemiring",
   "LinearOrderedSemiring.mk",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedCommSemiring.toMin",
   "LinearOrderedCommSemiring.toMax",
   "LinearOrderedCommSemiring.toOrd",
   "LinearOrderedCommSemiring.le_total",
   "LinearOrderedCommSemiring.decidableLE",
   "LinearOrderedCommSemiring.decidableEq",
   "LinearOrderedCommSemiring.decidableLT",
   "LinearOrderedCommSemiring.min_def",
   "LinearOrderedCommSemiring.max_def",
   "LinearOrderedCommSemiring.compare_eq_compareOfLessAndEq"],
  "name": "LinearOrderedCommSemiring.toLinearOrderedSemiring",
  "constType": "Definition"},
 {"references":
  ["Bool", "Eq", "Bool.true", "Bool.false", "Bool.casesOn", "Eq.refl"],
  "name": "Nat.decEq.match_1",
  "constType": "Definition"},
 {"references": ["Iff", "Iff.intro", "Iff.mp", "Iff.mpr"],
  "name": "Iff.trans",
  "constType": "Theorem"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.nsmul_succ",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "And",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LE.le",
   "instLENat",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Not",
   "Nat.div.inductionOn._unary",
   "PSigma.mk",
   "PSigma"],
  "name": "Nat.div.inductionOn",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.le_of_succ_le_succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.lt_of_succ_lt_succ",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_sub_add_left",
   "Nat.sub_zero"],
  "name": "Nat.add_sub_cancel_left",
  "constType": "Theorem"},
 {"references":
  ["Decidable", "Decidable.casesOn", "Bool", "Not", "Bool.false", "Bool.true"],
  "name": "Decidable.decide",
  "constType": "Definition"},
 {"references":
  ["Semiring.mul_one",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_8",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.brecOn",
   "Nat.succ",
   "Nat.below",
   "Nat.succ_le_succ.match_1",
   "Unit",
   "Nat.le.refl",
   "Nat.le",
   "Nat.le.step",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.succ_le_succ",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.le.refl",
   "Nat.le",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.le.step",
   "Nat.casesOn",
   "Nat.zero",
   "Nat.le.casesOn",
   "Eq",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "Nat.noConfusion",
   "Eq.refl",
   "HEq.refl"],
  "name": "Nat.pred_le_pred.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Max.mk", "constType": "Other"},
 {"references": [], "name": "Ord.mk", "constType": "Other"},
 {"references":
  ["Monoid",
   "Inv.mk",
   "Units",
   "Units.mk",
   "Units.inv",
   "Units.val",
   "Units.inv_val",
   "Units.val_inv"],
  "name": "Units.instInv",
  "constType": "Definition"},
 {"references": ["Semigroup"],
  "name": "Semigroup.toMul",
  "constType": "Definition"}]