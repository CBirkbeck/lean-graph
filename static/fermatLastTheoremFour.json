[{"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.compare_eq_compareOfLessAndEq",
  "constType": "Definition"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.toNontrivial",
  "constType": "Definition"},
 {"references": ["Ring"], "name": "Ring.zsmul", "constType": "Definition"},
 {"references":
  ["Int",
   "LE.le",
   "Int.instLEInt",
   "Int.le_trans.match_1",
   "Exists",
   "Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.le.dest",
   "Int.le.intro",
   "instAddNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Int.add_assoc",
   "Int.ofNat_add"],
  "name": "Int.le_trans",
  "constType": "Theorem"},
 {"references": ["Nat", "Prod.fst", "Int", "Nat.xgcd"],
  "name": "Nat.gcdA",
  "constType": "Definition"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.min_def",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Int",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.add_mul",
   "Int.one_mul",
   "Int.add_comm",
   "eq_self"],
  "name": "Int.instCommRingInt.proof_6",
  "constType": "Theorem"},
 {"references": [], "name": "HasDistribNeg.mk", "constType": "Other"},
 {"references": ["le_of_lt"], "name": "LT.lt.le", "constType": "Theorem"},
 {"references": [], "name": "HAdd", "constType": "Other"},
 {"references":
  ["LinearOrderedRing",
   "Nontrivial",
   "inferInstance",
   "StrictOrderedRing.toNontrivial",
   "LinearOrderedRing.toStrictOrderedRing",
   "IsDomain.mk",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "IsCancelMulZero.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "IsLeftCancelMulZero.mk",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Iff.mp",
   "HSub.hSub",
   "instHSub",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "AddGroupWithOne.toAddGroup",
   "Ring.toAddGroupWithOne",
   "StrictOrderedRing.toRing",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "sub_eq_zero",
   "Or.resolve_left",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "NoZeroDivisors.eq_zero_or_eq_zero_of_mul_eq_zero",
   "NonUnitalNonAssocRing.toMul",
   "LinearOrderedRing.noZeroDivisors",
   "Eq.mp",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "mul_sub",
   "propext",
   "IsRightCancelMulZero.mk",
   "Or.resolve_right",
   "sub_mul",
   "Nontrivial.mk",
   "Nontrivial.exists_pair_ne"],
  "name": "LinearOrderedRing.isDomain",
  "constType": "Definition"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.zpow_succ'",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Monoid",
   "Nat",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Nat.commSemiring"],
  "name": "Nat.monoid",
  "constType": "Definition"},
 {"references": ["AddRightCancelMonoid"],
  "name": "AddRightCancelMonoid.toAddRightCancelSemigroup",
  "constType": "Definition"},
 {"references": [], "name": "NegZeroClass.mk", "constType": "Other"},
 {"references": ["LE.mk", "Nat", "Nat.le"],
  "name": "instLENat",
  "constType": "Definition"},
 {"references": [], "name": "NatCast.mk", "constType": "Other"},
 {"references":
  ["le_of_lt",
   "Int",
   "PartialOrder.toPreorder",
   "SemilatticeInf.toPartialOrder",
   "Lattice.toSemilatticeInf",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "Int.instLinearOrderInt",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing",
   "Int.instCommRingInt",
   "One.toOfNat1",
   "Semiring.toOne",
   "Int.zero_lt_one"],
  "name": "Int.linearOrderedCommRing.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "Eq",
   "Bool",
   "Decidable.decide",
   "Bool.true",
   "of_decide_eq_true.match_1",
   "Not",
   "absurd",
   "ne_true_of_eq_false",
   "decide_eq_false"],
  "name": "of_decide_eq_true",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocRing",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "AddCommGroup.add_comm",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalNonAssocRing.left_distrib",
   "NonUnitalNonAssocRing.right_distrib",
   "NonUnitalNonAssocRing.zero_mul",
   "NonUnitalNonAssocRing.mul_zero"],
  "name": "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
  "constType": "Definition"},
 {"references": ["DivisionRing"],
  "name": "DivisionRing.toRing",
  "constType": "Definition"},
 {"references": ["Sub.mk", "Int", "Int.sub"],
  "name": "Int.instSubInt",
  "constType": "Definition"},
 {"references": [], "name": "OrderedAddCommGroup", "constType": "Other"},
 {"references": ["LE.mk", "Int", "Int.le"],
  "name": "Int.instLEInt",
  "constType": "Definition"},
 {"references": [], "name": "DivisionSemiring.mk", "constType": "Other"},
 {"references":
  ["LinearOrderedRing",
   "StrictOrderedRing.zero_le_one",
   "LinearOrderedRing.toStrictOrderedRing"],
  "name": "LinearOrderedRing.toLinearOrderedSemiring.proof_3",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.div_eq_mul_inv",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "of_eq_true",
   "Eq.trans",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "NonUnitalCommSemiring.toCommSemigroup",
   "CommSemiring.toNonUnitalCommSemiring",
   "True",
   "congrArg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "congrFun",
   "pow_add",
   "mul_mul_mul_comm",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
  "constType": "Theorem"},
 {"references": ["Mul", "Zero", "NoZeroDivisors"],
  "name": "NoZeroDivisors.eq_zero_or_eq_zero_of_mul_eq_zero",
  "constType": "Definition"},
 {"references":
  ["Semiring.npow_zero",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_11",
  "constType": "Theorem"},
 {"references": [], "name": "HAdd.mk", "constType": "Other"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.inv_zero",
  "constType": "Definition"},
 {"references": ["Nat", "Multiset.card_range"],
  "name": "Finset.card_range",
  "constType": "Theorem"},
 {"references":
  ["Classical.choice", "Decidable", "Classical.propDecidable.proof_1"],
  "name": "Classical.propDecidable",
  "constType": "Definition"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.decidableLT",
  "constType": "Definition"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "pow_nonneg.match_1",
  "constType": "Definition"},
 {"references": ["Monoid"],
  "name": "Monoid.npow_succ",
  "constType": "Definition"},
 {"references": ["Mul", "Zero", "IsCancelMulZero"],
  "name": "IsCancelMulZero.toIsLeftCancelMulZero",
  "constType": "Definition"},
 {"references": ["Ring"], "name": "Ring.toNeg", "constType": "Definition"},
 {"references":
  ["LinearOrder.mk",
   "Nat",
   "PartialOrder.mk",
   "Preorder.mk",
   "LE.mk",
   "Nat.le",
   "LT.mk",
   "Nat.lt",
   "Nat.le_refl",
   "Nat.le_trans",
   "Nat.lt_iff_le_not_le",
   "Nat.le_antisymm",
   "instMinNat",
   "Nat.instMaxNat",
   "instOrdNat",
   "Nat.le_total",
   "inferInstance",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Nat.decLe",
   "DecidableEq",
   "instDecidableEqNat",
   "LT.lt",
   "Preorder.toLT",
   "Nat.decLt",
   "Nat.linearOrder.proof_1",
   "Nat.linearOrder.proof_2",
   "Nat.linearOrder.proof_3"],
  "name": "Nat.linearOrder",
  "constType": "Definition"},
 {"references":
  ["CommMonoid",
   "CommSemigroup.mk",
   "Monoid.toSemigroup",
   "CommMonoid.toMonoid",
   "CommMonoid.mul_comm"],
  "name": "CommMonoid.toCommSemigroup",
  "constType": "Definition"},
 {"references": ["Preorder"],
  "name": "Preorder.toLE",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "LinearOrderedSemiring",
   "Rat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Rat.instLinearOrderedFieldRat"],
  "name": "Rat.instLinearOrderedSemiringRat",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Iff",
   "LT.lt",
   "Nat",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Int.natAbs",
   "Ne",
   "instOfNatInt",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "propext",
   "Nat.pos_iff_ne_zero",
   "Not",
   "_private.Std.Data.Int.Lemmas.0.Ne._eq_1",
   "Int.natAbs_eq_zero",
   "Iff.rfl"],
  "name": "Int.natAbs_pos",
  "constType": "Theorem"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.toMulOneClass",
  "constType": "Definition"},
 {"references": [], "name": "Sup", "constType": "Other"},
 {"references": ["Nat", "rfl", "Int", "Nat.cast", "instNatCastInt", "Nat.succ"],
  "name": "Int.ofNat_succ",
  "constType": "Theorem"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.add_le_add_left",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.decidableLT",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.dvd_antisymm",
   "Nat.gcd",
   "Nat.dvd_gcd",
   "Nat.gcd_dvd_right",
   "Nat.gcd_dvd_left"],
  "name": "Nat.gcd_comm",
  "constType": "Theorem"},
 {"references": ["Nontrivial"],
  "name": "Nontrivial.exists_pair_ne",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "Eq",
   "Neg.neg",
   "Ring.toNeg",
   "Eq.ndrec",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "of_eq_true",
   "SubNegMonoid.toNeg",
   "SubtractionMonoid.toSubNegMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Ring.toAddCommGroup",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "Eq.trans",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "True",
   "congrFun",
   "congrArg",
   "neg_add_rev",
   "add_comm",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.neg_add",
  "constType": "Theorem"},
 {"references":
  ["CommRing",
   "NonUnitalNonAssocSemiring.left_distrib",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_7",
  "constType": "Theorem"},
 {"references": ["Add", "Exists", "Eq", "HAdd.hAdd", "instHAdd"],
  "name": "Even",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "IsCoprime",
   "Eq.mpr",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Finset.card",
   "Finset.range",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Finset.card_range",
   "Finset.prod",
   "CommSemiring.toCommMonoid",
   "CommMonoid.toMonoid",
   "Finset.prod_const",
   "IsCoprime.prod_right",
   "Membership.mem",
   "Finset",
   "Finset.instMembershipFinset"],
  "name": "IsCoprime.pow_right",
  "constType": "Theorem"},
 {"references": [], "name": "IsLeftCancelAdd.mk", "constType": "Other"},
 {"references":
  ["CommGroupWithZero",
   "DivisionMonoid",
   "GroupWithZero.toDivisionMonoid",
   "CommGroupWithZero.toGroupWithZero",
   "DivisionCommMonoid.mk",
   "DivisionMonoid.mk",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionMonoid.inv_inv",
   "DivisionMonoid.mul_inv_rev",
   "DivisionMonoid.inv_eq_of_mul",
   "CommGroupWithZero.toDivisionCommMonoid.proof_1"],
  "name": "CommGroupWithZero.toDivisionCommMonoid",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Fermat42.Minimal",
   "Fermat42.minimal_comm.match_1",
   "Fermat42",
   "LE.le",
   "Nat",
   "instLENat",
   "Int.natAbs",
   "And.intro",
   "Iff.mp",
   "Fermat42.comm"],
  "name": "Fermat42.minimal_comm",
  "constType": "Theorem"},
 {"references": ["AddLeftCancelMonoid"],
  "name": "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
  "constType": "Definition"},
 {"references": ["CanonicallyOrderedAddCommMonoid"],
  "name": "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedRing",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Nat",
   "LE.le.lt_of_ne",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "bit0",
   "instAddNat",
   "pow_bit0_nonneg",
   "Ne.symm",
   "pow_ne_zero",
   "IsDomain.to_noZeroDivisors",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.isDomain"],
  "name": "pow_bit0_pos",
  "constType": "Theorem"},
 {"references": [], "name": "OrderedAddCommGroup.mk", "constType": "Other"},
 {"references": ["Semifield"],
  "name": "Semifield.mul_inv_cancel",
  "constType": "Definition"},
 {"references": [], "name": "HDiv", "constType": "Other"},
 {"references":
  ["Add",
   "IsRightCancelAdd",
   "PartialOrder",
   "CovariantClass",
   "Function.swap",
   "HAdd.hAdd",
   "instHAdd",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "CovariantClass.mk",
   "LT.lt",
   "Preorder.toLT",
   "LE.le.lt_of_ne",
   "CovariantClass.elim",
   "LT.lt.le",
   "Iff.mpr",
   "Ne",
   "add_ne_add_left",
   "LT.lt.ne"],
  "name": "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
  "constType": "Definition"},
 {"references": ["lt_of_lt_of_le"],
  "name": "LT.lt.trans_le",
  "constType": "Theorem"},
 {"references": ["IntCast.mk", "Rat", "Rat.ofInt"],
  "name": "Rat.instIntCastRat",
  "constType": "Definition"},
 {"references": ["Subtype"], "name": "Subtype.val", "constType": "Definition"},
 {"references": [], "name": "NonAssocRing", "constType": "Other"},
 {"references": ["NonUnitalSemiring"],
  "name": "NonUnitalSemiring.mul_assoc",
  "constType": "Definition"},
 {"references": ["Field"],
  "name": "Field.zpow_zero'",
  "constType": "Definition"},
 {"references": [], "name": "AddGroupWithOne.mk", "constType": "Other"},
 {"references": ["Inv"], "name": "Inv.inv", "constType": "Definition"},
 {"references":
  ["DivisionMonoid",
   "DivInvMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivInvOneMonoid.mk",
   "DivInvMonoid.mk",
   "DivInvMonoid.toMonoid",
   "DivInvMonoid.toInv",
   "DivInvMonoid.toDiv",
   "DivInvMonoid.div_eq_mul_inv",
   "DivInvMonoid.zpow",
   "DivInvMonoid.zpow_zero'",
   "DivInvMonoid.zpow_succ'",
   "DivInvMonoid.zpow_neg'",
   "DivisionMonoid.toDivInvOneMonoid.proof_1"],
  "name": "DivisionMonoid.toDivInvOneMonoid",
  "constType": "Definition"},
 {"references": ["Field"], "name": "Field.toDiv", "constType": "Definition"},
 {"references": ["LinearOrderedCommRing"],
  "name": "LinearOrderedCommRing.mul_comm",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "zero_add",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.add_pf_zero_add",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.decidableLT",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "Int",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Int.negOfNat",
   "instAddNat",
   "Nat.zero",
   "Eq.ndrec",
   "id",
   "Eq.refl",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.symm",
   "Nat.succ",
   "Eq.mpr",
   "congrArg",
   "Nat.zero_add",
   "Nat.succ_add"],
  "name": "Int.negOfNat_add",
  "constType": "Theorem"},
 {"references": ["Decidable.isTrue", "True", "trivial"],
  "name": "instDecidableTrue",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
  "constType": "Definition"},
 {"references":
  ["List",
   "List.brecOn",
   "Nat",
   "List.below",
   "List.length.match_1",
   "Unit",
   "List.nil",
   "OfNat.ofNat",
   "instOfNatNat",
   "List.cons",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "PProd.fst",
   "List.rec",
   "PUnit",
   "PProd"],
  "name": "List.length",
  "constType": "Definition"},
 {"references": [], "name": "Semiring", "constType": "Other"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toMax",
  "constType": "Definition"},
 {"references":
  ["Nat", "rfl", "HMul.hMul", "instHMul", "instMulNat", "Nat.succ"],
  "name": "Nat.mul_succ",
  "constType": "Theorem"},
 {"references": ["outParam", "HPow"],
  "name": "HPow.hPow",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedSemiring",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "Eq.mp",
   "Iff",
   "LE.le",
   "Preorder.toLE",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "MulZeroClass.toZero",
   "NonUnitalNonAssocSemiring.toMul",
   "congrFun",
   "congrArg",
   "MulZeroClass.zero_mul",
   "mul_le_mul_right",
   "OrderedSemiring.toMulPosMono",
   "StrictOrderedSemiring.toOrderedSemiring",
   "MulPosStrictMono.toMulPosReflectLE",
   "LinearOrderedAddCommMonoid.toLinearOrder",
   "LinearOrderedSemiring.toLinearOrderedAddCommMonoid",
   "StrictOrderedSemiring.toMulPosStrictMono"],
  "name": "zero_le_mul_right",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.mpr",
   "Nat.zero",
   "OfNat.ofNat",
   "instOfNatNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.zero_mul",
   "Nat.succ",
   "congr",
   "congrArg",
   "Eq.trans",
   "Nat.succ_mul",
   "congrFun",
   "Nat.add_assoc",
   "Nat.add_left_comm"],
  "name": "Nat.left_distrib",
  "constType": "Theorem"},
 {"references":
  ["Mul",
   "Add",
   "LeftDistribClass",
   "Eq.symm",
   "HMul.hMul",
   "instHMul",
   "HAdd.hAdd",
   "instHAdd",
   "mul_add"],
  "name": "Mathlib.Tactic.Ring.Basic._auxLemma.1",
  "constType": "Theorem"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.toSub",
  "constType": "Definition"},
 {"references":
  ["CommMonoid",
   "Nat",
   "Commute.mul_pow",
   "CommMonoid.toMonoid",
   "Commute.all",
   "CommSemigroup.toCommMagma",
   "CommMonoid.toCommSemigroup"],
  "name": "mul_pow",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.min_def",
  "constType": "Definition"},
 {"references": ["Rat", "Eq.refl", "HDiv.hDiv", "instHDiv", "Rat.instDivRat"],
  "name": "Rat.commGroupWithZero.proof_3",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocRing",
   "eq_neg_of_add_eq_zero_left",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "InvolutiveNeg.mk",
   "Neg.mk",
   "SubNegMonoid.toNeg",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "neg_neg",
   "SubtractionMonoid.toInvolutiveNeg",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "SubtractionMonoid.toSubNegMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "left_distrib",
   "Distrib.leftDistribClass",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "add_left_neg",
   "NonUnitalNonAssocRing.mul_zero"],
  "name": "NonUnitalNonAssocRing.toHasDistribNeg.proof_3",
  "constType": "Theorem"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.mul_zero",
  "constType": "Definition"},
 {"references": ["OfNat", "Zero.mk", "OfNat.ofNat"],
  "name": "Zero.ofOfNat0",
  "constType": "Definition"},
 {"references": [], "name": "DivisionCommMonoid.mk", "constType": "Other"},
 {"references": ["Field"], "name": "Field.toInv", "constType": "Definition"},
 {"references":
  ["Int",
   "Fermat42.Minimal",
   "And.casesOn",
   "Fermat42",
   "LE.le",
   "Nat",
   "instLENat",
   "Int.natAbs",
   "Neg.neg",
   "Int.instNegInt",
   "Ne",
   "OfNat.ofNat",
   "instOfNatInt",
   "And",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "instOfNatNat",
   "And.intro",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "neg_sq",
   "Int.natAbs_neg"],
  "name": "Fermat42.neg_of_minimal",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.mul_comm",
   "Int.add_mul_emod_self"],
  "name": "Int.add_mul_emod_self_left",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "CommSemigroup",
   "Int",
   "NonUnitalCommSemiring.toCommSemigroup",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt"],
  "name": "Int.instCommSemigroupInt",
  "constType": "Definition"},
 {"references": ["OrderedAddCommMonoid"],
  "name": "OrderedAddCommMonoid.add_le_add_left",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.Prime.two_le"],
  "name": "Nat.Prime.one_lt",
  "constType": "Theorem"},
 {"references": [], "name": "id", "constType": "Definition"},
 {"references":
  ["LinearOrder.mk",
   "Int",
   "PartialOrder.mk",
   "Preorder.mk",
   "LE.mk",
   "LE.le",
   "Int.instLEInt",
   "LT.mk",
   "LT.lt",
   "Int.instLTInt",
   "Int.le_refl",
   "Int.le_trans",
   "Int.lt_iff_le_not_le",
   "Int.le_antisymm",
   "Int.instMinInt",
   "Int.instMaxInt",
   "instOrdInt",
   "Int.le_total",
   "inferInstance",
   "DecidableRel",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Int.decLe",
   "DecidableEq",
   "Int.instDecidableEqInt",
   "Preorder.toLT",
   "Int.decLt",
   "Int.instLinearOrderInt.proof_1",
   "Int.instLinearOrderInt.proof_2",
   "Int.instLinearOrderInt.proof_3"],
  "name": "Int.instLinearOrderInt",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Commute",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Nat",
   "Nat.rec",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "HMul.hMul",
   "instHMul",
   "Eq.mpr",
   "Nat.zero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "id",
   "Eq.ndrec",
   "instOfNatNat",
   "Eq.refl",
   "pow_zero",
   "MulOneClass.toOne",
   "one_mul",
   "of_eq_true",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.trans",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "True",
   "congr",
   "congrArg",
   "pow_succ",
   "Mathlib.Algebra.GroupPower.Basic._auxLemma.1",
   "congrFun",
   "Commute.right_comm",
   "Commute.pow_left",
   "eq_self"],
  "name": "Commute.mul_pow",
  "constType": "Theorem"},
 {"references": [], "name": "LinearOrderedSemifield.mk", "constType": "Other"},
 {"references": ["minOfLe", "Int", "Int.instLEInt", "Int.decLe"],
  "name": "Int.instMinInt",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.compare_eq_compareOfLessAndEq",
  "constType": "Definition"},
 {"references":
  ["Semiring.natCast_succ",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_10",
  "constType": "Theorem"},
 {"references":
  ["OrderedCancelAddCommMonoid",
   "AddCancelCommMonoid.mk",
   "AddLeftCancelMonoid.mk",
   "AddLeftCancelSemigroup.mk",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedCancelAddCommMonoid.toOrderedAddCommMonoid",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_1",
   "AddMonoid.toZero",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_2",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_3",
   "AddMonoid.nsmul",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_4",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_5",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid.proof_6"],
  "name": "OrderedCancelAddCommMonoid.toCancelAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Fermat42",
   "Exists.casesOn",
   "Exists",
   "Fermat42.Minimal",
   "And",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "OfNat.ofNat",
   "instOfNatInt",
   "Fermat42.exists_minimal",
   "Or.casesOn",
   "Or",
   "Int.emod_two_eq_zero_or_one",
   "Or.inl",
   "False.elim",
   "Dvd.dvd",
   "Int.instDvdInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.gcd",
   "of_decide_eq_true",
   "Nat",
   "instOfNatNat",
   "False",
   "forall_prop_decidable",
   "Int.decidableDvd",
   "instDecidableFalse",
   "Eq.refl",
   "Bool",
   "Bool.true",
   "Eq.mp",
   "Eq.ndrec",
   "Iff.mpr",
   "IsCoprime",
   "Int.instCommSemiringInt",
   "Int.gcd_eq_one_iff_coprime",
   "Fermat42.coprime_of_minimal",
   "Int.dvd_gcd",
   "Int.dvd_of_emod_eq_zero",
   "Or.inr",
   "Exists.intro",
   "And.intro",
   "Fermat42.minimal_comm"],
  "name": "Fermat42.exists_odd_minimal",
  "constType": "Theorem"},
 {"references": [], "name": "CommGroupWithZero", "constType": "Other"},
 {"references": ["Sub.mk", "Nat", "Nat.sub"],
  "name": "instSubNat",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "Iff.intro",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "eq_of_sub_eq_zero",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "sub_self"],
  "name": "sub_eq_zero",
  "constType": "Theorem"},
 {"references": [], "name": "AddLeftCancelMonoid.mk", "constType": "Other"},
 {"references": [], "name": "IntCast.mk", "constType": "Other"},
 {"references":
  ["Rat",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Rat.linearOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing",
   "Field.toCommRing",
   "Rat.field",
   "lt_of_le_of_ne",
   "Rat.instPartialOrderRat",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "Rat.mul_nonneg",
   "le_of_lt",
   "Rat.instPreorderRat",
   "Rat.instOfNatRat",
   "Ne.symm",
   "Rat.instMulRat",
   "mul_ne_zero",
   "IsDomain.to_noZeroDivisors",
   "DivisionRing.toRing",
   "Rat.divisionRing",
   "Rat.isDomain",
   "ne_of_lt"],
  "name": "Rat.instLinearOrderedFieldRat.proof_3",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.below",
   "Nat.add_assoc.match_1",
   "rfl",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "of_eq_true",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "congrFun",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.left_distrib",
   "eq_self"],
  "name": "Nat.mul_assoc",
  "constType": "Theorem"},
 {"references": [], "name": "LinearOrderedCommSemiring", "constType": "Other"},
 {"references":
  ["Int",
   "Rat.divInt.match_2",
   "Rat",
   "Nat",
   "inline",
   "mkRat",
   "Rat.normalize",
   "Neg.neg",
   "Int.instNegInt",
   "Nat.succ",
   "Rat.divInt.proof_1"],
  "name": "Rat.divInt",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Eq",
   "Int.cast",
   "Ring.toIntCast",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Mathlib.Meta.NormNum.IsInt.casesOn"],
  "name": "Mathlib.Meta.NormNum.IsInt.to_raw_eq.match_1",
  "constType": "Definition"},
 {"references":
  ["List",
   "Nat",
   "List.cons",
   "Nat.succ",
   "List.casesOn",
   "List.nil",
   "Nat.casesOn"],
  "name": "List.get!.match_1",
  "constType": "Definition"},
 {"references":
  ["OrderedAddCommGroup",
   "Iff.mpr",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "AddCommGroup.toAddGroup",
   "OrderedAddCommGroup.toAddCommGroup",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "neg_neg_iff_pos",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "OrderedAddCommGroup.to_covariantClass_left_le"],
  "name": "neg_neg_of_pos",
  "constType": "Theorem"},
 {"references": ["Distrib"],
  "name": "Distrib.toMul",
  "constType": "Definition"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "Iff.mpr",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "le_iff_exists_add",
   "Exists.intro",
   "Eq.symm",
   "AddZeroClass.toZero",
   "zero_add"],
  "name": "zero_le",
  "constType": "Theorem"},
 {"references":
  ["DivisionCommMonoid",
   "CommMonoid.mk",
   "DivInvMonoid.toMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "DivisionCommMonoid.mul_comm"],
  "name": "DivisionCommMonoid.toCommMonoid",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddLeftCancelSemigroup.toAddSemigroup",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "AddLeftCancelMonoid.mk",
   "AddLeftCancelSemigroup.mk",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Eq.mpr",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "neg_add_cancel_left",
   "AddMonoid.toZero",
   "AddMonoid.zero_add",
   "AddMonoid.add_zero",
   "AddMonoid.nsmul",
   "AddMonoid.nsmul_zero",
   "AddMonoid.nsmul_succ",
   "add_neg_cancel_right"],
  "name": "AddGroup.toAddCancelMonoid.proof_6",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.eq_zero_of_mul_eq_zero.match_1",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Or",
   "Or.inl",
   "rfl",
   "Eq.mpr",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.succ_mul",
   "Or.inr",
   "Nat.eq_zero_of_add_eq_zero_left"],
  "name": "Nat.eq_zero_of_mul_eq_zero",
  "constType": "Theorem"},
 {"references": ["Semiring"],
  "name": "Semiring.npow_zero",
  "constType": "Definition"},
 {"references": ["Semifield"],
  "name": "Semifield.toCommSemiring",
  "constType": "Definition"},
 {"references": [],
  "name": "LinearOrderedCommSemiring.mk",
  "constType": "Other"},
 {"references": ["OrderedAddCommGroup"],
  "name": "OrderedAddCommGroup.toPartialOrder",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm"],
  "name": "Mathlib.Tactic.Ring.mul_congr",
  "constType": "Theorem"},
 {"references": ["Field"],
  "name": "Field.div_eq_mul_inv",
  "constType": "Definition"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.zsmul_zero'",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "rfl",
   "Int",
   "NatCast.natCast",
   "NatCast.mk",
   "Nat.cast",
   "instNatCastInt",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Int.instCommRingInt.proof_3",
  "constType": "Theorem"},
 {"references": ["Sup"], "name": "Sup.sup", "constType": "Definition"},
 {"references":
  ["Int",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.mul_comm",
   "Int.mul_add",
   "congr",
   "eq_self"],
  "name": "Int.add_mul",
  "constType": "Theorem"},
 {"references": [], "name": "InvOneClass", "constType": "Other"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.natCast_succ",
  "constType": "Definition"},
 {"references": ["LE"], "name": "LE.le", "constType": "Definition"},
 {"references":
  ["Monoid",
   "MulOneClass.mk",
   "Monoid.toOne",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Monoid.one_mul",
   "Monoid.mul_one"],
  "name": "Monoid.toMulOneClass",
  "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocSemiring.left_distrib",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "dite",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.instDecidableEqInt",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.mul_zero",
   "Int.add_zero",
   "Not",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "HDiv.hDiv",
   "instHDiv",
   "Int.instDivInt_1",
   "Int.emod_def",
   "Int.add_mul_ediv_right",
   "Int.add_comm",
   "Int.mul_add",
   "Int.mul_comm",
   "Eq.symm",
   "Int.sub_sub",
   "Int.add_sub_cancel"],
  "name": "Int.add_mul_emod_self",
  "constType": "Theorem"},
 {"references": [], "name": "AddSemigroup.mk", "constType": "Other"},
 {"references": ["Mul.mk", "Int", "Int.mul"],
  "name": "Int.instMulInt",
  "constType": "Definition"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.add.match_1",
  "constType": "Definition"},
 {"references": ["Lattice"],
  "name": "Lattice.toSemilatticeSup",
  "constType": "Definition"},
 {"references": [], "name": "IsCancelAdd.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "rfl",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "Nat.succ"],
  "name": "Nat.pow_succ",
  "constType": "Theorem"},
 {"references": ["Nat.zero_add"],
  "name": "Nat.mul_one",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.toLinearOrderedCommSemiring",
  "constType": "Definition"},
 {"references":
  ["MulZeroClass",
   "mt",
   "Eq",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "mul_eq_zero_of_right"],
  "name": "right_ne_zero_of_mul",
  "constType": "Theorem"},
 {"references": [], "name": "CommSemigroup", "constType": "Other"},
 {"references": ["StrictOrderedRing"],
  "name": "StrictOrderedRing.toNontrivial",
  "constType": "Definition"},
 {"references": [], "name": "IsDomain", "constType": "Other"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.nsmul",
  "constType": "Definition"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.zpow",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "congrFun",
  "constType": "Theorem"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.toZero",
  "constType": "Definition"},
 {"references": [], "name": "And.intro", "constType": "Other"},
 {"references": [], "name": "NonUnitalCommSemiring.mk", "constType": "Other"},
 {"references":
  ["CommRing",
   "IsCoprime",
   "CommRing.toCommSemiring",
   "Eq.mpr",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "CommMagma.toMul",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "mul_comm",
   "IsCoprime.add_mul_left_left"],
  "name": "IsCoprime.add_mul_right_left",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "WellFounded.fix",
   "WellFoundedRelation.rel",
   "measure",
   "id",
   "Nat.gcd.proof_1",
   "_private.Init.Data.Nat.Gcd.0.Nat.gcdF"],
  "name": "Nat.gcd",
  "constType": "Definition"},
 {"references": ["Int", "rfl", "Nat.cast", "instNatCastInt", "Int.gcd"],
  "name": "Int.coe_gcd",
  "constType": "Theorem"},
 {"references":
  ["StrictOrderedSemiring",
   "OrderedSemiring.mk",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedSemiring.add_le_add_left",
   "StrictOrderedSemiring.zero_le_one",
   "StrictOrderedSemiring.toOrderedSemiring.proof_1",
   "StrictOrderedSemiring.toOrderedSemiring.proof_2"],
  "name": "StrictOrderedSemiring.toOrderedSemiring",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.decidableLE",
  "constType": "Definition"},
 {"references": [], "name": "IsEmpty", "constType": "Other"},
 {"references":
  ["GroupWithZero",
   "Iff.mpr",
   "IsUnit",
   "MonoidWithZero.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Units.exists_iff_ne_zero"],
  "name": "Ne.isUnit",
  "constType": "Theorem"},
 {"references":
  ["of_decide_eq_true",
   "Nat.Prime",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Nat.decidablePrime1",
   "Eq.refl",
   "Bool",
   "Bool.true"],
  "name": "Nat.prime_two",
  "constType": "Theorem"},
 {"references": [], "name": "CovariantClass.mk", "constType": "Other"},
 {"references":
  ["Int",
   "rfl",
   "Nat",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Int.instCommRingInt.proof_4",
  "constType": "Theorem"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "le_not_le_of_lt.match_1",
   "LE.le",
   "Preorder.toLE",
   "And.left",
   "Not",
   "le_not_le_of_lt"],
  "name": "le_of_lt",
  "constType": "Theorem"},
 {"references": ["Div"], "name": "Div.div", "constType": "Definition"},
 {"references": ["Rat"], "name": "Rat.den", "constType": "Definition"},
 {"references": ["AddCommMonoid"],
  "name": "AddCommMonoid.add_comm",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "AddMonoid",
   "Nat",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Nat.commSemiring"],
  "name": "Nat.addMonoid",
  "constType": "Definition"},
 {"references": [], "name": "PProd", "constType": "Other"},
 {"references": ["instNatAtLeastTwo", "OfNat.ofNat", "Nat", "instOfNatNat"],
  "name": "Odd.proof_1",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "CharZero",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "Eq",
   "Bool",
   "Nat.beq",
   "Bool.false",
   "Mathlib.Meta.NormNum.isNat_eq_false.match_1",
   "Not",
   "Eq.mpr",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "id",
   "congrArg",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Nat.ne_of_beq_eq_false"],
  "name": "Mathlib.Meta.NormNum.isNat_eq_false",
  "constType": "Theorem"},
 {"references":
  ["AddCommMonoidWithOne",
   "PartialOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCommMonoidWithOne.toAddCommMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "ZeroLEOneClass",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "AddMonoidWithOne.toOne",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Nat",
   "Nat.casesOn",
   "Eq",
   "Iff",
   "LT.lt",
   "Preorder.toLT",
   "Zero.toOfNat0",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "instLTNat",
   "instOfNatNat",
   "Nat.zero",
   "Eq.ndrec",
   "of_eq_true",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "Eq.trans",
   "False",
   "True",
   "congr",
   "congrArg",
   "Nat.cast_zero",
   "Mathlib.Order.Basic._auxLemma.2",
   "iff_self",
   "Eq.symm",
   "Nat.succ",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_succ",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.5",
   "Std.Data.Nat.Lemmas._auxLemma.6",
   "Eq.refl"],
  "name": "Nat.cast_pos'",
  "constType": "Theorem"},
 {"references": ["outParam", "Trans"],
  "name": "Trans.trans",
  "constType": "Definition"},
 {"references":
  ["AddZeroClass",
   "LT",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "LT.lt",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Trans.trans",
   "Eq",
   "instTransEq",
   "Eq.symm",
   "add_zero",
   "add_lt_add_left"],
  "name": "lt_add_of_pos_right",
  "constType": "Theorem"},
 {"references":
  ["LinearOrder",
   "Or.elim",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Or",
   "LT.lt",
   "Preorder.toLT",
   "Eq",
   "le_total",
   "Decidable.lt_or_eq_of_le",
   "LinearOrder.decidableLE",
   "Or.inl",
   "Or.inr",
   "Eq.symm"],
  "name": "lt_trichotomy",
  "constType": "Theorem"},
 {"references": [], "name": "InvolutiveNeg.mk", "constType": "Other"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.toInv",
  "constType": "Definition"},
 {"references": ["Semifield"],
  "name": "Semifield.zpow_succ'",
  "constType": "Definition"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Int.negOfNat.match_1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_assoc",
   "Nat.add_comm",
   "Eq.symm"],
  "name": "Nat.add_right_comm",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.decidableLE",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedCommRing",
   "LinearOrderedRing.min_def",
   "LinearOrderedCommRing.toLinearOrderedRing"],
  "name": "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_2",
  "constType": "Theorem"},
 {"references": ["AddRightCancelSemigroup"],
  "name": "AddRightCancelSemigroup.add_right_cancel",
  "constType": "Definition"},
 {"references": [], "name": "NatPow.mk", "constType": "Other"},
 {"references": ["outParam", "HSub"],
  "name": "HSub.hSub",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "NeZero.mk",
   "Zero.ofOfNat0",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "Nat.succ_ne_zero"],
  "name": "NeZero.succ",
  "constType": "Definition"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.toMin",
  "constType": "Definition"},
 {"references": ["Neg.mk", "Int", "Int.neg"],
  "name": "Int.instNegInt",
  "constType": "Definition"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.toZero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.add.match_1",
   "Nat.zero",
   "Nat.succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.add",
  "constType": "Definition"},
 {"references": ["Lattice"],
  "name": "Lattice.toInf",
  "constType": "Definition"},
 {"references": ["CommMagma", "CommMagma.mul_comm"],
  "name": "mul_comm",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "Nat",
   "Int",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Ring.toSemiring",
   "Mathlib.Meta.NormNum.IsInt",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "Int.pow",
   "Int.cast",
   "Ring.toIntCast",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Mathlib.Meta.NormNum.IsInt.casesOn",
   "Mathlib.Meta.NormNum.IsNat.casesOn",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.isInt_pow.match_1",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "CommMonoid",
   "inferInstanceAs",
   "CommSemiring.toCommMonoid",
   "NonUnitalCommSemiring.mk",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "CommMonoid.mul_comm"],
  "name": "CommSemiring.toNonUnitalCommSemiring",
  "constType": "Definition"},
 {"references":
  ["OrderedSemiring",
   "OrderedAddCommMonoid.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "OrderedSemiring.toSemiring",
   "OrderedSemiring.toPartialOrder",
   "OrderedSemiring.add_le_add_left"],
  "name": "OrderedSemiring.toOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.zero_add",
  "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.IsNat",
   "Nat.add",
   "Mathlib.Meta.NormNum.isNat_add.match_1",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Eq.symm",
   "instAddNat",
   "Nat.cast_add"],
  "name": "Mathlib.Meta.NormNum.isNat_add",
  "constType": "Theorem"},
 {"references": [], "name": "CommMagma", "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.below",
   "Nat.add_assoc.match_1",
   "rfl",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "congrArg",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.add_assoc",
  "constType": "Theorem"},
 {"references":
  ["CommGroup",
   "DivisionMonoid",
   "Group.toDivisionMonoid",
   "CommGroup.toGroup",
   "DivisionCommMonoid.mk",
   "DivisionMonoid.mk",
   "Group.toDivInvMonoid",
   "DivisionMonoid.inv_inv",
   "DivisionMonoid.mul_inv_rev",
   "DivisionMonoid.inv_eq_of_mul",
   "CommGroup.mul_comm"],
  "name": "CommGroup.toDivisionCommMonoid",
  "constType": "Definition"},
 {"references": ["CancelMonoidWithZero"],
  "name": "CancelMonoidWithZero.toMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.casesOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Nat",
   "Int.ofNat",
   "Eq.ndrec",
   "of_eq_true",
   "Nat.cast",
   "instNatCastInt",
   "instMulNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.mul_assoc",
   "eq_self",
   "Eq.symm",
   "Int.negSucc",
   "Int.negOfNat",
   "Nat.succ",
   "congr",
   "Int.ofNat_mul_negOfNat",
   "Eq.refl",
   "Int.negOfNat_mul_ofNat",
   "Int.negOfNat_mul_negSucc",
   "Int.negSucc_mul_negOfNat"],
  "name": "Int.mul_assoc",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "Iff.intro",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "SubNegMonoid.toNeg",
   "neg_add_cancel_right",
   "Eq.symm",
   "add_neg_cancel_right"],
  "name": "eq_add_neg_iff_add_eq",
  "constType": "Theorem"},
 {"references": [], "name": "Mod.mk", "constType": "Other"},
 {"references": ["Preorder", "LT.lt", "Preorder.toLT"],
  "name": "le_not_le_of_lt.match_1",
  "constType": "Definition"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.mul_one",
  "constType": "Definition"},
 {"references":
  ["Rat",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Rat.linearOrder",
   "Iff.mpr",
   "Rat.instLERat",
   "HAdd.hAdd",
   "instHAdd",
   "Rat.instAddRat",
   "Rat.add_le_add_left"],
  "name": "Rat.instLinearOrderedFieldRat.proof_1",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.toInv",
  "constType": "Definition"},
 {"references": ["Or", "Or.inl", "Or.inr", "Or.rec"],
  "name": "Or.casesOn",
  "constType": "Definition"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.toDiv",
  "constType": "Definition"},
 {"references": [], "name": "DivisionMonoid.mk", "constType": "Other"},
 {"references":
  ["AddMonoidWithOne", "Nat", "Nat.cast", "AddMonoidWithOne.toNatCast"],
  "name": "Nat.rawCast",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedRing",
   "Nat",
   "Eq.symm",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Abs.abs",
   "Neg.toHasAbs",
   "Ring.toNeg",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "LinearOrderedRing.toLinearOrder",
   "pow_abs"],
  "name": "abs_pow",
  "constType": "Theorem"},
 {"references": [], "name": "IsCancelMulZero.mk", "constType": "Other"},
 {"references":
  ["GroupWithZero",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "GroupWithZero.toMonoidWithZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "MonoidWithZero.toMonoid",
   "Eq.mpr",
   "Inv.inv",
   "GroupWithZero.toInv",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "inv_mul_cancel_left₀",
   "left_ne_zero_of_mul_eq_one",
   "GroupWithZero.toNontrivial",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "MulOneClass.toOne",
   "mul_one"],
  "name": "_private.Mathlib.Algebra.GroupWithZero.Basic.0.inv_eq_of_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Nat", "constType": "Other"},
 {"references":
  ["Semiring",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "OfNat.ofNat",
   "instOfNat",
   "Semiring.toNatCast",
   "Odd.proof_1",
   "One.toOfNat1",
   "Semiring.toOne"],
  "name": "Odd",
  "constType": "Definition"},
 {"references": ["dvd_mul_of_dvd_right"],
  "name": "Dvd.dvd.mul_left",
  "constType": "Theorem"},
 {"references":
  ["DivisionCommMonoid",
   "Nat",
   "Eq.symm",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "DivInvMonoid.toMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "div_pow"],
  "name": "Mathlib.NumberTheory.FLT.Basic._auxLemma.6",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "LE.le",
   "Int.instLEInt",
   "Int.le_trans.match_1",
   "Exists",
   "Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.le.dest",
   "Int.le_antisymm.match_1",
   "instAddNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.eq_zero_of_add_eq_zero_left",
   "instOfNatInt",
   "Int.ofNat_zero",
   "Int.add_zero",
   "Int.ofNat.inj",
   "Int.add_left_cancel",
   "Int.ofNat",
   "Eq.trans",
   "Eq.mp",
   "Int.ofNat_add",
   "Int.add_assoc"],
  "name": "Int.le_antisymm",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.rec", "Eq.symm"],
  "name": "Eq.mpr",
  "constType": "Definition"},
 {"references":
  ["SubtractionMonoid",
   "id",
   "Eq",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "SubNegMonoid.mk",
   "SubNegMonoid.toAddMonoid",
   "SubtractionMonoid.toSubNegMonoid",
   "SubNegMonoid.toSub",
   "SubNegMonoid.sub_eq_add_neg",
   "SubNegMonoid.zsmul",
   "SubNegMonoid.zsmul_zero'",
   "SubNegMonoid.zsmul_succ'",
   "SubNegMonoid.zsmul_neg'",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "Eq.mp",
   "HSub.hSub",
   "instHSub",
   "congr",
   "congrArg",
   "zero_sub",
   "Eq.trans",
   "neg_neg",
   "SubtractionMonoid.toInvolutiveNeg",
   "Eq.symm",
   "neg_sub"],
  "name": "SubtractionMonoid.toSubNegZeroMonoid.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "Mod", "constType": "Other"},
 {"references":
  ["CommRing",
   "NonUnitalSemiring.mul_assoc",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_11",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq.symm",
   "Abs.abs",
   "Neg.toHasAbs",
   "Int.instNegInt",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "Int.instLinearOrderInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Int.abs_eq_natAbs"],
  "name": "Int.coe_natAbs",
  "constType": "Theorem"},
 {"references":
  ["CancelCommMonoidWithZero",
   "GCDMonoid",
   "IsUnit",
   "MonoidWithZero.toMonoid",
   "CommMonoidWithZero.toMonoidWithZero",
   "CancelCommMonoidWithZero.toCommMonoidWithZero",
   "GCDMonoid.gcd",
   "Nat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Or.casesOn",
   "Subsingleton",
   "Nontrivial",
   "Or",
   "subsingleton_or_nontrivial",
   "Exists",
   "Associated",
   "Or.inl",
   "Exists.intro",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Subsingleton.elim",
   "Associated.refl",
   "Or.inr",
   "dite",
   "Classical.propDecidable",
   "instOfNatNat",
   "GT.gt",
   "instLTNat",
   "Nat.eq_zero_or_pos",
   "False.elim",
   "False",
   "MulZeroClass.toZero",
   "MulZeroClass.zero_mul",
   "One.toOfNat1",
   "Monoid.toOne",
   "pow_zero",
   "zero_ne_one",
   "NeZero.one",
   "Eq.symm",
   "MonoidWithZero.toZero",
   "zero_pow",
   "Not",
   "one_pow",
   "Associated.trans",
   "Associated.symm",
   "Iff.mpr",
   "associated_one_iff_isUnit",
   "gcd_zero_right'",
   "Units",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.val",
   "Units.mkOfMulEqOne",
   "CommMonoidWithZero.toCommMonoid",
   "Eq.mp",
   "CommMonoid.toMonoid",
   "Units.val_mkOfMulEqOne",
   "MulZeroOneClass.toMulOneClass",
   "MulOneClass.toOne",
   "one_mul",
   "Dvd.dvd",
   "semigroupDvd",
   "SemigroupWithZero.toSemigroup",
   "MonoidWithZero.toSemigroupWithZero",
   "Exists.casesOn",
   "And",
   "exists_dvd_and_dvd_of_dvd_mul",
   "And.casesOn",
   "Ne",
   "pow_dvd_of_mul_eq_pow",
   "Semigroup.toMul",
   "propext",
   "Associated.isUnit_iff",
   "gcd_comm'",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "CommMonoid.toCommSemigroup",
   "mul_comm",
   "Iff.mp",
   "CancelMonoidWithZero.toMonoidWithZero",
   "CancelCommMonoidWithZero.toCancelMonoidWithZero",
   "mul_right_inj'",
   "mul_one",
   "mul_pow",
   "mul_assoc",
   "dvd_pow_self",
   "LT.lt.ne'",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring"],
  "name": "exists_associated_pow_of_mul_eq_pow",
  "constType": "Theorem"},
 {"references": ["CommSemiring"],
  "name": "CommSemiring.mul_comm",
  "constType": "Definition"},
 {"references": [], "name": "False.rec", "constType": "Other"},
 {"references":
  ["Nat",
   "decidable_of_iff'",
   "Nat.Prime",
   "And",
   "LE.le",
   "instLENat",
   "OfNat.ofNat",
   "instOfNatNat",
   "LT.lt",
   "instLTNat",
   "Not",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Nat.prime_def_lt'",
   "instDecidableAnd",
   "Nat.decLe",
   "Nat.decidableLoHi",
   "instDecidableNot",
   "Nat.decidable_dvd"],
  "name": "Nat.decidablePrime1",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.below",
   "Nat.zero_add.match_1",
   "Unit",
   "rfl",
   "Nat.succ",
   "Eq.rec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.symm",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.mul_succ"],
  "name": "Nat.zero_mul",
  "constType": "Theorem"},
 {"references": ["Ring", "Semiring.one_mul", "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_6",
  "constType": "Theorem"},
 {"references": [], "name": "Dvd.mk", "constType": "Other"},
 {"references":
  ["Int",
   "not_congr",
   "Eq",
   "Nat",
   "Int.natAbs",
   "OfNat.ofNat",
   "instOfNatNat",
   "instOfNatInt",
   "Int.natAbs_eq_zero"],
  "name": "Int.natAbs_ne_zero",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Fermat42",
   "Exists.casesOn",
   "Exists",
   "And",
   "Fermat42.Minimal",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "OfNat.ofNat",
   "instOfNatInt",
   "LT.lt",
   "Int.instLTInt",
   "Fermat42.exists_odd_minimal",
   "And.casesOn",
   "Or.casesOn",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Int.instLinearOrderInt",
   "Or",
   "lt_trichotomy",
   "Exists.intro",
   "And.intro",
   "False.elim",
   "Fermat42.ne_zero",
   "And.left",
   "LE.le",
   "Nat",
   "instLENat",
   "Int.natAbs",
   "Eq.symm",
   "Neg.neg",
   "Int.instNegInt",
   "Fermat42.neg_of_minimal",
   "Iff.mpr",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Int.instAddGroupInt",
   "NegZeroClass.toNeg",
   "neg_pos",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup"],
  "name": "Fermat42.exists_pos_odd_minimal",
  "constType": "Theorem"},
 {"references": [], "name": "NonAssocSemiring.mk", "constType": "Other"},
 {"references": ["Semifield"],
  "name": "Semifield.zpow_neg'",
  "constType": "Definition"},
 {"references":
  ["NonUnitalSemiring.mul_assoc",
   "Nat",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_6",
  "constType": "Theorem"},
 {"references": ["not_congr"], "name": "Iff.not", "constType": "Theorem"},
 {"references":
  ["MonoidWithZero",
   "Nat",
   "Ne",
   "OfNat.ofNat",
   "instOfNatNat",
   "Mathlib.Tactic.Contrapose.mtr",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Eq.mpr",
   "Not",
   "Eq",
   "id",
   "implies_congr",
   "Mathlib.Tactic.PushNeg.not_ne_eq",
   "Eq.ndrec",
   "zero_pow'",
   "Eq.symm"],
  "name": "ne_zero_pow",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.toMonoid",
  "constType": "Definition"},
 {"references": [], "name": "IsCancelAdd", "constType": "Other"},
 {"references":
  ["Add",
   "LT",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "LT.lt",
   "CovariantClass.elim"],
  "name": "add_lt_add_left",
  "constType": "Theorem"},
 {"references": [],
  "name": "Mathlib.Meta.NormNum.IsNat.rec",
  "constType": "Other"},
 {"references": ["One", "OfNat.mk", "One.one"],
  "name": "One.toOfNat1",
  "constType": "Definition"},
 {"references": ["Int", "Eq.refl", "Min.min", "Int.instMinInt"],
  "name": "Int.instLinearOrderInt.proof_1",
  "constType": "Theorem"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.zpow_neg'",
  "constType": "Definition"},
 {"references": [], "name": "CommMonoid.mk", "constType": "Other"},
 {"references":
  ["AddCancelCommMonoid",
   "IsRightCancelAdd",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCancelCommMonoid.toAddCommMonoid",
   "AddCancelCommMonoid.toAddCancelMonoid.proof_1",
   "AddCancelMonoid.mk",
   "AddCancelCommMonoid.toAddLeftCancelMonoid",
   "AddCancelCommMonoid.toAddCancelMonoid.proof_2"],
  "name": "AddCancelCommMonoid.toAddCancelMonoid",
  "constType": "Definition"},
 {"references": [], "name": "AddGroupWithOne", "constType": "Other"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.toOne",
  "constType": "Definition"},
 {"references": ["InvolutiveNeg"],
  "name": "InvolutiveNeg.toNeg",
  "constType": "Definition"},
 {"references": [], "name": "List.rec", "constType": "Other"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.le_total",
  "constType": "Definition"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.toLinearOrderedCommRing",
  "constType": "Definition"},
 {"references": [], "name": "Exists", "constType": "Other"},
 {"references": ["Left.neg_nonpos_iff"],
  "name": "neg_nonpos",
  "constType": "Theorem"},
 {"references": [], "name": "AddCommGroup", "constType": "Other"},
 {"references":
  ["Semiring",
   "Nat",
   "Nat.rec",
   "Eq",
   "Nat.cast",
   "Semiring.toNatCast",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Nat.monoid",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "Monoid.toOne",
   "True",
   "congr",
   "congrArg",
   "pow_zero",
   "Nat.cast_one",
   "eq_self",
   "Eq.mpr",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.refl",
   "pow_succ'",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring.toNatCast",
   "instMulNat",
   "Nat.cast_mul"],
  "name": "Nat.cast_pow",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Eq.mpr",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "NonUnitalCommSemiring.toCommSemigroup",
   "CommSemiring.toNonUnitalCommSemiring",
   "id",
   "Eq.refl",
   "mul_left_comm"],
  "name": "Mathlib.Tactic.Ring.mul_pf_right",
  "constType": "Theorem"},
 {"references": [], "name": "Abs", "constType": "Other"},
 {"references":
  ["Int",
   "Fermat42",
   "Set",
   "Nat",
   "setOf",
   "Exists",
   "Prod",
   "And",
   "Prod.fst",
   "Prod.snd",
   "Eq",
   "Int.natAbs",
   "Set.Nonempty",
   "Nat.find",
   "Membership.mem",
   "Set.instMembershipSet",
   "Set.decidableSetOf",
   "Classical.propDecidable",
   "Exists.casesOn",
   "Fermat42.Minimal",
   "And.casesOn",
   "Exists.intro",
   "And.intro",
   "LE.le",
   "instLENat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.find_min'",
   "Prod.mk",
   "Nat.find_spec",
   "Set.mem_setOf_eq"],
  "name": "Fermat42.exists_minimal",
  "constType": "Theorem"},
 {"references":
  ["Rat",
   "Rat.rec",
   "Iff",
   "Eq",
   "Int",
   "Rat.num",
   "OfNat.ofNat",
   "instOfNatInt",
   "Rat.instOfNatRat",
   "Nat",
   "Ne",
   "instOfNatNat",
   "Nat.Coprime",
   "Int.natAbs",
   "Iff.intro",
   "Rat.mk'",
   "Eq.ndrec",
   "Rat.zero_mk",
   "Eq.symm",
   "congr_arg"],
  "name": "Rat.num_eq_zero",
  "constType": "Theorem"},
 {"references": ["CommMagma"],
  "name": "CommMagma.toMul",
  "constType": "Definition"},
 {"references": ["LE", "OrderBot"],
  "name": "OrderBot.bot_le",
  "constType": "Definition"},
 {"references": ["HEq", "Eq", "cast", "rfl", "HEq.rec"],
  "name": "eq_of_heq",
  "constType": "Theorem"},
 {"references": [], "name": "SemigroupWithZero.mk", "constType": "Other"},
 {"references": [], "name": "Or", "constType": "Other"},
 {"references": ["Add", "Eq", "Eq.rec", "HAdd.hAdd", "instHAdd", "rfl"],
  "name": "Mathlib.Tactic.LinearCombination.add_pf",
  "constType": "Theorem"},
 {"references": [], "name": "MonoidWithZero", "constType": "Other"},
 {"references": ["NonUnitalNonAssocRing"],
  "name": "NonUnitalNonAssocRing.toAddCommGroup",
  "constType": "Definition"},
 {"references": ["Ring"],
  "name": "Ring.add_left_neg",
  "constType": "Definition"},
 {"references":
  ["NonAssocRing",
   "NonAssocSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "AddCommGroup.add_comm",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalNonAssocRing.left_distrib",
   "NonUnitalNonAssocRing.right_distrib",
   "NonUnitalNonAssocRing.zero_mul",
   "NonUnitalNonAssocRing.mul_zero",
   "NonAssocRing.toOne",
   "NonAssocRing.one_mul",
   "NonAssocRing.mul_one",
   "NonAssocRing.toNatCast",
   "NonAssocRing.natCast_zero",
   "NonAssocRing.natCast_succ"],
  "name": "NonAssocRing.toNonAssocSemiring",
  "constType": "Definition"},
 {"references": ["NonUnitalCommSemiring"],
  "name": "NonUnitalCommSemiring.toNonUnitalSemiring",
  "constType": "Definition"},
 {"references":
  ["Rat",
   "Rat.numDenCasesOn'",
   "Ne",
   "OfNat.ofNat",
   "Rat.instOfNatRat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Rat.instMulRat",
   "Inv.inv",
   "Rat.instInvRat",
   "Int",
   "Nat",
   "instOfNatNat",
   "Rat.divInt",
   "Nat.cast",
   "instNatCastInt",
   "instOfNatInt",
   "Eq.mpr",
   "Int.instMulInt",
   "CommMagma.toMul",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "id",
   "congrFun",
   "congrArg",
   "Eq.trans",
   "Rat.inv_def'",
   "Rat.mul_def'",
   "of_eq_true",
   "Not",
   "AddMonoidWithOne.toNatCast",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Int.instRingInt",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "False",
   "True",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.3",
   "StrictOrderedSemiring.to_charZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Int.linearOrderedCommRing",
   "eq_false",
   "not_false_eq_true",
   "mul_comm",
   "Eq.mp",
   "congr",
   "mul_one",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Int.instSemiringInt",
   "Rat.divInt_one_one",
   "Rat.divInt_mul_right",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "MulZeroClass.toZero",
   "Or",
   "Mathlib.Algebra.GroupWithZero.Defs._auxLemma.1",
   "LinearOrderedRing.noZeroDivisors",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "or_self",
   "mt",
   "Eq.ndrec",
   "Rat.zero_divInt",
   "eq_self",
   "Eq.symm"],
  "name": "Rat.mul_inv_cancel",
  "constType": "Theorem"},
 {"references":
  ["StrictOrderedSemiring",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedSemiring.mk",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.add_le_add_left",
   "StrictOrderedSemiring.zero_le_one",
   "StrictOrderedSemiring.toOrderedSemiring'.proof_1",
   "StrictOrderedSemiring.toOrderedSemiring'.proof_2"],
  "name": "StrictOrderedSemiring.toOrderedSemiring'",
  "constType": "Definition"},
 {"references": ["pow_two"], "name": "sq", "constType": "Theorem"},
 {"references": [], "name": "MonoidWithZero.mk", "constType": "Other"},
 {"references": ["NatCast", "NatCast.natCast"],
  "name": "Nat.cast",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "IsDomain",
   "Ring.toSemiring",
   "IsRightCancelMulZero.to_noZeroDivisors",
   "IsCancelMulZero.toIsRightCancelMulZero",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "IsDomain.toIsCancelMulZero"],
  "name": "IsDomain.to_noZeroDivisors",
  "constType": "Definition"},
 {"references":
  ["Int",
   "IsCoprime",
   "Int.instCommSemiringInt",
   "Eq.mpr",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "sq",
   "IsCoprime.mul_add_left_left",
   "Int.instCommRingInt",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "IsCoprime.mul_left"],
  "name": "Int.coprime_of_sq_sum",
  "constType": "Theorem"},
 {"references": ["NatPow"], "name": "NatPow.pow", "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.mul_comm",
   "Nat.left_distrib",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "congr",
   "eq_self"],
  "name": "Nat.right_distrib",
  "constType": "Theorem"},
 {"references":
  ["Semiring.npow_succ",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_12",
  "constType": "Theorem"},
 {"references": ["Nat.decEq"],
  "name": "instDecidableEqNat",
  "constType": "Definition"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.toMul",
  "constType": "Definition"},
 {"references": ["AddMonoidWithOne", "AddMonoidWithOne.natCast_zero"],
  "name": "Nat.cast_zero",
  "constType": "Theorem"},
 {"references": [], "name": "ZeroLEOneClass.mk", "constType": "Other"},
 {"references": ["String", "Lean.Syntax.atom", "Lean.SourceInfo.none"],
  "name": "Lean.mkAtom",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq",
   "Nat.pow",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Eq.mpr",
   "Int",
   "Int.pow",
   "Int.negOfNat",
   "Int.ofNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Neg.neg",
   "Int.instNegInt",
   "Int.negOfNat_eq",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "pow_eq",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "pow_mul",
   "OfNat.ofNat",
   "instOfNatNat",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "neg_pow_two",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "NonUnitalNonAssocSemiring.toMul",
   "instOfNat",
   "NonAssocSemiring.toNatCast",
   "instNatAtLeastTwo",
   "two_mul",
   "instAddNat",
   "pow_add",
   "of_eq_true",
   "Nat.cast",
   "instNatCastInt",
   "Int.instSemiringInt",
   "instPowNat",
   "instNatPowNat",
   "Eq.trans",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Semiring.toNatCast",
   "True",
   "congrArg",
   "Nat.cast_mul",
   "congr",
   "Nat.monoid",
   "Nat.cast_pow",
   "eq_self"],
  "name": "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
  "constType": "Theorem"},
 {"references":
  ["AddCommSemigroup",
   "AddCommMagma.mk",
   "AddSemigroup.toAdd",
   "AddCommSemigroup.toAddSemigroup",
   "AddCommSemigroup.add_comm"],
  "name": "AddCommSemigroup.toAddCommMagma",
  "constType": "Definition"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.le_of_add_le_add_left",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.mul.match_1",
  "constType": "Definition"},
 {"references":
  ["List",
   "Fin",
   "List.length",
   "List.brecOn",
   "List.below",
   "List.get.match_1",
   "LT.lt",
   "Nat",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "List.cons",
   "Nat.succ",
   "PProd.fst",
   "List.rec",
   "PUnit",
   "PProd",
   "Fin.mk",
   "List.get.proof_1"],
  "name": "List.get",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedRing",
   "StrictOrderedSemiring",
   "StrictOrderedRing.toStrictOrderedSemiring",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedSemiring.mk",
   "StrictOrderedSemiring.mk",
   "Ring.toSemiring",
   "StrictOrderedRing.toRing",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toLinearOrderedSemiring.proof_1",
   "StrictOrderedSemiring.le_of_add_le_add_left",
   "LinearOrderedRing.toLinearOrderedSemiring.proof_2",
   "LinearOrderedRing.toLinearOrderedSemiring.proof_3",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_left",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_right",
   "LinearOrderedRing.toMin",
   "LinearOrderedRing.toMax",
   "LinearOrderedRing.toOrd",
   "LinearOrderedRing.le_total",
   "LinearOrderedRing.decidableLE",
   "LinearOrderedRing.decidableEq",
   "LinearOrderedRing.decidableLT",
   "LinearOrderedRing.min_def",
   "LinearOrderedRing.max_def",
   "LinearOrderedRing.compare_eq_compareOfLessAndEq"],
  "name": "LinearOrderedRing.toLinearOrderedSemiring",
  "constType": "Definition"},
 {"references": [], "name": "Bool", "constType": "Other"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.zero_le_one",
  "constType": "Definition"},
 {"references": ["Semifield"],
  "name": "Semifield.div_eq_mul_inv",
  "constType": "Definition"},
 {"references": ["Array.mkEmpty", "OfNat.ofNat", "Nat", "instOfNatNat"],
  "name": "Array.empty",
  "constType": "Definition"},
 {"references": [], "name": "List", "constType": "Other"},
 {"references": ["CommSemigroup"],
  "name": "CommSemigroup.mul_comm",
  "constType": "Definition"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.add_assoc.match_1",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.emod.match_1",
   "Nat",
   "Int.ofNat",
   "HMod.hMod",
   "instHMod",
   "Nat.instModNat",
   "Int.natAbs",
   "Int.subNatNat",
   "Nat.succ"],
  "name": "Int.emod",
  "constType": "Definition"},
 {"references": [], "name": "InvOneClass.mk", "constType": "Other"},
 {"references":
  ["Int", "Int.neg.match_1", "Nat", "Int.negOfNat", "Int.ofNat", "Nat.succ"],
  "name": "Int.neg",
  "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "CharZero",
   "NeZero.mk",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "OfNat.ofNat",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "Eq.mpr",
   "Ne",
   "Zero.toOfNat0",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Nat",
   "instOfNatNat",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.cast_one",
   "propext",
   "Nat.cast_ne_zero",
   "of_decide_eq_true",
   "instDecidableNot",
   "instDecidableEqNat",
   "Bool",
   "Bool.true"],
  "name": "NeZero.charZero_one",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm"],
  "name": "Mathlib.Tactic.Ring.pow_congr",
  "constType": "Theorem"},
 {"references": ["AddCommGroup"],
  "name": "AddCommGroup.toAddGroup",
  "constType": "Definition"},
 {"references": ["AddMonoidWithOne", "Nat", "AddMonoidWithOne.natCast_succ"],
  "name": "Nat.cast_succ",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "instDecidableAnd.match_1",
   "Not",
   "Decidable.isFalse",
   "absurd",
   "False",
   "Decidable.isTrue"],
  "name": "instDecidableNot",
  "constType": "Definition"},
 {"references": ["Field"],
  "name": "Field.mul_inv_cancel",
  "constType": "Definition"},
 {"references": [], "name": "RightDistribClass", "constType": "Other"},
 {"references": [], "name": "AddGroup", "constType": "Other"},
 {"references": ["Semiring"],
  "name": "Semiring.one_mul",
  "constType": "Definition"},
 {"references": [], "name": "AddSemigroup", "constType": "Other"},
 {"references": ["CommSemiring", "Iff.intro", "IsCoprime", "IsCoprime.symm"],
  "name": "isCoprime_comm",
  "constType": "Theorem"},
 {"references":
  ["GroupWithZero",
   "DivisionMonoid.mk",
   "DivInvMonoid.mk",
   "MonoidWithZero.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Inv.mk",
   "Inv.inv",
   "GroupWithZero.toInv",
   "GroupWithZero.toDiv",
   "GroupWithZero.div_eq_mul_inv",
   "GroupWithZero.zpow",
   "GroupWithZero.zpow_zero'",
   "GroupWithZero.zpow_succ'",
   "GroupWithZero.zpow_neg'",
   "GroupWithZero.toDivisionMonoid.proof_1",
   "GroupWithZero.toDivisionMonoid.proof_2",
   "_private.Mathlib.Algebra.GroupWithZero.Basic.0.inv_eq_of_mul"],
  "name": "GroupWithZero.toDivisionMonoid",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Exists.intro",
   "Units",
   "Eq",
   "Units.val",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "Group.toDivisionMonoid",
   "Units.instGroupUnits",
   "rfl"],
  "name": "isUnit_one",
  "constType": "Theorem"},
 {"references": ["OrderedAddCommMonoid"],
  "name": "OrderedAddCommMonoid.toAddCommMonoid",
  "constType": "Definition"},
 {"references": ["NonUnitalSemiring"],
  "name": "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
  "constType": "Definition"},
 {"references":
  ["List",
   "Nat",
   "Exists",
   "LT.lt",
   "instLTNat",
   "List.length",
   "Eq",
   "List.get",
   "Fin.mk",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "List.get?_mem.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Int.negSucc", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "MulZeroClass.mul_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.mul_zero",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Int.casesOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Nat",
   "Int.ofNat",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Int.negSucc"],
  "name": "Int.mul_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "Int",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Int.negOfNat",
   "Int.negSucc",
   "Int.ofNat",
   "instMulNat",
   "Nat.succ",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.mul_comm",
   "Int.negSucc_mul_negOfNat",
   "Nat.mul_comm"],
  "name": "Int.negOfNat_mul_negSucc",
  "constType": "Theorem"},
 {"references":
  ["MulZeroOneClass",
   "MulZeroClass.mk",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "MulZeroOneClass.toZero",
   "MulZeroOneClass.zero_mul",
   "MulZeroOneClass.mul_zero"],
  "name": "MulZeroOneClass.toMulZeroClass",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "CommSemiring",
   "Int",
   "CommRing.toCommSemiring",
   "Int.instCommRingInt"],
  "name": "Int.instCommSemiringInt",
  "constType": "Definition"},
 {"references": [], "name": "LinearOrderedSemifield", "constType": "Other"},
 {"references": [], "name": "Nat.AtLeastTwo.mk", "constType": "Other"},
 {"references": [], "name": "CancelMonoidWithZero.mk", "constType": "Other"},
 {"references": ["Int", "Int.le.intro", "Int.add_zero"],
  "name": "Int.le_refl",
  "constType": "Theorem"},
 {"references": [], "name": "AddZeroClass", "constType": "Other"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.toMax",
  "constType": "Definition"},
 {"references": [], "name": "NegZeroClass", "constType": "Other"},
 {"references": ["And", "And.intro", "And.rec"],
  "name": "And.casesOn",
  "constType": "Definition"},
 {"references": [], "name": "HPow", "constType": "Other"},
 {"references": [], "name": "Mathlib.Meta.NormNum.IsInt", "constType": "Other"},
 {"references":
  ["StrictOrderedCommSemiring",
   "StrictOrderedSemiring.zero_le_one",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring"],
  "name": "StrictOrderedCommSemiring.toOrderedCommSemiring.proof_2",
  "constType": "Theorem"},
 {"references": ["eq_true", "Or", "True", "Or.inl", "trivial"],
  "name": "true_or",
  "constType": "Theorem"},
 {"references": ["NatPow.mk", "Nat", "Nat.pow"],
  "name": "instNatPowNat",
  "constType": "Definition"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.mul_inv_rev",
  "constType": "Definition"},
 {"references": ["Iff"], "name": "Iff.mp", "constType": "Definition"},
 {"references":
  ["Eq",
   "Rat",
   "Rat.inv",
   "OfNat.ofNat",
   "Rat.instOfNatRat",
   "Eq.mpr",
   "Rat.divInt",
   "Nat.cast",
   "Int",
   "instNatCastInt",
   "Rat.den",
   "Rat.num",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Rat.inv_def"],
  "name": "Rat.commGroupWithZero.proof_8",
  "constType": "Theorem"},
 {"references":
  ["Semiring",
   "NonAssocSemiring.mk",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.toNatCast",
   "Semiring.natCast_zero",
   "Semiring.natCast_succ"],
  "name": "Semiring.toNonAssocSemiring",
  "constType": "Definition"},
 {"references":
  ["CommGroupWithZero",
   "CommMonoid.mul_comm",
   "CommMonoidWithZero.toCommMonoid",
   "CommGroupWithZero.toCommMonoidWithZero"],
  "name": "CommGroupWithZero.toDivisionCommMonoid.proof_1",
  "constType": "Theorem"},
 {"references": ["Mul", "Add", "RightDistribClass"],
  "name": "RightDistribClass.right_distrib",
  "constType": "Definition"},
 {"references": [], "name": "OrderBot", "constType": "Other"},
 {"references": ["StrictOrderedCommSemiring"],
  "name": "StrictOrderedCommSemiring.toStrictOrderedSemiring",
  "constType": "Definition"},
 {"references": ["Left.add_neg"], "name": "add_neg", "constType": "Theorem"},
 {"references": ["outParam", "HAdd"],
  "name": "HAdd.hAdd",
  "constType": "Definition"},
 {"references": ["Mul", "Zero", "IsCancelMulZero"],
  "name": "IsCancelMulZero.toIsRightCancelMulZero",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "IsCoprime",
   "Eq.mpr",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Finset.card",
   "Finset.range",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Finset.card_range",
   "Finset.prod",
   "CommSemiring.toCommMonoid",
   "CommMonoid.toMonoid",
   "Finset.prod_const",
   "IsCoprime.prod_left",
   "Membership.mem",
   "Finset",
   "Finset.instMembershipFinset"],
  "name": "IsCoprime.pow_left",
  "constType": "Theorem"},
 {"references":
  ["Nontrivial.mk",
   "Int",
   "Exists.intro",
   "Exists",
   "Ne",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.zero_ne_one"],
  "name": "Int.instNontrivialInt",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "Nat.cast_one",
   "one_mul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.one_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Abs.mk", "constType": "Other"},
 {"references": [], "name": "LeftDistribClass.mk", "constType": "Other"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.toDiv",
  "constType": "Definition"},
 {"references":
  ["Int",
   "dite",
   "Eq",
   "Rat",
   "Rat.divInt",
   "HDiv.hDiv",
   "instHDiv",
   "Rat.instDivRat",
   "Int.cast",
   "Rat.instIntCastRat",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.instDecidableEqInt",
   "of_eq_true",
   "Eq.trans",
   "Rat.instOfNatRat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "GroupWithZero.toMonoidWithZero",
   "CommGroupWithZero.toGroupWithZero",
   "Rat.commGroupWithZero",
   "True",
   "congr",
   "congrArg",
   "Rat.divInt_zero",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "AddGroupWithOne.toAddGroup",
   "Ring.toAddGroupWithOne",
   "CommRing.toRing",
   "Rat.commRing",
   "Int.cast_zero",
   "div_zero",
   "eq_self",
   "Not",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "One.toOfNat1",
   "Semiring.toOne",
   "Int.instSemiringInt",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toDivInvMonoid",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "Rat.coe_int_eq_divInt",
   "division_def",
   "Rat.instInvRat",
   "Rat.inv_def'",
   "Rat.mul_def'",
   "one_ne_zero",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Int.instCommSemiringInt",
   "NeZero.charZero_one",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Int.instRingInt",
   "StrictOrderedSemiring.to_charZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Int.linearOrderedCommRing",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "MulOneClass.toOne",
   "mul_one",
   "one_mul"],
  "name": "Rat.divInt_eq_div",
  "constType": "Theorem"},
 {"references": [], "name": "AddMonoid", "constType": "Other"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.toMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "id",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "AddSemigroup.toAdd",
   "AddSemigroup.mk",
   "Add.mk",
   "Nat.add",
   "Nat.add_assoc",
   "Eq.mpr",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.add_comm",
   "Nat.right_distrib",
   "Nat.one_mul"],
  "name": "Nat.commSemiring.proof_1",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "Finset",
   "Finset.induction_on",
   "Membership.mem",
   "Finset.instMembershipFinset",
   "IsCoprime",
   "Finset.prod",
   "CommSemiring.toCommMonoid",
   "Classical.propDecidable",
   "Eq",
   "EmptyCollection.emptyCollection",
   "Finset.instEmptyCollectionFinset",
   "isCoprime_one_left",
   "Not",
   "Insert.insert",
   "Finset.instInsertFinset",
   "Eq.mpr",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "CommMonoid.toMonoid",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Finset.prod_insert",
   "IsCoprime.mul_left",
   "And.left",
   "Eq.mp",
   "And",
   "propext",
   "Finset.forall_mem_insert",
   "And.right"],
  "name": "IsCoprime.prod_left",
  "constType": "Theorem"},
 {"references": ["mul_sub_right_distrib"],
  "name": "sub_mul",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "Nat",
   "Int",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Ring.toSemiring",
   "Mathlib.Meta.NormNum.IsInt",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "Int.pow",
   "Mathlib.Meta.NormNum.isInt_pow.match_1",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Int.cast",
   "Ring.toIntCast",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "of_eq_true",
   "Int.instHPowIntNat",
   "Eq.trans",
   "True",
   "congrArg",
   "Int.cast_pow",
   "eq_self"],
  "name": "Mathlib.Meta.NormNum.isInt_pow",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "IsDomain",
   "CommSemiring.toSemiring",
   "CancelCommMonoidWithZero.mk",
   "CommSemiring.toCommMonoidWithZero",
   "IsDomain.toCancelCommMonoidWithZero.proof_1"],
  "name": "IsDomain.toCancelCommMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["One",
   "AddZeroClass",
   "PartialOrder",
   "ZeroLEOneClass",
   "AddZeroClass.toZero",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "LT.lt",
   "Preorder.toLT",
   "lt_add_of_pos_right",
   "zero_lt_one"],
  "name": "lt_add_one",
  "constType": "Theorem"},
 {"references":
  ["LinearOrder",
   "Ne",
   "le_of_not_lt.match_1",
   "Or",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Eq",
   "GT.gt",
   "lt_trichotomy",
   "Or.inl",
   "absurd",
   "Or.inr"],
  "name": "lt_or_gt_of_ne",
  "constType": "Theorem"},
 {"references": [], "name": "CharZero.mk", "constType": "Other"},
 {"references":
  ["LinearOrderedRing",
   "LinearOrderedAddCommGroup.mk",
   "OrderedAddCommGroup.mk",
   "AddCommGroup.mk",
   "AddGroup.mk",
   "SubNegMonoid.mk",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "Ring.toNeg",
   "Ring.toSub",
   "LinearOrderedRing.toLinearOrderedAddCommGroup.proof_1",
   "Ring.zsmul",
   "LinearOrderedRing.toLinearOrderedAddCommGroup.proof_2",
   "LinearOrderedRing.toLinearOrderedAddCommGroup.proof_3",
   "LinearOrderedRing.toLinearOrderedAddCommGroup.proof_4",
   "LinearOrderedRing.toLinearOrderedAddCommGroup.proof_5",
   "LinearOrderedRing.toLinearOrderedAddCommGroup.proof_6",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toLinearOrderedAddCommGroup.proof_7",
   "LinearOrderedRing.toMin",
   "LinearOrderedRing.toMax",
   "LinearOrderedRing.toOrd",
   "LinearOrderedRing.le_total",
   "LinearOrderedRing.decidableLE",
   "LinearOrderedRing.decidableEq",
   "LinearOrderedRing.decidableLT",
   "LinearOrderedRing.min_def",
   "LinearOrderedRing.max_def",
   "LinearOrderedRing.compare_eq_compareOfLessAndEq"],
  "name": "LinearOrderedRing.toLinearOrderedAddCommGroup",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt"],
  "name": "PythagoreanTriple",
  "constType": "Definition"},
 {"references": ["AddZeroClass", "AddZeroClass.zero_add"],
  "name": "zero_add",
  "constType": "Theorem"},
 {"references": ["Distrib"],
  "name": "Distrib.right_distrib",
  "constType": "Definition"},
 {"references": ["Semifield"],
  "name": "Semifield.inv_zero",
  "constType": "Definition"},
 {"references":
  ["OrderBot.mk",
   "Nat",
   "instLENat",
   "Bot.mk",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero_le"],
  "name": "Nat.orderBot",
  "constType": "Definition"},
 {"references":
  ["Field",
   "DivisionRing.mk",
   "CommRing.toRing",
   "Field.toCommRing",
   "Field.toInv",
   "Field.toDiv",
   "Field.div_eq_mul_inv",
   "Field.zpow",
   "Field.zpow_zero'",
   "Field.zpow_succ'",
   "Field.zpow_neg'",
   "Field.toNontrivial",
   "Field.toRatCast",
   "Field.mul_inv_cancel",
   "Field.inv_zero",
   "Field.ratCast_mk",
   "Field.qsmul",
   "Field.qsmul_eq_mul'"],
  "name": "Field.toDivisionRing",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toPartialOrder",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.AtLeastTwo.mk",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ_le_succ",
   "Nat.zero_le"],
  "name": "instNatAtLeastTwo",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "mul_le_mul_of_nonneg_right",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedSemiring.toMulPosMono",
   "StrictOrderedSemiring.toOrderedSemiring'",
   "Classical.decRel",
   "LE.le",
   "Preorder.toLE"],
  "name": "StrictOrderedSemiring.toOrderedSemiring.proof_2",
  "constType": "Theorem"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.zpow_zero'",
  "constType": "Definition"},
 {"references": [], "name": "And", "constType": "Other"},
 {"references": [], "name": "NoZeroDivisors", "constType": "Other"},
 {"references":
  ["Int",
   "IsCoprime",
   "Int.instCommSemiringInt",
   "IsCoprime.mul_right",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "OfNat.ofNat",
   "instOfNatNat",
   "Int.coprime_of_sq_sum",
   "Iff.mp",
   "isCoprime_comm",
   "Eq.mpr",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "Int.instAddCommSemigroupInt",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "add_comm"],
  "name": "Int.coprime_of_sq_sum'",
  "constType": "Theorem"},
 {"references": ["Int", "Nat.gcd", "Int.natAbs"],
  "name": "Int.gcd",
  "constType": "Definition"},
 {"references":
  ["GCDMonoid.mk",
   "Int",
   "IsDomain.toCancelCommMonoidWithZero",
   "Int.instCommSemiringInt",
   "Int.instGCDMonoidIntToCancelCommMonoidWithZeroInstCommSemiringIntIsDomainToLinearOrderedRingLinearOrderedCommRing.proof_1",
   "Nat.cast",
   "instNatCastInt",
   "Int.gcd",
   "Int.lcm",
   "Int.gcd_dvd_left",
   "Int.gcd_dvd_right",
   "Int.dvd_gcd",
   "Int.instGCDMonoidIntToCancelCommMonoidWithZeroInstCommSemiringIntIsDomainToLinearOrderedRingLinearOrderedCommRing.proof_2",
   "Int.instGCDMonoidIntToCancelCommMonoidWithZeroInstCommSemiringIntIsDomainToLinearOrderedRingLinearOrderedCommRing.proof_3",
   "Int.instGCDMonoidIntToCancelCommMonoidWithZeroInstCommSemiringIntIsDomainToLinearOrderedRingLinearOrderedCommRing.proof_4"],
  "name":
  "Int.instGCDMonoidIntToCancelCommMonoidWithZeroInstCommSemiringIntIsDomainToLinearOrderedRingLinearOrderedCommRing",
  "constType": "Definition"},
 {"references": [], "name": "HMod.mk", "constType": "Other"},
 {"references": ["Rat"], "name": "Rat.num", "constType": "Definition"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.toOne",
  "constType": "Definition"},
 {"references": [], "name": "NatPow", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero.match_1",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "True",
   "congr",
   "congrArg",
   "Mathlib.Tactic.Ring.Basic._auxLemma.1",
   "Distrib.leftDistribClass",
   "Nat.cast_zero",
   "MulZeroClass.mul_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.add_overlap_pf_zero",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedRing",
   "Nat",
   "Odd",
   "Nat.semiring",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Exists.casesOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "instOfNat",
   "Semiring.toNatCast",
   "Odd.proof_1",
   "One.toOfNat1",
   "Semiring.toOne",
   "Exists",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Exists.intro",
   "Eq.mpr",
   "id",
   "congrFun",
   "congrArg",
   "Eq.trans",
   "NonAssocSemiring.toNatCast",
   "instNatAtLeastTwo",
   "instOfNatNat",
   "two_mul",
   "Iff.mpr",
   "bit1",
   "CanonicallyOrderedCommSemiring.toOne",
   "Nat.canonicallyOrderedCommSemiring",
   "instAddNat",
   "pow_bit1_neg_iff",
   "Eq.refl"],
  "name": "Odd.pow_neg",
  "constType": "Theorem"},
 {"references": [], "name": "Subtype", "constType": "Other"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.zero_mul",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Nontrivial",
   "Rat",
   "IsDomain.toNontrivial",
   "CommSemiring.toSemiring",
   "CommRing.toCommSemiring",
   "Rat.commRing",
   "Rat.isDomain"],
  "name": "Rat.nontrivial",
  "constType": "Definition"},
 {"references": ["Mod"], "name": "Mod.mod", "constType": "Definition"},
 {"references": [], "name": "DivisionCommMonoid", "constType": "Other"},
 {"references": ["Mul", "HasDistribNeg"],
  "name": "HasDistribNeg.toInvolutiveNeg",
  "constType": "Definition"},
 {"references": [], "name": "Div.mk", "constType": "Other"},
 {"references": ["Int"],
  "name": "Int.cast_injective.match_1",
  "constType": "Definition"},
 {"references": ["And"], "name": "And.right", "constType": "Definition"},
 {"references":
  ["Int",
   "Rat.mk'",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Rat.ofInt.proof_1",
   "Rat.ofInt.proof_2"],
  "name": "Rat.ofInt",
  "constType": "Definition"},
 {"references": ["ne_of_lt"], "name": "LT.lt.ne", "constType": "Theorem"},
 {"references": ["And"], "name": "And.left", "constType": "Definition"},
 {"references": ["Left.add_pos"], "name": "add_pos", "constType": "Theorem"},
 {"references": ["Nat", "OfNat"],
  "name": "OfNat.ofNat",
  "constType": "Definition"},
 {"references": ["NegZeroClass"],
  "name": "NegZeroClass.toZero",
  "constType": "Definition"},
 {"references":
  ["Semiring",
   "Nat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Nat.mul",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Mathlib.Meta.NormNum.IsNat.casesOn",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.isNat_mul.match_1",
  "constType": "Definition"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.toNatCast",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "Nat",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.ofNat",
   "Int.cast",
   "Ring.toIntCast",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsInt.casesOn",
   "Eq",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.IsInt.to_isNat.match_1",
  "constType": "Definition"},
 {"references":
  ["List",
   "Nat",
   "Eq",
   "Option",
   "List.get?",
   "Option.some",
   "List.get?_mem.match_1",
   "Exists",
   "LT.lt",
   "instLTNat",
   "List.length",
   "List.get",
   "Fin.mk",
   "Membership.mem",
   "List.instMembershipList",
   "Iff.mp",
   "List.get?_eq_some",
   "Eq.rec",
   "List.get_mem"],
  "name": "List.get?_mem",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "add_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_zero",
  "constType": "Theorem"},
 {"references": ["Semiring"],
  "name": "Semiring.toOne",
  "constType": "Definition"},
 {"references": ["LT", "LT.lt"], "name": "GT.gt", "constType": "Definition"},
 {"references":
  ["AddGroup",
   "LinearOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "SemilatticeInf.toPartialOrder",
   "Lattice.toSemilatticeInf",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "max_eq_right",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "LE.le.trans",
   "Iff.mpr",
   "neg_nonneg"],
  "name": "abs_of_nonpos",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.symm"],
  "name": "Mathlib.Meta.NormNum.isNat_ofNat",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq",
   "Nat",
   "Int.gcd",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "IsUnit",
   "GCDMonoid.gcd",
   "IsDomain.toCancelCommMonoidWithZero",
   "Int.instCommSemiringInt",
   "LinearOrderedRing.isDomain",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "Int.instGCDMonoidIntToCancelCommMonoidWithZeroInstCommSemiringIntIsDomainToLinearOrderedRingLinearOrderedCommRing",
   "Exists.casesOn",
   "Associated",
   "MonoidWithZero.toMonoid",
   "CommMonoidWithZero.toMonoidWithZero",
   "CancelCommMonoidWithZero.toCommMonoidWithZero",
   "Exists",
   "Or",
   "Neg.neg",
   "Int.instNegInt",
   "exists_associated_pow_of_mul_eq_pow",
   "Units",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.val",
   "Exists.intro",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Or.casesOn",
   "One.toOfNat1",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommGroup.toDivisionCommMonoid",
   "Units.instCommGroupUnits",
   "Int.instCommMonoidInt",
   "Units.instNegUnits",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "Int.units_eq_one_or",
   "Or.inl",
   "of_eq_true",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Int.instSemiringInt",
   "MulOneClass.toOne",
   "Eq.trans",
   "True",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "congr",
   "congrArg",
   "congrFun",
   "mul_one",
   "eq_self",
   "MulZeroOneClass.toZero",
   "NonAssocRing.toNonAssocSemiring",
   "Ring.toNonAssocRing",
   "Int.instRingInt",
   "Mathlib.Algebra.CharZero.Lemmas._auxLemma.10",
   "LinearOrderedRing.noZeroDivisors",
   "StrictOrderedSemiring.to_charZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Mathlib.Algebra.GroupPower.Ring._auxLemma.1",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Nat.semiring",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "Mathlib.Algebra.Order.Monoid.NatCast._auxLemma.1",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.orderedSemiring",
   "NeZero.succ",
   "Nat.zero",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "true_or",
   "Or.inr",
   "NonUnitalNonAssocRing.toMul",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "Monoid.toOne",
   "mul_neg",
   "Mathlib.Algebra.CharZero.Lemmas._auxLemma.9",
   "or_true",
   "Nat.cast",
   "instNatCastInt",
   "Int.coe_gcd",
   "instOfNatInt",
   "Int.ofNat_one",
   "isUnit_one"],
  "name": "Int.sq_of_gcd_eq_one",
  "constType": "Theorem"},
 {"references":
  ["Preorder",
   "LE.le",
   "Preorder.toLE",
   "LT.lt",
   "Preorder.toLT",
   "lt_of_le_of_lt.match_1",
   "lt_of_lt_of_le.match_1",
   "And",
   "Not",
   "le_not_le_of_lt",
   "lt_of_le_not_le",
   "le_trans"],
  "name": "lt_of_le_of_lt",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.to_eq.match_1",
   "Unit",
   "rfl"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_eq",
  "constType": "Theorem"},
 {"references":
  ["Preorder",
   "GE.ge",
   "Preorder.toLE",
   "LT.lt",
   "Preorder.toLT",
   "not_le_of_gt"],
  "name": "not_lt_of_ge",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "And",
   "Ne",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "instOfNatNat"],
  "name": "Fermat42",
  "constType": "Definition"},
 {"references": ["Int", "rfl", "HSub.hSub", "instHSub", "Int.instSubInt"],
  "name": "Int.sub_eq_add_neg",
  "constType": "Theorem"},
 {"references":
  ["AddCancelMonoid",
   "AddRightCancelMonoid.mk",
   "AddRightCancelSemigroup.mk",
   "AddLeftCancelSemigroup.toAddSemigroup",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "AddCancelMonoid.toAddLeftCancelMonoid",
   "AddCancelMonoid.add_right_cancel",
   "AddLeftCancelMonoid.toZero",
   "AddLeftCancelMonoid.zero_add",
   "AddLeftCancelMonoid.add_zero",
   "AddLeftCancelMonoid.nsmul",
   "AddLeftCancelMonoid.nsmul_zero",
   "AddLeftCancelMonoid.nsmul_succ"],
  "name": "AddCancelMonoid.toAddRightCancelMonoid",
  "constType": "Definition"},
 {"references": ["Preorder"],
  "name": "Preorder.toLT",
  "constType": "Definition"},
 {"references": ["Zero", "OfNat.mk", "Zero.zero"],
  "name": "Zero.toOfNat0",
  "constType": "Definition"},
 {"references":
  ["Semiring",
   "Nat",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid"],
  "name": "FermatLastTheoremWith",
  "constType": "Definition"},
 {"references":
  ["Units",
   "Int",
   "Int.instMonoidInt",
   "Eq.mpr",
   "Or",
   "Eq",
   "OfNat.ofNat",
   "One.toOfNat1",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommGroup.toDivisionCommMonoid",
   "Units.instCommGroupUnits",
   "Int.instCommMonoidInt",
   "Neg.neg",
   "Units.instNegUnits",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "Units.val",
   "id",
   "congr",
   "congrArg",
   "Mathlib.Data.Int.Units._auxLemma.1",
   "Eq.mp",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Int.instNegInt",
   "Nat",
   "instOfNatNat",
   "Int.units_natAbs",
   "Int.natAbs_eq"],
  "name": "Int.units_eq_one_or",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.decidableEq",
  "constType": "Definition"},
 {"references": [], "name": "Zero", "constType": "Other"},
 {"references": ["OrderedAddCommGroup"],
  "name": "OrderedAddCommGroup.toAddCommGroup",
  "constType": "Definition"},
 {"references": ["IntCast"],
  "name": "IntCast.intCast",
  "constType": "Definition"},
 {"references": ["False"], "name": "Not", "constType": "Definition"},
 {"references":
  ["inferInstance",
   "PartialOrder",
   "Rat",
   "SemilatticeInf.toPartialOrder",
   "Rat.instSemilatticeInfRat"],
  "name": "Rat.instPartialOrderRat",
  "constType": "Definition"},
 {"references": ["Mul", "HMul.mk", "Mul.mul"],
  "name": "instHMul",
  "constType": "Definition"},
 {"references":
  ["Rat",
   "Eq.refl",
   "zpowRec",
   "Monoid.toOne",
   "CommMonoid.toMonoid",
   "CommRing.toCommMonoid",
   "Rat.commRing",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Rat.instInvRat",
   "OfNat.ofNat",
   "Int",
   "instOfNatInt"],
  "name": "Rat.commGroupWithZero.proof_4",
  "constType": "Theorem"},
 {"references": [], "name": "Iff.intro", "constType": "Other"},
 {"references": ["HPow.mk", "Int", "Nat", "Int.pow"],
  "name": "Int.instHPowIntNat",
  "constType": "Definition"},
 {"references": ["Add.mk", "Int", "Int.add"],
  "name": "Int.instAddInt",
  "constType": "Definition"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.sub_eq_add_neg",
  "constType": "Definition"},
 {"references": [], "name": "DivInvOneMonoid", "constType": "Other"},
 {"references":
  ["Int",
   "Ne",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "instOfNatNat",
   "Exists.casesOn",
   "Exists",
   "And",
   "Fermat42.Minimal",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "LT.lt",
   "Int.instLTInt",
   "False",
   "Fermat42.exists_pos_odd_minimal",
   "And.intro",
   "And.casesOn",
   "Fermat42.not_minimal"],
  "name": "not_fermat_42",
  "constType": "Theorem"},
 {"references": ["IsEmpty.mk", "False", "id"],
  "name": "instIsEmptyFalse",
  "constType": "Definition"},
 {"references": [], "name": "PUnit.unit", "constType": "Other"},
 {"references":
  ["AddGroup",
   "LinearOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "SemilatticeInf.toPartialOrder",
   "Lattice.toSemilatticeInf",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "max_eq_left",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "LE.le.trans",
   "Iff.mpr",
   "neg_nonpos"],
  "name": "abs_of_nonneg",
  "constType": "Theorem"},
 {"references": ["LT.mk", "Nat", "Nat.lt"],
  "name": "instLTNat",
  "constType": "Definition"},
 {"references": ["SubNegMonoid", "SubNegMonoid.sub_eq_add_neg"],
  "name": "sub_eq_add_neg",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "PartialOrder",
   "ZeroLEOneClass",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddMonoidWithOne.toOne",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "LE.le",
   "LT.lt.trans_le",
   "Zero.toOfNat0",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "Nat",
   "instOfNatNat",
   "zero_lt_one",
   "one_le_two"],
  "name": "zero_lt_two",
  "constType": "Theorem"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.natAbs_mul_self.match_1",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.neg_neg.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Neg.neg",
   "Int.instNegInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Unit",
   "rfl",
   "Nat",
   "of_eq_true",
   "Int.subNatNat",
   "Nat.succ",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.subNatNat_self",
   "eq_self"],
  "name": "Int.add_left_neg",
  "constType": "Theorem"},
 {"references":
  ["AddCommSemigroup",
   "of_eq_true",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "Eq.trans",
   "AddSemigroup.toAdd",
   "AddCommSemigroup.toAddSemigroup",
   "True",
   "congr",
   "congrArg",
   "add_left_comm",
   "add_assoc",
   "eq_self"],
  "name": "add_add_add_comm",
  "constType": "Theorem"},
 {"references": ["Monoid"],
  "name": "Monoid.mul_one",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "Eq.ndrec",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "add_mul",
   "Distrib.rightDistribClass",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.add_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Add", "constType": "Other"},
 {"references":
  ["Nat",
   "Xor'.or",
   "Even",
   "instAddNat",
   "Odd",
   "Nat.semiring",
   "Nat.even_xor_odd"],
  "name": "Nat.even_or_odd",
  "constType": "Theorem"},
 {"references": [], "name": "Lean.SourceInfo.none", "constType": "Other"},
 {"references": ["Mod.mk", "Int", "Int.emod"],
  "name": "Int.instModInt_1",
  "constType": "Definition"},
 {"references": ["Ring"], "name": "Ring.zsmul_neg'", "constType": "Definition"},
 {"references": ["NonUnitalNonAssocCommRing"],
  "name": "NonUnitalNonAssocCommRing.mul_comm",
  "constType": "Definition"},
 {"references":
  ["Mul",
   "Zero",
   "NoZeroDivisors",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "mt",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Or",
   "NoZeroDivisors.eq_zero_or_eq_zero_of_mul_eq_zero",
   "Iff.mpr",
   "Not",
   "And",
   "not_or",
   "And.intro"],
  "name": "mul_ne_zero",
  "constType": "Theorem"},
 {"references": [], "name": "One.mk", "constType": "Other"},
 {"references": ["Semiring"],
  "name": "Semiring.mul_one",
  "constType": "Definition"},
 {"references": [], "name": "Or.inr", "constType": "Other"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.zpow",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocRing"],
  "name": "NonUnitalNonAssocRing.toMul",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Iff.intro",
   "Dvd.dvd",
   "Int",
   "Int.instDvdInt",
   "Nat.cast",
   "instNatCastInt",
   "Nat.instDvdNat",
   "Int.coe_nat_dvd.match_1",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Or.elim",
   "OfNat.ofNat",
   "instOfNatNat",
   "GT.gt",
   "instLTNat",
   "Nat.eq_zero_or_pos",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "Eq.mp",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Int.instRingInt",
   "congrFun",
   "Nat.cast_zero",
   "MulZeroClass.zero_mul",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.3",
   "StrictOrderedSemiring.to_charZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Int.linearOrderedCommRing",
   "Mathlib.Algebra.Divisibility.Basic._auxLemma.2",
   "Nat.monoid",
   "Exists.casesOn",
   "Exists",
   "Int.eq_ofNat_of_zero_le",
   "nonneg_of_mul_nonneg_right",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "Eq.symm",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.2",
   "OrderedCommSemiring.toOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Eq.mpr",
   "LT.lt",
   "Preorder.toLT",
   "id",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.7",
   "Int.instNontrivialInt",
   "Std.Classes.Order._auxLemma.4",
   "Exists.intro",
   "Eq.ndrec",
   "instMulNat",
   "Int.ofNat.inj",
   "Eq.refl",
   "Int.coe_nat_dvd.match_2",
   "Dvd.intro",
   "Int.instSemigroupInt",
   "Semigroup.toMul",
   "Int.ofNat_mul"],
  "name": "Int.coe_nat_dvd",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.one_pow"],
  "name": "Mathlib.Meta.NormNum.one_natPow",
  "constType": "Theorem"},
 {"references": [], "name": "Finset", "constType": "Other"},
 {"references": [], "name": "Decidable", "constType": "Other"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Eq",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "sq",
   "Int.instMulInt",
   "Int.natAbs_mul_self'"],
  "name": "Int.natAbs_sq",
  "constType": "Theorem"},
 {"references": ["Field"],
  "name": "Field.zpow_neg'",
  "constType": "Definition"},
 {"references":
  ["NonAssocSemiring",
   "Nat",
   "Eq.symm",
   "Nat.cast",
   "NonAssocSemiring.toNatCast",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Nat.cast_mul"],
  "name": "Mathlib.Data.Nat.Cast.Basic._auxLemma.1",
  "constType": "Theorem"},
 {"references": ["SubtractionMonoid"],
  "name": "SubtractionMonoid.neg_eq_of_add",
  "constType": "Definition"},
 {"references": [], "name": "LT", "constType": "Other"},
 {"references": [], "name": "MulOneClass", "constType": "Other"},
 {"references": [], "name": "PProd.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Bool",
   "Nat.below",
   "Nat.beq.match_1",
   "Unit",
   "Nat.zero",
   "Bool.true",
   "Bool.false",
   "Nat.succ",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.beq",
  "constType": "Definition"},
 {"references": ["Field"], "name": "Field.inv_zero", "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocSemiring.zero_mul",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_4",
  "constType": "Theorem"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.zpow_zero'",
  "constType": "Definition"},
 {"references": ["StrictOrderedRing"],
  "name": "StrictOrderedRing.add_le_add_left",
  "constType": "Definition"},
 {"references":
  ["Add",
   "Semigroup",
   "LeftDistribClass",
   "Semigroup.toMul",
   "Dvd.dvd",
   "semigroupDvd",
   "Dvd.elim",
   "HAdd.hAdd",
   "instHAdd",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Dvd.intro",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "left_distrib",
   "eq_self"],
  "name": "dvd_add",
  "constType": "Theorem"},
 {"references": ["LT"], "name": "LT.lt", "constType": "Definition"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.toOne",
  "constType": "Definition"},
 {"references":
  ["MonoidWithZero",
   "MulZeroOneClass.mk",
   "MulOneClass.mk",
   "Monoid.toOne",
   "MonoidWithZero.toMonoid",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Monoid.one_mul",
   "Monoid.mul_one",
   "MonoidWithZero.toZero",
   "MonoidWithZero.zero_mul",
   "MonoidWithZero.mul_zero"],
  "name": "MonoidWithZero.toMulZeroOneClass",
  "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Nat.rec",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congrArg",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "Nat.cast_zero",
   "add_zero",
   "AddMonoid.toAddZeroClass",
   "eq_self",
   "Nat.succ",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "congr",
   "Nat.cast_succ",
   "congrFun",
   "add_assoc"],
  "name": "Nat.cast_add",
  "constType": "Theorem"},
 {"references": ["Lattice"],
  "name": "Lattice.inf_le_left",
  "constType": "Definition"},
 {"references": ["Int", "Nat.gcd_comm", "Int.natAbs"],
  "name": "Int.gcd_comm",
  "constType": "Theorem"},
 {"references": [], "name": "Function.comp", "constType": "Definition"},
 {"references": [],
  "name": "CanonicallyOrderedCommSemiring.mk",
  "constType": "Other"},
 {"references": [], "name": "AddMonoidWithOne.mk", "constType": "Other"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "lt_irrefl.match_2",
   "False",
   "lt_irrefl.match_1",
   "And",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "le_not_le_of_lt"],
  "name": "lt_irrefl",
  "constType": "Theorem"},
 {"references": ["LinearOrderedCommMonoidWithZero"],
  "name": "LinearOrderedCommMonoidWithZero.toZero",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.neg_neg.match_1",
   "Eq",
   "Nat",
   "Int.natAbs",
   "Neg.neg",
   "Int.instNegInt",
   "Unit",
   "rfl",
   "OfNat.ofNat",
   "instOfNatInt",
   "Nat.cast",
   "instNatCastInt",
   "Nat.succ",
   "Int.negSucc"],
  "name": "Int.natAbs_neg",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedCommRing",
   "LinearOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "LinearOrderedCommSemiring.mk",
   "StrictOrderedCommSemiring.mk",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommRing.mul_comm",
   "LinearOrderedRing.toMin",
   "LinearOrderedRing.toMax",
   "LinearOrderedRing.toOrd",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_1",
   "LinearOrderedRing.decidableLE",
   "LinearOrderedRing.decidableEq",
   "LinearOrderedRing.decidableLT",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_2",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_3",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_4"],
  "name": "LinearOrderedCommRing.toLinearOrderedCommSemiring",
  "constType": "Definition"},
 {"references": ["AddGroupWithOne"],
  "name": "AddGroupWithOne.intCast_ofNat",
  "constType": "Definition"},
 {"references":
  ["Nat", "rfl", "Int", "IntCast.intCast", "IntCast.mk", "Int.negSucc"],
  "name": "Int.instCommRingInt.proof_9",
  "constType": "Theorem"},
 {"references": [], "name": "IsRightCancelMulZero.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Iff.intro",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Ne",
   "Nat.ne_of_gt",
   "Nat.pos_of_ne_zero"],
  "name": "Nat.pos_iff_ne_zero",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "OfNat.ofNat",
   "instOfNatInt",
   "Exists.intro",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HDiv.hDiv",
   "instHDiv",
   "Int.instDivInt_1",
   "Eq.symm",
   "Int.mul_ediv_cancel_of_emod_eq_zero"],
  "name": "Int.dvd_of_emod_eq_zero",
  "constType": "Theorem"},
 {"references":
  ["Add",
   "IsLeftCancelAdd",
   "PartialOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "CovariantClass.mk",
   "LT.lt",
   "Preorder.toLT",
   "LE.le.lt_of_ne",
   "CovariantClass.elim",
   "LT.lt.le",
   "Iff.mpr",
   "Ne",
   "add_ne_add_right",
   "LT.lt.ne"],
  "name": "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "of_eq_true",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "One.toOfNat1",
   "Monoid.toOne",
   "AddMonoidWithOne.toOne",
   "True",
   "congr",
   "congrArg",
   "congrFun",
   "Nat.cast_one",
   "one_pow",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.one_pow",
  "constType": "Theorem"},
 {"references": ["Int", "Int.neg.match_1", "Nat", "Nat.succ"],
  "name": "Int.natAbs",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Nat.commSemiring",
   "LinearOrder",
   "Nat.linearOrder",
   "LinearOrderedCommSemiring.mk",
   "StrictOrderedCommSemiring.mk",
   "StrictOrderedSemiring.mk",
   "CommSemiring.toSemiring",
   "PartialOrder.mk",
   "Preorder.mk",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "LT.mk",
   "Nat.lt",
   "Nat.linearOrderedCommSemiring.proof_1",
   "Nat.linearOrderedCommSemiring.proof_2",
   "Nat.linearOrderedCommSemiring.proof_3",
   "Nat.linearOrderedCommSemiring.proof_4",
   "Nat.add_le_add_left",
   "Nat.le_of_add_le_add_left",
   "Nat.linearOrderedCommSemiring.proof_5",
   "Nat.linearOrderedCommSemiring.proof_6",
   "Nat.mul_lt_mul_of_pos_left",
   "Nat.mul_lt_mul_of_pos_right",
   "CommSemiring.mul_comm",
   "LinearOrder.toMin",
   "LinearOrder.toMax",
   "LinearOrder.toOrd",
   "LinearOrder.le_total",
   "LinearOrder.decidableLE",
   "LinearOrder.decidableEq",
   "LinearOrder.decidableLT",
   "LinearOrder.min_def",
   "LinearOrder.max_def",
   "LinearOrder.compare_eq_compareOfLessAndEq"],
  "name": "Nat.linearOrderedCommSemiring",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Nat",
   "Nat.brecOn",
   "Nat.below",
   "Int.negOfNat.match_1",
   "Unit",
   "OfNat.ofNat",
   "instOfNatInt",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Int.pow",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.casesOn",
   "Eq",
   "Nat",
   "Int.natAbs",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "instMulNat",
   "Int.ofNat",
   "Eq.ndrec",
   "id",
   "of_eq_true",
   "eq_self",
   "Eq.symm",
   "Int.negSucc",
   "Eq.mpr",
   "Nat.succ",
   "congrFun",
   "Int.negOfNat",
   "congrArg",
   "Int.natAbs_negOfNat",
   "Eq.refl"],
  "name": "Int.natAbs_mul",
  "constType": "Theorem"},
 {"references": ["Mul.mk", "Nat", "Nat.mul"],
  "name": "instMulNat",
  "constType": "Definition"},
 {"references": [], "name": "DivInvMonoid", "constType": "Other"},
 {"references": ["lt_of_eq_of_lt"],
  "name": "Eq.trans_lt",
  "constType": "Theorem"},
 {"references":
  ["CommGroupWithZero",
   "GroupWithZero.mk",
   "MonoidWithZero.mk",
   "CommMonoid.toMonoid",
   "CommMonoidWithZero.toCommMonoid",
   "CommGroupWithZero.toCommMonoidWithZero",
   "CommMonoidWithZero.toZero",
   "CommMonoidWithZero.zero_mul",
   "CommMonoidWithZero.mul_zero",
   "CommGroupWithZero.toInv",
   "CommGroupWithZero.toDiv",
   "CommGroupWithZero.div_eq_mul_inv",
   "CommGroupWithZero.zpow",
   "CommGroupWithZero.zpow_zero'",
   "CommGroupWithZero.zpow_succ'",
   "CommGroupWithZero.zpow_neg'",
   "CommGroupWithZero.toNontrivial",
   "CommGroupWithZero.inv_zero",
   "CommGroupWithZero.mul_inv_cancel"],
  "name": "CommGroupWithZero.toGroupWithZero",
  "constType": "Definition"},
 {"references": [], "name": "False", "constType": "Other"},
 {"references":
  ["Nat",
   "AddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Mathlib.Meta.NormNum.IsNat.casesOn"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_raw_eq.match_1",
  "constType": "Definition"},
 {"references": ["outParam", "Membership"],
  "name": "Membership.mem",
  "constType": "Definition"},
 {"references": [], "name": "Distrib", "constType": "Other"},
 {"references": ["AddGroupWithOne", "Nat", "AddGroupWithOne.intCast_negSucc"],
  "name": "Int.cast_negSucc",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.toZero",
  "constType": "Definition"},
 {"references": [], "name": "SemilatticeSup", "constType": "Other"},
 {"references":
  ["Lean.Syntax.node",
   "Lean.SourceInfo.none",
   "Lean.Name.mkStr4",
   "Array.push",
   "Lean.Syntax",
   "Array.empty",
   "Lean.Name.mkStr1",
   "Lean.mkAtom"],
  "name": "_auto._@.Mathlib.Data.List.TFAE._hyg.546",
  "constType": "Definition"},
 {"references": ["SubtractionCommMonoid"],
  "name": "SubtractionCommMonoid.toSubtractionMonoid",
  "constType": "Definition"},
 {"references":
  ["LinearOrder",
   "instDistribLattice.match_1",
   "Or",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "SemilatticeSup.toPartialOrder",
   "Lattice.toSemilatticeSup",
   "Lattice.mk",
   "inferInstanceAs",
   "Lattice",
   "LinearOrder.toLattice",
   "Lattice.toInf",
   "Lattice.inf_le_left",
   "Lattice.inf_le_right",
   "Lattice.le_inf",
   "Inf.inf",
   "Sup.sup",
   "SemilatticeSup.toSup",
   "le_total",
   "inf_le_of_left_le",
   "Lattice.toSemilatticeInf",
   "sup_le_sup_left",
   "SemilatticeInf.toInf",
   "le_inf",
   "le_refl",
   "SemilatticeInf.toPartialOrder",
   "inf_le_of_right_le"],
  "name": "instDistribLattice.proof_1",
  "constType": "Theorem"},
 {"references": ["Left.neg_pos_iff"],
  "name": "neg_pos",
  "constType": "Theorem"},
 {"references": ["AddGroupWithOne"],
  "name": "AddGroupWithOne.toIntCast",
  "constType": "Definition"},
 {"references": [], "name": "Nat.le", "constType": "Other"},
 {"references":
  ["PartialOrder",
   "DecidableRel",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "dite",
   "Or",
   "LT.lt",
   "Preorder.toLT",
   "Eq",
   "Or.inr",
   "le_antisymm",
   "Not",
   "Or.inl",
   "lt_of_le_not_le"],
  "name": "Decidable.lt_or_eq_of_le",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "id",
   "Eq",
   "Int",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Int.negSucc",
   "Nat.cast",
   "instNatCastInt",
   "Eq.mpr",
   "Int.subNatNat",
   "Nat.succ",
   "instAddNat",
   "Eq.ndrec",
   "Eq.refl",
   "Int.add_comm",
   "Int.subNatNat_add_negSucc",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrArg",
   "Nat.succ_add",
   "Nat.add_comm",
   "eq_self"],
  "name": "Int.add_assoc.aux2",
  "constType": "Theorem"},
 {"references":
  ["List",
   "Nat",
   "List.brecOn",
   "Option",
   "List.below",
   "List.get!.match_1",
   "List.cons",
   "Option.some",
   "PProd.fst",
   "List.rec",
   "PUnit",
   "PProd",
   "Option.none"],
  "name": "List.get?",
  "constType": "Definition"},
 {"references": [], "name": "HEq.refl", "constType": "Other"},
 {"references": ["SubNegZeroMonoid"],
  "name": "SubNegZeroMonoid.toSubNegMonoid",
  "constType": "Definition"},
 {"references": ["SemigroupWithZero"],
  "name": "SemigroupWithZero.toSemigroup",
  "constType": "Definition"},
 {"references":
  ["DivisionMonoid",
   "IsUnit",
   "DivInvMonoid.toMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "Eq.mpr",
   "Iff",
   "Eq",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "id",
   "congrFun",
   "congrArg",
   "congr",
   "div_eq_mul_inv",
   "Units.mul_left_inj",
   "IsUnit.unit'",
   "InvOneClass.toInv",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "IsUnit.inv"],
  "name": "IsUnit.div_left_inj",
  "constType": "Theorem"},
 {"references": ["NonAssocRing"],
  "name": "NonAssocRing.toNonUnitalNonAssocRing",
  "constType": "Definition"},
 {"references": ["Ring", "Semiring.mul_one", "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_7",
  "constType": "Theorem"},
 {"references":
  ["MonoidWithZero",
   "NoZeroDivisors",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "MonoidWithZero.toZero",
   "Nat",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Nat.rec",
   "Nat.zero",
   "Eq.mpr",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "mul_one",
   "Monoid.toOne",
   "Eq.mp",
   "instOfNatNat",
   "pow_zero",
   "MulZeroClass.toZero",
   "MulZeroClass.mul_zero",
   "Nat.succ",
   "Or.casesOn",
   "Or",
   "Iff.mp",
   "mul_eq_zero",
   "Monoid.toMulOneClass",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "pow_succ"],
  "name": "pow_eq_zero",
  "constType": "Theorem"},
 {"references": [], "name": "CommGroupWithZero.mk", "constType": "Other"},
 {"references":
  ["Semiring.one_mul",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_7",
  "constType": "Theorem"},
 {"references": ["Sub"], "name": "Sub.sub", "constType": "Definition"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.toMonoid",
  "constType": "Definition"},
 {"references": ["maxOfLe", "Int", "Int.instLEInt", "Int.decLe"],
  "name": "Int.instMaxInt",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Semiring.toOne"],
  "name": "IsCoprime",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "SubtractionMonoid.mk",
   "AddGroup.toSubNegMonoid",
   "AddGroup.toSubtractionMonoid.proof_1",
   "AddGroup.toSubtractionMonoid.proof_2",
   "_private.Mathlib.Algebra.Group.Defs.0.neg_eq_of_add"],
  "name": "AddGroup.toSubtractionMonoid",
  "constType": "Definition"},
 {"references":
  ["Int",
   "LT.lt",
   "Int.instLTInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Iff.mpr",
   "Nat",
   "instLTNat",
   "instOfNatNat",
   "Int.natAbs",
   "Ne",
   "Int.natAbs_pos",
   "LT.lt.ne'",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing"],
  "name":
  "_private.Mathlib.Tactic.Positivity.Basic.0.Mathlib.Meta.Positivity.int_natAbs_pos",
  "constType": "Theorem"},
 {"references": [], "name": "Nat.AtLeastTwo", "constType": "Other"},
 {"references": [], "name": "CancelMonoidWithZero", "constType": "Other"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.toMul",
  "constType": "Definition"},
 {"references": [], "name": "Nontrivial", "constType": "Other"},
 {"references": [],
  "name": "CanonicallyOrderedAddCommMonoid",
  "constType": "Other"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.le_total",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "AddMonoid.zero_add",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid"],
  "name": "AddGroup.toAddCancelMonoid.proof_2",
  "constType": "Theorem"},
 {"references": ["Neg"], "name": "Neg.neg", "constType": "Definition"},
 {"references":
  ["CommRing",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_9",
  "constType": "Theorem"},
 {"references": [], "name": "OrderedAddCommMonoid.mk", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.ndrec",
   "of_eq_true",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "AddZeroClass.toZero",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "mul_add",
   "Distrib.leftDistribClass",
   "congrFun",
   "add_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.mul_add",
  "constType": "Theorem"},
 {"references": [], "name": "List.cons", "constType": "Other"},
 {"references": ["Monoid"],
  "name": "Monoid.toSemigroup",
  "constType": "Definition"},
 {"references": [], "name": "Option", "constType": "Other"},
 {"references":
  ["SubtractionMonoid",
   "SubNegMonoid",
   "SubtractionMonoid.toSubNegMonoid",
   "SubNegZeroMonoid.mk",
   "SubNegMonoid.mk",
   "SubNegMonoid.toAddMonoid",
   "SubNegMonoid.toNeg",
   "SubNegMonoid.toSub",
   "SubNegMonoid.sub_eq_add_neg",
   "SubNegMonoid.zsmul",
   "SubNegMonoid.zsmul_zero'",
   "SubNegMonoid.zsmul_succ'",
   "SubNegMonoid.zsmul_neg'",
   "SubtractionMonoid.toSubNegZeroMonoid.proof_1"],
  "name": "SubtractionMonoid.toSubNegZeroMonoid",
  "constType": "Definition"},
 {"references":
  ["Decidable", "Iff.intro", "Not", "Decidable.of_not_not", "not_not_intro"],
  "name": "Decidable.not_not",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.toStrictOrderedSemiring",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq",
   "Nat.succ",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.noConfusion",
   "False"],
  "name": "Nat.succ_ne_zero",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "AddCancelMonoid.mk",
   "AddLeftCancelMonoid.mk",
   "AddLeftCancelSemigroup.mk",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddGroup.toAddCancelMonoid.proof_1",
   "AddMonoid.toZero",
   "AddGroup.toAddCancelMonoid.proof_2",
   "AddGroup.toAddCancelMonoid.proof_3",
   "AddMonoid.nsmul",
   "AddGroup.toAddCancelMonoid.proof_4",
   "AddGroup.toAddCancelMonoid.proof_5",
   "AddGroup.toAddCancelMonoid.proof_6"],
  "name": "AddGroup.toAddCancelMonoid",
  "constType": "Definition"},
 {"references": [], "name": "StrictOrderedRing", "constType": "Other"},
 {"references":
  ["Eq",
   "Int",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.zero_ne_one.match_1",
   "False"],
  "name": "Int.zero_ne_one",
  "constType": "Theorem"},
 {"references":
  ["MulZeroClass",
   "Preorder",
   "PosMulStrictMono",
   "MulZeroClass.toMul",
   "MulZeroClass.toZero",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Eq.mp",
   "HMul.hMul",
   "instHMul",
   "congrFun",
   "congrArg",
   "MulZeroClass.mul_zero",
   "mul_lt_mul_of_pos_left"],
  "name": "Left.mul_pos",
  "constType": "Theorem"},
 {"references": ["Eq.refl"], "name": "rfl", "constType": "Definition"},
 {"references":
  ["NonAssocSemiring",
   "MulZeroOneClass.mk",
   "MulOneClass.mk",
   "NonAssocSemiring.toOne",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring.one_mul",
   "NonAssocSemiring.mul_one",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "NonAssocSemiring.toMulZeroOneClass",
  "constType": "Definition"},
 {"references": ["Nat", "OfNat.mk", "Int", "Int.ofNat"],
  "name": "instOfNatInt",
  "constType": "Definition"},
 {"references":
  ["NonUnitalCommRing",
   "NonUnitalCommSemiring.mk",
   "NonUnitalSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "NonUnitalRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalRing",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_1",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_2",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_3",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_4",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_5",
   "NonUnitalCommRing.toNonUnitalCommSemiring.proof_6",
   "NonUnitalCommRing.mul_comm"],
  "name": "NonUnitalCommRing.toNonUnitalCommSemiring",
  "constType": "Definition"},
 {"references":
  ["NonAssocSemiring",
   "Eq.trans",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "OfNat.ofNat",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "instNatAtLeastTwo",
   "Nat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "congrArg₂",
   "Eq.symm",
   "one_add_one_eq_two",
   "rfl",
   "right_distrib",
   "Distrib.rightDistribClass",
   "Eq.mpr",
   "Eq",
   "id",
   "Eq.ndrec",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "MulOneClass.toOne",
   "Eq.refl",
   "one_mul"],
  "name": "two_mul",
  "constType": "Theorem"},
 {"references": [], "name": "DivInvOneMonoid.mk", "constType": "Other"},
 {"references":
  ["AddCommGroup",
   "SubtractionMonoid",
   "AddGroup.toSubtractionMonoid",
   "AddCommGroup.toAddGroup",
   "SubtractionCommMonoid.mk",
   "SubtractionMonoid.mk",
   "AddGroup.toSubNegMonoid",
   "SubtractionMonoid.neg_neg",
   "SubtractionMonoid.neg_add_rev",
   "SubtractionMonoid.neg_eq_of_add",
   "AddCommGroup.add_comm"],
  "name": "AddCommGroup.toDivisionAddCommMonoid",
  "constType": "Definition"},
 {"references": [], "name": "IntCast", "constType": "Other"},
 {"references":
  ["LinearOrder",
   "Preorder",
   "StrictMono",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Eq",
   "Ordering.Compares",
   "Preorder.toLT",
   "Ordering.eq",
   "Iff.mp",
   "StrictMono.compares"],
  "name": "StrictMono.injective",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "CharZero",
   "Nat",
   "Function.Injective.eq_iff",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast_injective"],
  "name": "Nat.cast_inj",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Mathlib.Meta.NormNum.IsNat.to_isInt.match_1",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "of_eq_true",
   "Eq",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "Int",
   "instNatCastInt",
   "Eq.trans",
   "True",
   "congrArg",
   "Int.cast_ofNat",
   "eq_self"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_isInt",
  "constType": "Theorem"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.decidableEq",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.abs_eq_natAbs.match_1",
   "Eq",
   "Abs.abs",
   "Neg.toHasAbs",
   "Int.instNegInt",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "Int.instLinearOrderInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Nat",
   "abs_of_nonneg",
   "Int.instAddGroupInt",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "Int.ofNat_zero_le",
   "abs_of_nonpos",
   "Int.negSucc",
   "le_of_lt",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Int.negSucc_lt_zero"],
  "name": "Int.abs_eq_natAbs",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Nat",
   "Eq.trans",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "pow_succ",
   "Commute.self_pow"],
  "name": "pow_succ'",
  "constType": "Theorem"},
 {"references": [], "name": "DistribLattice.mk", "constType": "Other"},
 {"references": ["AddCommMagma", "AddCommMagma.add_comm"],
  "name": "add_comm",
  "constType": "Theorem"},
 {"references":
  ["Eq.mpr",
   "FermatLastTheoremFor",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "FermatLastTheoremWith",
   "Int",
   "Int.instSemiringInt",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "propext",
   "fermatLastTheoremFor_iff_int",
   "Ne",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "not_fermat_42",
   "Int.instMonoidInt",
   "Int.instAddInt",
   "Mathlib.Tactic.Ring.of_eq",
   "CommSemiring.toSemiring",
   "Int.instCommSemiringInt",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Nat.semiring",
   "Mathlib.Tactic.Ring.pow_add",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.one_mul",
   "Mathlib.Tactic.Ring.one_pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Mathlib.Meta.NormNum.IsNat.of_raw"],
  "name": "fermatLastTheoremFour",
  "constType": "Theorem"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.toInv",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "rfl",
   "NatCast.natCast",
   "NatCast.mk",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.commSemiring.proof_3",
  "constType": "Theorem"},
 {"references":
  ["StrictOrderedCommSemiring",
   "OrderedSemiring",
   "StrictOrderedSemiring.toOrderedSemiring",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "OrderedCommSemiring.mk",
   "OrderedSemiring.mk",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedCommSemiring.toOrderedCommSemiring.proof_1",
   "StrictOrderedCommSemiring.toOrderedCommSemiring.proof_2",
   "OrderedSemiring.mul_le_mul_of_nonneg_left",
   "OrderedSemiring.mul_le_mul_of_nonneg_right",
   "StrictOrderedCommSemiring.mul_comm"],
  "name": "StrictOrderedCommSemiring.toOrderedCommSemiring",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalNonAssocCommRing", "constType": "Other"},
 {"references":
  ["Int",
   "Int.add.match_1",
   "Nat",
   "Int.ofNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Int.subNatNat",
   "Nat.succ",
   "Int.negSucc"],
  "name": "Int.add",
  "constType": "Definition"},
 {"references": ["DivInvOneMonoid"],
  "name": "DivInvOneMonoid.inv_one",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "Int",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Int.negSucc",
   "Int.negOfNat",
   "Int.ofNat",
   "instMulNat",
   "Nat.succ",
   "Nat.zero",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm"],
  "name": "Int.negSucc_mul_negOfNat",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedRing",
   "StrictOrderedRing.add_le_add_left",
   "LinearOrderedRing.toStrictOrderedRing"],
  "name": "LinearOrderedRing.toLinearOrderedSemiring.proof_1",
  "constType": "Theorem"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.mul_one",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Semiring",
   "Int",
   "CommSemiring.toSemiring",
   "Int.instCommSemiringInt"],
  "name": "Int.instSemiringInt",
  "constType": "Definition"},
 {"references": ["inferInstance", "CommSemiring", "Nat", "Nat.commSemiring"],
  "name": "Mathlib.Tactic.Ring.instCommSemiringNat",
  "constType": "Definition"},
 {"references": ["AddGroup"],
  "name": "AddGroup.toSubNegMonoid",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "dite",
   "Iff",
   "Decidable.isTrue",
   "instDecidableIff.proof_1",
   "Not",
   "Decidable.isFalse",
   "instDecidableIff.proof_2",
   "instDecidableIff.proof_3",
   "instDecidableIff.proof_4"],
  "name": "instDecidableIff",
  "constType": "Definition"},
 {"references": [], "name": "MulZeroClass", "constType": "Other"},
 {"references":
  ["LinearOrderedRing",
   "StrictOrderedRing.toNontrivial",
   "LinearOrderedRing.toStrictOrderedRing"],
  "name": "LinearOrderedRing.toLinearOrderedSemiring.proof_2",
  "constType": "Theorem"},
 {"references": [], "name": "CommSemigroup.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.below",
   "Nat.succ_add.match_1",
   "rfl",
   "OfNat.ofNat",
   "instOfNatNat",
   "congrArg",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.succ_add",
  "constType": "Theorem"},
 {"references":
  ["AddCommMonoid",
   "AddCommSemigroup.mk",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "AddCommMonoid.add_comm"],
  "name": "AddCommMonoid.toAddCommSemigroup",
  "constType": "Definition"},
 {"references": ["CommMonoid"],
  "name": "CommMonoid.toMonoid",
  "constType": "Definition"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.zpow",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toMin",
  "constType": "Definition"},
 {"references": ["Ring"], "name": "Ring.toSub", "constType": "Definition"},
 {"references": [], "name": "outParam", "constType": "Definition"},
 {"references": [], "name": "OrderedAddCommMonoid", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "inferInstanceAs"],
  "name": "CommSemiring.toCommMonoidWithZero.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Int", "Int.NonNeg", "HSub.hSub", "instHSub", "Int.instSubInt"],
  "name": "Int.le",
  "constType": "Definition"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "And.right",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "le_not_le_of_lt"],
  "name": "not_le_of_lt",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Ring",
   "Mathlib.Meta.NormNum.IsInt",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq.match_1",
   "Eq",
   "Int.rawCast",
   "Int.cast",
   "Ring.toIntCast"],
  "name": "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.below",
   "Nat.succ_add.match_1",
   "Eq.symm",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero_add",
   "Nat.succ",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.succ_add",
   "congrArg",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.add_comm",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Int",
   "Or.casesOn",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Neg.neg",
   "Int.instNegInt",
   "Or",
   "Iff",
   "Dvd.dvd",
   "Int.instDvdInt",
   "Nat.instDvdNat",
   "Int.natAbs_eq",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "of_eq_true",
   "Eq.trans",
   "Abs.abs",
   "Neg.toHasAbs",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "Int.instLinearOrderInt",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Int.instAddGroupInt",
   "True",
   "congr",
   "congrArg",
   "Int.coe_natAbs",
   "Mathlib.Data.Int.Dvd.Basic._auxLemma.2",
   "abs_abs",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "iff_self",
   "semigroupDvd",
   "Int.instSemigroupInt",
   "Mathlib.Algebra.Ring.Divisibility.Basic._auxLemma.2",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "Int.natAbs_neg"],
  "name": "Int.coe_nat_dvd_left",
  "constType": "Theorem"},
 {"references":
  ["Finset",
   "FunLike.coe",
   "AddMonoidHom",
   "Multiset",
   "Nat",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Multiset.instCanonicallyOrderedAddCommMonoidMultiset",
   "Nat.addMonoid",
   "AddHomClass.toFunLike",
   "AddZeroClass.toAdd",
   "AddMonoidHomClass.toAddHomClass",
   "AddMonoidHom.addMonoidHomClass",
   "Multiset.card",
   "Finset.val"],
  "name": "Finset.card",
  "constType": "Definition"},
 {"references": ["AddZeroClass", "AddZeroClass.add_zero"],
  "name": "add_zero",
  "constType": "Theorem"},
 {"references": [], "name": "Zero.mk", "constType": "Other"},
 {"references": [], "name": "IsDomain.mk", "constType": "Other"},
 {"references": ["CommMagma", "mul_comm"],
  "name": "Commute.all",
  "constType": "Theorem"},
 {"references": [], "name": "Nat.rec", "constType": "Other"},
 {"references": ["DistribLattice"],
  "name": "DistribLattice.toLattice",
  "constType": "Definition"},
 {"references": [], "name": "MulZeroClass.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "Int",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Int.negOfNat",
   "Nat.cast",
   "instNatCastInt",
   "instMulNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.mul_comm",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.ofNat_mul_negOfNat",
   "Nat.mul_comm",
   "eq_self"],
  "name": "Int.negOfNat_mul_ofNat",
  "constType": "Theorem"},
 {"references": [], "name": "AddMonoid.mk", "constType": "Other"},
 {"references":
  ["CancelMonoidWithZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "CancelMonoidWithZero.toMonoidWithZero",
   "Function.Injective.eq_iff",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "mul_right_injective₀",
   "IsCancelMulZero.toIsLeftCancelMulZero",
   "CancelMonoidWithZero.toIsCancelMulZero"],
  "name": "mul_right_inj'",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm"],
  "name": "Mathlib.Tactic.Ring.add_congr",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.le_mul_self.match_1",
   "LE.le",
   "instLENat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Unit",
   "le_rfl",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "OfNat.ofNat",
   "instOfNatNat",
   "of_eq_true",
   "Preorder.toLE",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "Eq.trans",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "AddMonoid.toAddZeroClass",
   "Nat.addMonoid",
   "True",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "Mathlib.Algebra.Order.Ring.Lemmas._auxLemma.8",
   "LinearOrderedCommMonoidWithZero.toZero",
   "Nat.linearOrderedCommMonoidWithZero",
   "OrderedSemiring.toPosMulMono",
   "Nat.orderedSemiring",
   "PosMulStrictMono.toPosMulReflectLE",
   "Nat.linearOrder",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "GT.gt",
   "Preorder.toLT",
   "Or",
   "LT.lt",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "Nat.canonicallyOrderedCommSemiring",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "Std.Classes.Order._auxLemma.4",
   "Mathlib.Algebra.Order.Monoid.Canonical.Defs._auxLemma.15",
   "congrArg",
   "CanonicallyOrderedCommSemiring.toOne",
   "Mathlib.Algebra.Order.ZeroLEOne._auxLemma.2",
   "OrderedSemiring.zeroLEOneClass",
   "NeZero.succ",
   "Nat.zero",
   "or_true",
   "Mathlib.Algebra.Order.Monoid.Lemmas._auxLemma.17",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "AddZeroClass.toAdd",
   "IsCancelAdd.toIsRightCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddCancelCommMonoid.toAddCancelMonoid",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "Mathlib.Algebra.Order.Monoid.Canonical.Defs._auxLemma.7"],
  "name": "Nat.le_mul_self",
  "constType": "Theorem"},
 {"references": ["Ring"],
  "name": "Ring.intCast_negSucc",
  "constType": "Definition"},
 {"references":
  ["Nontrivial",
   "Nat",
   "Nat.nontrivial",
   "OrderBot",
   "instLENat",
   "Nat.orderBot",
   "OrderedAddCommMonoid",
   "inferInstance",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Nat.orderedSemiring",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring",
   "CommSemiring",
   "Nat.commSemiring",
   "CanonicallyOrderedCommSemiring.mk",
   "CanonicallyOrderedAddCommMonoid.mk",
   "OrderedAddCommMonoid.mk",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.add_le_add_left",
   "OrderBot.mk",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderBot.toBot",
   "OrderBot.bot_le",
   "Nat.canonicallyOrderedCommSemiring.proof_1",
   "Nat.le_add_right",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Nat.canonicallyOrderedCommSemiring.proof_2",
   "Nat.canonicallyOrderedCommSemiring.proof_3",
   "Nat.canonicallyOrderedCommSemiring.proof_4",
   "Nat.canonicallyOrderedCommSemiring.proof_5",
   "Nat.canonicallyOrderedCommSemiring.proof_6",
   "Semiring.toOne",
   "Nat.canonicallyOrderedCommSemiring.proof_7",
   "Nat.canonicallyOrderedCommSemiring.proof_8",
   "Semiring.toNatCast",
   "Nat.canonicallyOrderedCommSemiring.proof_9",
   "Nat.canonicallyOrderedCommSemiring.proof_10",
   "Semiring.npow",
   "Nat.canonicallyOrderedCommSemiring.proof_11",
   "Nat.canonicallyOrderedCommSemiring.proof_12",
   "CommSemiring.mul_comm",
   "Nat.eq_zero_of_mul_eq_zero"],
  "name": "Nat.canonicallyOrderedCommSemiring",
  "constType": "Definition"},
 {"references":
  ["Int",
   "_private.Init.Data.Int.Basic.0.Int.decNonneg",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "OfNat.ofNat",
   "instOfNatInt"],
  "name": "Int.decLt",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Eq.rec",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq",
   "Int.add_zero",
   "Int.add_comm"],
  "name": "Int.zero_add",
  "constType": "Theorem"},
 {"references": ["propext", "Or", "Iff.intro", "or_self.match_1", "Or.inl"],
  "name": "or_self",
  "constType": "Theorem"},
 {"references": ["OrderedAddCommMonoid"],
  "name": "OrderedAddCommMonoid.toPartialOrder",
  "constType": "Definition"},
 {"references": [], "name": "Mul", "constType": "Other"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.toNontrivial",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.Prime",
   "Irreducible.ne_zero",
   "Semiring.toMonoidWithZero",
   "Nat.semiring"],
  "name": "Nat.Prime.ne_zero",
  "constType": "Theorem"},
 {"references": [], "name": "Ring", "constType": "Other"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.decidableLE",
  "constType": "Definition"},
 {"references": ["Decidable.not_not", "Classical.propDecidable"],
  "name": "Classical.not_not",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Exists.intro",
   "Nat",
   "Or",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Neg.neg",
   "Int.instNegInt",
   "Int.natAbs",
   "Int.natAbs_eq"],
  "name": "Int.eq_nat_or_neg",
  "constType": "Theorem"},
 {"references": ["NonUnitalRing"],
  "name": "NonUnitalRing.toNonUnitalNonAssocRing",
  "constType": "Definition"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.add_le_add_left",
  "constType": "Definition"},
 {"references": [], "name": "OfNat.mk", "constType": "Other"},
 {"references": [], "name": "SubNegZeroMonoid", "constType": "Other"},
 {"references": [], "name": "NonUnitalSemiring", "constType": "Other"},
 {"references": ["Semiring"],
  "name": "Semiring.natCast_succ",
  "constType": "Definition"},
 {"references": [], "name": "IsLeftCancelAdd", "constType": "Other"},
 {"references":
  ["Mul", "Add", "LeftDistribClass", "LeftDistribClass.left_distrib"],
  "name": "left_distrib",
  "constType": "Theorem"},
 {"references": ["LT", "Eq", "LT.lt", "Eq.ndrec"],
  "name": "lt_of_eq_of_lt",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Or.casesOn",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "Or",
   "Eq",
   "Nat.lt_or_ge",
   "Int",
   "Int.subNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "Or.inl",
   "Eq.mpr",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "id",
   "congrArg",
   "Eq.trans",
   "Int.negSucc",
   "Nat.pred",
   "Int.subNatNat_of_lt",
   "Nat.succ",
   "Nat.succ_pred_eq_of_pos",
   "Nat.sub_pos_of_lt",
   "Eq.rec",
   "Eq.refl",
   "Eq.ndrec",
   "Eq.symm",
   "Nat.sub_add_cancel",
   "Nat.le_of_lt",
   "Int.subNatNat_add_add",
   "Or.inr",
   "of_eq_true",
   "True",
   "congr",
   "Int.subNatNat_of_le",
   "Nat.le_trans",
   "Nat.le_add_left",
   "Nat.add_sub_assoc",
   "eq_self"],
  "name": "Int.subNatNat_add",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "LE.le",
   "Int.instLEInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "OfNat.ofNat",
   "instOfNatInt"],
  "name": "Int.lt",
  "constType": "Definition"},
 {"references": ["InvOneClass"],
  "name": "InvOneClass.toOne",
  "constType": "Definition"},
 {"references": ["Div.mk", "Rat", "Rat.div"],
  "name": "Rat.instDivRat",
  "constType": "Definition"},
 {"references": ["Ne", "Eq", "Eq.symm"],
  "name": "Ne.symm",
  "constType": "Theorem"},
 {"references": [], "name": "AddZeroClass.mk", "constType": "Other"},
 {"references":
  ["MulOneClass",
   "HasDistribNeg",
   "MulOneClass.toMul",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "OfNat.ofNat",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "neg_mul",
   "one_mul",
   "eq_self"],
  "name": "neg_one_mul",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "LT.lt",
   "Int.instLTInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.mul_pos.match_1",
   "Exists",
   "Nat",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Int.eq_succ_of_zero_lt",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "instMulNat",
   "Eq.symm",
   "Int.ofNat_mul",
   "Int.ofNat_succ_pos",
   "Nat.add",
   "Nat.mul"],
  "name": "Int.mul_pos",
  "constType": "Theorem"},
 {"references": [], "name": "LinearOrder", "constType": "Other"},
 {"references": ["Neg", "Sup", "Abs.mk", "Sup.sup", "Neg.neg"],
  "name": "Neg.toHasAbs",
  "constType": "Definition"},
 {"references": [], "name": "AddCommGroup.mk", "constType": "Other"},
 {"references": [], "name": "GroupWithZero.mk", "constType": "Other"},
 {"references":
  ["StrictOrderedSemiring",
   "mul_le_mul_of_nonneg_left",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OrderedSemiring.toPosMulMono",
   "StrictOrderedSemiring.toOrderedSemiring'",
   "Classical.decRel",
   "LE.le",
   "Preorder.toLE"],
  "name": "StrictOrderedSemiring.toOrderedSemiring.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "NeZero", "constType": "Other"},
 {"references":
  ["MulOneClass",
   "HasDistribNeg",
   "MulOneClass.toMul",
   "SemiconjBy.neg_one_left"],
  "name": "Commute.neg_one_left",
  "constType": "Theorem"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.zero_mul",
  "constType": "Definition"},
 {"references":
  ["AddMonoid",
   "AddZeroClass.mk",
   "AddMonoid.toZero",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoid.zero_add",
   "AddMonoid.add_zero"],
  "name": "AddMonoid.toAddZeroClass",
  "constType": "Definition"},
 {"references": ["Array", "Array.mk", "List.concat", "Array.data"],
  "name": "Array.push",
  "constType": "Definition"},
 {"references":
  ["OrderedSemiring",
   "NoZeroDivisors",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Ne",
   "mul_ne_zero",
   "ne_of_gt"],
  "name":
  "_private.Mathlib.Tactic.Positivity.Basic.0.Mathlib.Meta.Positivity.mul_ne_zero_of_pos_of_ne_zero",
  "constType": "Theorem"},
 {"references": ["CommRing", "Ring.zsmul_neg'", "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_4",
  "constType": "Theorem"},
 {"references": ["CancelCommMonoidWithZero"],
  "name": "CancelCommMonoidWithZero.toCommMonoidWithZero",
  "constType": "Definition"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.zero_le_one",
  "constType": "Definition"},
 {"references": ["lt_asymm"], "name": "LT.lt.not_lt", "constType": "Theorem"},
 {"references": [], "name": "Int", "constType": "Other"},
 {"references":
  ["Field",
   "Rat",
   "Rat.field",
   "LinearOrder",
   "Rat.linearOrder",
   "Semiring",
   "Rat.semiring",
   "LinearOrderedField.mk",
   "LinearOrderedCommRing.mk",
   "LinearOrderedRing.mk",
   "StrictOrderedRing.mk",
   "CommRing.toRing",
   "Field.toCommRing",
   "LinearOrder.toPartialOrder",
   "Rat.instLinearOrderedFieldRat.proof_1",
   "Field.toNontrivial",
   "Rat.instLinearOrderedFieldRat.proof_2",
   "Rat.instLinearOrderedFieldRat.proof_3",
   "LinearOrder.toMin",
   "LinearOrder.toMax",
   "LinearOrder.toOrd",
   "LinearOrder.le_total",
   "LinearOrder.decidableLE",
   "LinearOrder.decidableEq",
   "LinearOrder.decidableLT",
   "LinearOrder.min_def",
   "LinearOrder.max_def",
   "LinearOrder.compare_eq_compareOfLessAndEq",
   "Rat.instLinearOrderedFieldRat.proof_4",
   "Field.toInv",
   "Field.toDiv",
   "Field.div_eq_mul_inv",
   "Field.zpow",
   "Field.zpow_zero'",
   "Field.zpow_succ'",
   "Field.zpow_neg'",
   "Field.toRatCast",
   "Field.mul_inv_cancel",
   "Field.inv_zero",
   "Field.ratCast_mk",
   "Field.qsmul",
   "Field.qsmul_eq_mul'"],
  "name": "Rat.instLinearOrderedFieldRat",
  "constType": "Definition"},
 {"references": [], "name": "LinearOrderedRing.mk", "constType": "Other"},
 {"references": ["MonoidWithZero"],
  "name": "MonoidWithZero.mul_zero",
  "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "CharZero",
   "Nat",
   "propext",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Nat.cast_inj"],
  "name": "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
  "constType": "Theorem"},
 {"references": ["IsEmpty", "iff_true_intro", "isEmptyElim"],
  "name": "IsEmpty.forall_iff",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedCommRing",
   "LinearOrderedRing.compare_eq_compareOfLessAndEq",
   "LinearOrderedCommRing.toLinearOrderedRing"],
  "name": "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_4",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "HasDistribNeg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "of_eq_true",
   "Eq",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "HMul.hMul",
   "instHMul",
   "True",
   "congr",
   "congrArg",
   "sq",
   "mul_neg",
   "neg_mul",
   "neg_neg",
   "eq_self"],
  "name": "neg_sq",
  "constType": "Theorem"},
 {"references":
  ["MonoidWithZero",
   "Nat",
   "Ne",
   "OfNat.ofNat",
   "instOfNatNat",
   "zero_pow'.match_1",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "absurd",
   "rfl",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.mpr",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "pow_succ",
   "MulZeroClass.zero_mul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass"],
  "name": "zero_pow'",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "of_eq_true",
   "Iff",
   "Not",
   "Eq",
   "Int",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Int.instRingInt",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.3",
   "StrictOrderedSemiring.to_charZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Int.linearOrderedCommRing",
   "iff_self"],
  "name": "Int.coe_nat_ne_zero",
  "constType": "Theorem"},
 {"references": [], "name": "PUnit", "constType": "Other"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.mpr",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Nat.monoid",
   "One.toOfNat1",
   "Monoid.toOne",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "one_pow",
   "Nat.pow_lt_pow_of_lt_left"],
  "name": "Nat.one_lt_pow",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Int.natAbs_mul_self.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Nat",
   "rfl",
   "Int.ofNat",
   "Int.negSucc"],
  "name": "Int.add_zero",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Iff",
   "LT.lt",
   "Int.instLTInt",
   "And",
   "LE.le",
   "Int.instLEInt",
   "Not",
   "Ne",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "propext",
   "Int.lt_iff_le_and_ne",
   "Iff.intro",
   "Int.lt_iff_le_and_ne.match_1",
   "And.intro",
   "Not.imp",
   "Int.le_antisymm",
   "Int.lt_iff_le_not_le.match_1",
   "Int.le_refl"],
  "name": "Int.lt_iff_le_not_le",
  "constType": "Theorem"},
 {"references": ["Field"],
  "name": "Field.toRatCast",
  "constType": "Definition"},
 {"references":
  ["AddGroupWithOne",
   "AddGroup.mk",
   "SubNegMonoid.mk",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "AddGroupWithOne.toNeg",
   "AddGroupWithOne.toSub",
   "AddGroupWithOne.sub_eq_add_neg",
   "AddGroupWithOne.zsmul",
   "AddGroupWithOne.zsmul_zero'",
   "AddGroupWithOne.zsmul_succ'",
   "AddGroupWithOne.zsmul_neg'",
   "AddGroupWithOne.add_left_neg"],
  "name": "AddGroupWithOne.toAddGroup",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Eq.mpr",
   "Eq",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.refl",
   "pow_succ",
   "One.toOfNat1",
   "Monoid.toOne",
   "pow_zero",
   "MulOneClass.toOne",
   "mul_one"],
  "name": "pow_one",
  "constType": "Theorem"},
 {"references": [], "name": "CommRing.mk", "constType": "Other"},
 {"references":
  ["Ring",
   "NonUnitalNonAssocSemiring.right_distrib",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_3",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "rfl",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.pow_zero",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "HasDistribNeg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Nat",
   "Eq.rec",
   "HMul.hMul",
   "instHMul",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "OfNat.ofNat",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Monoid.toOne",
   "Commute.mul_pow",
   "Commute.neg_one_left",
   "neg_one_mul"],
  "name": "neg_pow",
  "constType": "Theorem"},
 {"references":
  ["NonAssocSemiring",
   "AddCommMonoidWithOne.mk",
   "AddMonoidWithOne.mk",
   "NonAssocSemiring.toNatCast",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "NonAssocSemiring.toOne",
   "NonAssocSemiring.natCast_zero",
   "NonAssocSemiring.natCast_succ",
   "AddCommMonoid.add_comm"],
  "name": "NonAssocSemiring.toAddCommMonoidWithOne",
  "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocRing",
   "HasDistribNeg.mk",
   "NonUnitalNonAssocRing.toMul",
   "InvolutiveNeg.mk",
   "Neg.mk",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "NonUnitalNonAssocRing.toHasDistribNeg.proof_1",
   "NonUnitalNonAssocRing.toHasDistribNeg.proof_2",
   "NonUnitalNonAssocRing.toHasDistribNeg.proof_3"],
  "name": "NonUnitalNonAssocRing.toHasDistribNeg",
  "constType": "Definition"},
 {"references":
  ["CommGroupWithZero.mk",
   "Rat",
   "CommMonoidWithZero.mk",
   "CommRing.toCommMonoid",
   "Rat.commRing",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "CommRing.toCommSemiring",
   "Rat.commGroupWithZero.proof_1",
   "Rat.commGroupWithZero.proof_2",
   "Rat.instInvRat",
   "Rat.instDivRat",
   "Rat.commGroupWithZero.proof_3",
   "zpowRec",
   "Monoid.toOne",
   "CommMonoid.toMonoid",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Rat.commGroupWithZero.proof_4",
   "Rat.commGroupWithZero.proof_5",
   "Rat.commGroupWithZero.proof_6",
   "Rat.commGroupWithZero.proof_7",
   "Rat.commGroupWithZero.proof_8",
   "Rat.mul_inv_cancel"],
  "name": "Rat.commGroupWithZero",
  "constType": "Definition"},
 {"references": ["Semiring"],
  "name": "Semiring.toNonUnitalSemiring",
  "constType": "Definition"},
 {"references":
  ["Zero",
   "OfNat",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "NeZero",
   "NeZero.ne"],
  "name": "two_ne_zero",
  "constType": "Theorem"},
 {"references": ["SubtractionMonoid", "SubtractionMonoid.neg_add_rev"],
  "name": "neg_add_rev",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "PartialOrder",
   "ZeroLEOneClass",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddMonoidWithOne.toOne",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "LE.le",
   "eq_true",
   "LT.lt",
   "Preorder.toLT",
   "Zero.toOfNat0",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "Nat",
   "instOfNatNat",
   "zero_lt_two"],
  "name": "Mathlib.Algebra.Order.Monoid.NatCast._auxLemma.1",
  "constType": "Theorem"},
 {"references":
  ["eq_true", "List.TFAE", "List.cons", "List.nil", "List.tfae_singleton"],
  "name": "Mathlib.Data.List.TFAE._auxLemma.1",
  "constType": "Theorem"},
 {"references": ["mul_sub_left_distrib"],
  "name": "mul_sub",
  "constType": "Theorem"},
 {"references": ["CommSemigroup"],
  "name": "CommSemigroup.toSemigroup",
  "constType": "Definition"},
 {"references": ["Not"], "name": "mt", "constType": "Theorem"},
 {"references": [],
  "name": "NonUnitalNonAssocCommRing.mk",
  "constType": "Other"},
 {"references":
  ["DivisionCommMonoid",
   "of_eq_true",
   "Eq",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toMonoid",
   "Eq.trans",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "CommMonoid.toCommSemigroup",
   "DivisionCommMonoid.toCommMonoid",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "True",
   "congr",
   "congrArg",
   "div_eq_mul_inv",
   "mul_inv_rev",
   "mul_comm",
   "mul_assoc",
   "mul_left_comm",
   "eq_self"],
  "name": "mul_div_mul_comm",
  "constType": "Theorem"},
 {"references": ["Add", "IsCancelAdd"],
  "name": "IsCancelAdd.toIsLeftCancelAdd",
  "constType": "Definition"},
 {"references": ["AddMonoidWithOne", "Nat", "Mathlib.Meta.NormNum.IsNat"],
  "name": "Mathlib.Meta.NormNum.IsNat.out",
  "constType": "Definition"},
 {"references":
  ["MonoidWithZero",
   "Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "zero_pow.match_1",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.mpr",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "pow_succ",
   "MulZeroClass.toZero",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "MulZeroClass.toMul",
   "MulZeroClass.zero_mul"],
  "name": "zero_pow",
  "constType": "Theorem"},
 {"references":
  ["MulZeroClass",
   "Eq",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "Eq.rec",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "MulZeroClass.mul_zero",
   "Eq.symm"],
  "name": "mul_eq_zero_of_right",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "CommMonoid",
   "inferInstanceAs",
   "CommSemiring.toCommMonoid",
   "CommMonoidWithZero.mk",
   "CommMonoid.mk",
   "CommMonoid.toMonoid",
   "CommMonoid.mul_comm",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "CommSemiring.toCommMonoidWithZero.proof_1",
   "CommSemiring.toCommMonoidWithZero.proof_2"],
  "name": "CommSemiring.toCommMonoidWithZero",
  "constType": "Definition"},
 {"references": ["Nat", "OfNat.mk"],
  "name": "instOfNatNat",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "Int",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.mul",
   "Int.cast",
   "Ring.toIntCast",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Mathlib.Meta.NormNum.IsInt.casesOn",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.isInt_mul.match_1",
  "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocSemiring.right_distrib",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_3",
  "constType": "Theorem"},
 {"references":
  ["StrictOrderedSemiring",
   "CovariantClass.mk",
   "Subtype",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Subtype.val",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_right",
   "Subtype.prop"],
  "name": "StrictOrderedSemiring.toMulPosStrictMono",
  "constType": "Definition"},
 {"references": [], "name": "SubtractionMonoid.mk", "constType": "Other"},
 {"references": [], "name": "AddLeftCancelSemigroup.mk", "constType": "Other"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.succ_add.match_1",
  "constType": "Definition"},
 {"references": [], "name": "SubtractionMonoid", "constType": "Other"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.mul_comm",
   "Int.mul_emod_left"],
  "name": "Int.mul_emod_right",
  "constType": "Theorem"},
 {"references": ["Rat", "Nat.pos_of_ne_zero", "Rat.den", "Rat.den_nz"],
  "name": "Rat.den_pos",
  "constType": "Theorem"},
 {"references":
  ["MulZeroClass",
   "Eq",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "Eq.rec",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "MulZeroClass.zero_mul",
   "Eq.symm"],
  "name": "mul_eq_zero_of_left",
  "constType": "Theorem"},
 {"references": [], "name": "LinearOrderedCommMonoid.mk", "constType": "Other"},
 {"references": ["Eq", "True", "Eq.rec", "trivial", "Eq.symm"],
  "name": "of_eq_true",
  "constType": "Theorem"},
 {"references": [], "name": "True.intro", "constType": "Other"},
 {"references": ["Or", "Not", "Or.elim", "absurd", "id"],
  "name": "Or.resolve_left",
  "constType": "Theorem"},
 {"references": [], "name": "List.Chain.cons", "constType": "Other"},
 {"references": [], "name": "SubNegMonoid.mk", "constType": "Other"},
 {"references": ["MulZeroOneClass"],
  "name": "MulZeroOneClass.toZero",
  "constType": "Definition"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.inv_eq_of_mul",
  "constType": "Definition"},
 {"references": [], "name": "Distrib.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Rat",
   "Eq.refl",
   "zpowRec",
   "Monoid.toOne",
   "CommMonoid.toMonoid",
   "CommRing.toCommMonoid",
   "Rat.commRing",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Rat.instInvRat",
   "Int.negSucc"],
  "name": "Rat.commGroupWithZero.proof_6",
  "constType": "Theorem"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.rec"],
  "name": "Int.casesOn",
  "constType": "Definition"},
 {"references": [], "name": "Add.mk", "constType": "Other"},
 {"references":
  ["AddMonoidWithOne",
   "Eq.mpr",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "id",
   "Eq.ndrec",
   "Nat.succ",
   "Eq.refl",
   "Nat.cast_succ",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "Nat.cast_zero",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddZeroClass.toZero",
   "zero_add"],
  "name": "Nat.cast_one",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.rec"], "name": "Eq.trans", "constType": "Theorem"},
 {"references": ["DivisionMonoid", "DivisionMonoid.mul_inv_rev"],
  "name": "mul_inv_rev",
  "constType": "Theorem"},
 {"references":
  ["LinearOrder.mk",
   "Rat",
   "PartialOrder.mk",
   "Preorder.mk",
   "Rat.instLERat",
   "Rat.instLTRat",
   "Rat.le_refl",
   "Rat.le_trans",
   "Rat.linearOrder.proof_1",
   "Rat.le_antisymm",
   "Min.mk",
   "ite",
   "LE.le",
   "inferInstance",
   "Decidable",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Eq.mpr",
   "Iff",
   "LT.lt",
   "And",
   "Not",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "propext",
   "Rat.not_le",
   "and_iff_right_of_imp",
   "Or.resolve_left",
   "Rat.le_total",
   "Iff.rfl",
   "Rat.instDecidableLeRatInstLERat",
   "Max.mk",
   "Ord.mk",
   "compareOfLessAndEq",
   "decidableLTOfDecidableLE",
   "decidableEqOfDecidableLE",
   "Rat.linearOrder.proof_2",
   "Rat.linearOrder.proof_3",
   "Rat.linearOrder.proof_4"],
  "name": "Rat.linearOrder",
  "constType": "Definition"},
 {"references": [], "name": "HEq.rec", "constType": "Other"},
 {"references": [], "name": "LinearOrder.mk", "constType": "Other"},
 {"references":
  ["NonAssocRing",
   "NoZeroDivisors",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "MulZeroOneClass.toZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "NonAssocRing.toNonAssocSemiring",
   "CharZero",
   "AddGroupWithOne.toAddMonoidWithOne",
   "AddCommGroupWithOne.toAddGroupWithOne",
   "NonAssocRing.toAddCommGroupWithOne",
   "propext",
   "Eq",
   "Neg.neg",
   "AddGroupWithOne.toNeg",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "neg_eq_self_iff"],
  "name": "Mathlib.Algebra.CharZero.Lemmas._auxLemma.9",
  "constType": "Theorem"},
 {"references": ["Int.decEq"],
  "name": "Int.instDecidableEqInt",
  "constType": "Definition"},
 {"references":
  ["Nontrivial.mk",
   "Nat",
   "Exists.intro",
   "Exists",
   "Ne",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero_ne_one"],
  "name": "Nat.nontrivial",
  "constType": "Definition"},
 {"references":
  ["Inhabited.mk", "Int", "Int.ofNat", "OfNat.ofNat", "Nat", "instOfNatNat"],
  "name": "Int.instInhabitedInt",
  "constType": "Definition"},
 {"references":
  ["of_decide_eq_true",
   "LE.le",
   "Rat",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Rat.linearOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing",
   "Field.toCommRing",
   "Rat.field",
   "One.toOfNat1",
   "Semiring.toOne",
   "Rat.instDecidableLeRatInstLERat",
   "Eq.refl",
   "Bool",
   "Bool.true"],
  "name": "Rat.instLinearOrderedFieldRat.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "OfNat.mk",
   "Rat",
   "Int.cast",
   "Rat.instIntCastRat",
   "Nat.cast",
   "Int",
   "instNatCastInt"],
  "name": "Rat.instOfNatRat",
  "constType": "Definition"},
 {"references":
  ["AddGroupWithOne",
   "Int",
   "Int.cast_add.match_1",
   "Eq",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Nat",
   "of_eq_true",
   "Nat.cast",
   "instNatCastInt",
   "instAddNat",
   "Eq.trans",
   "AddMonoidWithOne.toNatCast",
   "True",
   "congr",
   "congrArg",
   "Int.cast_ofNat",
   "Nat.cast_add",
   "eq_self",
   "Eq.mpr",
   "Int.negSucc",
   "HSub.hSub",
   "instHSub",
   "AddGroupWithOne.toSub",
   "Nat.succ",
   "id",
   "Eq.ndrec",
   "Int.subNatNat",
   "Eq.refl",
   "Int.cast_subNatNat",
   "Neg.neg",
   "AddGroupWithOne.toNeg",
   "OfNat.ofNat",
   "instOfNatNat",
   "Int.cast_negSucc",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddGroupWithOne.toAddGroup",
   "SubNegMonoid.toNeg",
   "SubNegMonoid.toSub",
   "sub_eq_add_neg",
   "propext",
   "sub_eq_iff_eq_add",
   "add_assoc",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "eq_neg_add_iff_add_eq",
   "Eq.symm",
   "Nat.add_comm",
   "SubtractionMonoid.toSubNegMonoid",
   "neg_add_rev",
   "Nat.add_right_comm",
   "Nat.add_assoc"],
  "name": "Int.cast_add",
  "constType": "Theorem"},
 {"references":
  ["Semigroup", "Dvd.intro", "HMul.hMul", "instHMul", "Semigroup.toMul", "rfl"],
  "name": "dvd_mul_right",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.mul_inv_cancel",
  "constType": "Definition"},
 {"references": ["NegZeroClass", "NegZeroClass.neg_zero"],
  "name": "neg_zero",
  "constType": "Theorem"},
 {"references":
  ["One",
   "Mul",
   "Inv",
   "Int",
   "zpowRec.match_1",
   "Nat",
   "npowRec",
   "Inv.inv",
   "Nat.succ"],
  "name": "zpowRec",
  "constType": "Definition"},
 {"references": [], "name": "ZeroLEOneClass", "constType": "Other"},
 {"references": [], "name": "Semiring.mk", "constType": "Other"},
 {"references": [], "name": "AddCommMonoidWithOne", "constType": "Other"},
 {"references":
  ["PartialOrder",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Ne",
   "lt_of_le_of_ne",
   "Ne.symm"],
  "name": "Mathlib.Meta.Positivity.lt_of_le_of_ne'",
  "constType": "Theorem"},
 {"references": ["NegZeroClass"],
  "name": "NegZeroClass.toNeg",
  "constType": "Definition"},
 {"references":
  ["Semifield",
   "DivisionSemiring.mk",
   "CommSemiring.toSemiring",
   "Semifield.toCommSemiring",
   "Semifield.toInv",
   "Semifield.toDiv",
   "Semifield.div_eq_mul_inv",
   "Semifield.zpow",
   "Semifield.zpow_zero'",
   "Semifield.zpow_succ'",
   "Semifield.zpow_neg'",
   "Semifield.toNontrivial",
   "Semifield.inv_zero",
   "Semifield.mul_inv_cancel"],
  "name": "Semifield.toDivisionSemiring",
  "constType": "Definition"},
 {"references":
  ["of_decide_eq_true",
   "Eq",
   "Not",
   "True",
   "False",
   "instDecidableEqProp",
   "instDecidableIff",
   "instDecidableNot",
   "instDecidableTrue",
   "instDecidableFalse",
   "Eq.refl",
   "Bool",
   "Bool.true"],
  "name": "not_true_eq_false",
  "constType": "Theorem"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.toDivInvMonoid",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "MulZeroClass.zero_mul",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.zero_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Exists.rec", "constType": "Other"},
 {"references":
  ["Int",
   "Fermat42.Minimal",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "OfNat.ofNat",
   "instOfNatInt",
   "LT.lt",
   "Int.instLTInt",
   "PythagoreanTriple",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "instOfNatNat",
   "Int.gcd",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Int.instCommSemiringInt",
   "Exists.casesOn",
   "Exists",
   "And",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Or",
   "LE.le",
   "Int.instLEInt",
   "False",
   "PythagoreanTriple.coprime_classification'",
   "And.casesOn",
   "Ne",
   "Int.instSemiringInt",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Dvd.dvd",
   "Int.instDvdInt",
   "Exists.intro",
   "Neg.neg",
   "Int.instNegInt",
   "Int.sq_of_gcd_eq_one",
   "Eq.symm",
   "Not",
   "Eq.mp",
   "Eq.ndrec",
   "Eq.refl",
   "Int.gcd_comm",
   "CommMagma.toMul",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "mul_comm",
   "Or.resolve_right",
   "instLTNat",
   "Int.natAbs",
   "instLENat",
   "absurd",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "not_le_of_lt",
   "Iff.mpr",
   "Classical.not_not",
   "And.right",
   "Fermat42",
   "And.intro",
   "Iff.mp",
   "Nat.cast",
   "instNatCastInt",
   "Int.ofNat_lt",
   "Eq.mpr",
   "id",
   "Int.eq_natAbs_of_zero_le",
   "le_of_lt",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "gt_of_gt_of_ge",
   "GT.gt",
   "Preorder.toLT",
   "lt_add_of_pos_right",
   "AddMonoid.toAddZeroClass",
   "Int.instAddMonoidInt",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddZeroClass.toAdd",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "Int.instAddGroupInt",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "sq_pos_of_ne_zero",
   "Int.le_self_sq",
   "Int.natAbs_le_self_sq",
   "right_ne_zero_of_mul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "Or.casesOn",
   "Or.inl",
   "Mathlib.Tactic.Ring.of_eq",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Nat.semiring",
   "Mathlib.Tactic.Ring.pow_add",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.one_mul",
   "Mathlib.Tactic.Ring.one_pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Or.inr",
   "Int.rawCast",
   "Int.instRingInt",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.neg_congr",
   "Mathlib.Tactic.Ring.neg_add",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Mathlib.Meta.NormNum.isInt_pow",
   "Mathlib.Meta.NormNum.intPow_negOfNat_bit0",
   "Mathlib.Meta.NormNum.one_natPow",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Int.instAddCommGroupInt",
   "propext",
   "or_self_iff",
   "NegZeroClass.toNeg",
   "neg_zero",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "zero_pow",
   "zero_lt_two",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.orderedSemiring",
   "NeZero.succ",
   "Nat.zero",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "left_ne_zero_of_mul",
   "lt_of_le_of_ne",
   "Ne.symm",
   "pow_ne_zero",
   "IsDomain.to_noZeroDivisors",
   "LinearOrderedRing.isDomain",
   "LinearOrder.toPartialOrder",
   "Int.instLinearOrderInt",
   "not_lt",
   "sq_nonneg",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.mul_one",
   "AddGroup.toSubtractionMonoid",
   "neg_nonpos",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "StrictOrderedSemiring.toSemiring",
   "zero_le_mul_right",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "ne_zero_pow",
   "two_ne_zero",
   "LinearOrderedCommMonoidWithZero.toZero",
   "Nat.linearOrderedCommMonoidWithZero",
   "mul_ne_zero",
   "ne_of_gt",
   "Semigroup.toMul",
   "Int.instSemigroupInt",
   "mul_assoc",
   "of_eq_true",
   "MulZeroClass.toMul",
   "MulZeroClass.toZero",
   "Eq.trans",
   "True",
   "implies_congr",
   "congrFun",
   "congrArg",
   "MulZeroClass.mul_zero",
   "eq_self",
   "not_true_eq_false",
   "Mathlib.Logic.IsEmpty._auxLemma.1",
   "instIsEmptyFalse",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "CancelMonoidWithZero.toMonoidWithZero",
   "IsDomain.toCancelMonoidWithZero",
   "mul_right_inj'",
   "eq_true",
   "Mathlib.Meta.NormNum.isNat_eq_false",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "StrictOrderedSemiring.to_charZero",
   "Bool",
   "Bool.false",
   "Mathlib.Tactic.LinearCombination.eq_of_add",
   "Mathlib.Tactic.LinearCombination.add_pf",
   "Mathlib.Tactic.LinearCombination.c_mul_pf",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "Mathlib.Tactic.Ring.sub_congr",
   "Mathlib.Tactic.Ring.sub_pf",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Tactic.Ring.add_congr",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "Mathlib.Meta.NormNum.isNat_add",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.cast_zero",
   "Int.Prime.dvd_pow'",
   "Nat.prime_two",
   "Int.instHPowIntNat",
   "dvd_mul_right",
   "IsCoprime",
   "Int.gcd_eq_one_iff_coprime",
   "Int.coprime_of_sq_sum'",
   "MulZeroClass.zero_mul",
   "mt",
   "pow_eq_zero",
   "And.left",
   "IsCoprime.of_mul_left_left",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "sq",
   "IsCoprime.add_mul_right_left",
   "IsCoprime.pow_left",
   "Int.mul_emod",
   "of_decide_eq_true",
   "Int.instDecidableEqInt",
   "Bool.true",
   "IsCoprime.pow",
   "Fermat42.coprime_of_minimal"],
  "name": "Fermat42.not_minimal",
  "constType": "Theorem"},
 {"references": [], "name": "SubtractionCommMonoid", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Eq.mpr",
   "Semigroup.toMul",
   "SemigroupWithZero.toSemigroup",
   "NonUnitalSemiring.toSemigroupWithZero",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "CommSemiring.toNonUnitalCommSemiring",
   "id",
   "Eq.refl",
   "mul_assoc"],
  "name": "Mathlib.Tactic.Ring.mul_pf_left",
  "constType": "Theorem"},
 {"references": ["Nat", "Nat.rec", "PUnit", "PProd"],
  "name": "Nat.below",
  "constType": "Definition"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.zpow",
  "constType": "Definition"},
 {"references":
  ["Zero",
   "One",
   "PartialOrder",
   "ZeroLEOneClass",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "NeZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "LE.le.lt_of_ne",
   "Zero.toOfNat0",
   "zero_le_one",
   "NeZero.ne'"],
  "name": "zero_lt_one",
  "constType": "Theorem"},
 {"references": ["Monoid", "Pow.mk", "Nat", "Monoid.npow"],
  "name": "Monoid.toNatPow",
  "constType": "Definition"},
 {"references": ["Inv.mk", "Rat", "Rat.inv"],
  "name": "Rat.instInvRat",
  "constType": "Definition"},
 {"references": ["LinearOrder", "LinearOrder.le_total"],
  "name": "le_total",
  "constType": "Theorem"},
 {"references": ["Add", "IsCancelAdd"],
  "name": "IsCancelAdd.toIsRightCancelAdd",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Nat",
   "Nat.rec",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "pow_zero",
   "Eq.mpr",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "instOfNatNat",
   "Eq.refl",
   "pow_succ",
   "MulOneClass.toOne",
   "one_mul"],
  "name": "one_pow",
  "constType": "Theorem"},
 {"references": ["Field"], "name": "Field.zpow", "constType": "Definition"},
 {"references": [],
  "name": "CanonicallyOrderedCommSemiring",
  "constType": "Other"},
 {"references":
  ["DivisionSemiring",
   "Eq.mpr",
   "Eq",
   "HDiv.hDiv",
   "instHDiv",
   "DivisionSemiring.toDiv",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "DivisionSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "DivInvMonoid.toMonoid",
   "GroupWithZero.toDivInvMonoid",
   "DivisionSemiring.toGroupWithZero",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "id",
   "congr",
   "DivInvMonoid.toDiv",
   "congrArg",
   "div_eq_mul_inv",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congrFun",
   "add_mul",
   "Distrib.rightDistribClass",
   "eq_self"],
  "name": "add_div",
  "constType": "Theorem"},
 {"references": ["LE", "LE.le"], "name": "GE.ge", "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocSemiring.zero_mul",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Nat.linearOrderedCommSemiring"],
  "name": "Nat.linearOrderedCommMonoidWithZero.proof_1",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "LE.le",
   "Int.instLEInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Exists",
   "Nat",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "Nat.cast",
   "instNatCastInt",
   "Eq.mp",
   "Eq.ndrec",
   "Eq.refl",
   "Int.sub_zero",
   "Int.le.dest_sub"],
  "name": "Int.eq_ofNat_of_zero_le",
  "constType": "Theorem"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.toAdd",
  "constType": "Definition"},
 {"references": ["Ring"],
  "name": "Ring.sub_eq_add_neg",
  "constType": "Definition"},
 {"references": [], "name": "Ring.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "List.TFAE.out",
   "List.cons",
   "FermatLastTheoremWith",
   "Nat.semiring",
   "Int",
   "Int.instSemiringInt",
   "Rat",
   "Rat.semiring",
   "List.nil",
   "fermatLastTheoremWith_nat_int_rat_tfae",
   "OfNat.ofNat",
   "instOfNatNat",
   "FermatLastTheoremFor",
   "Eq.refl",
   "Option",
   "List.get?"],
  "name": "fermatLastTheoremFor_iff_int",
  "constType": "Theorem"},
 {"references":
  ["Mul",
   "Zero",
   "LinearOrder",
   "MulPosStrictMono",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "ContravariantClass.mk",
   "Subtype",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "HMul.hMul",
   "instHMul",
   "Subtype.val",
   "LE.le",
   "Preorder.toLE",
   "Iff.mp",
   "Covariant",
   "Contravariant",
   "covariant_lt_iff_contravariant_le",
   "CovariantClass.elim"],
  "name": "MulPosStrictMono.toMulPosReflectLE",
  "constType": "Definition"},
 {"references":
  ["NonUnitalNonAssocRing",
   "eq_neg_of_add_eq_zero_left",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "InvolutiveNeg.mk",
   "Neg.mk",
   "SubNegMonoid.toNeg",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "neg_neg",
   "SubtractionMonoid.toInvolutiveNeg",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "SubtractionMonoid.toSubNegMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "right_distrib",
   "Distrib.rightDistribClass",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "add_left_neg",
   "NonUnitalNonAssocRing.zero_mul"],
  "name": "NonUnitalNonAssocRing.toHasDistribNeg.proof_2",
  "constType": "Theorem"},
 {"references":
  ["MulZeroClass.mul_zero",
   "Rat",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Rat.commRing"],
  "name": "Rat.commGroupWithZero.proof_2",
  "constType": "Theorem"},
 {"references": ["Decidable.isFalse", "False", "not_false"],
  "name": "instDecidableFalse",
  "constType": "Definition"},
 {"references":
  ["Semigroup",
   "Commute",
   "Semigroup.toMul",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "mul_assoc",
   "Commute.eq",
   "eq_self"],
  "name": "Commute.right_comm",
  "constType": "Theorem"},
 {"references": [], "name": "AddGroup.mk", "constType": "Other"},
 {"references":
  ["Int",
   "Unit",
   "Int.ofNat",
   "Nat",
   "Nat.succ",
   "Int.negSucc",
   "Int.casesOn",
   "Nat.casesOn",
   "Unit.unit"],
  "name": "Int.neg_neg.match_1",
  "constType": "Definition"},
 {"references": [], "name": "CommSemiring.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "AddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsNat",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq.match_1",
   "Eq",
   "Nat.rawCast",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
  "constType": "Theorem"},
 {"references": ["LinearOrder", "Ne", "lt_or_gt_of_ne"],
  "name": "Ne.lt_or_lt",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "StrictOrderedSemiring",
   "Nat",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.strictOrderedSemiring",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedCommSemiring",
   "LinearOrderedSemiring.mk",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedCommSemiring.toMin",
   "LinearOrderedCommSemiring.toMax",
   "LinearOrderedCommSemiring.toOrd",
   "LinearOrderedCommSemiring.le_total",
   "LinearOrderedCommSemiring.decidableLE",
   "LinearOrderedCommSemiring.decidableEq",
   "LinearOrderedCommSemiring.decidableLT",
   "LinearOrderedCommSemiring.min_def",
   "LinearOrderedCommSemiring.max_def",
   "LinearOrderedCommSemiring.compare_eq_compareOfLessAndEq"],
  "name": "LinearOrderedCommSemiring.toLinearOrderedSemiring",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Mathlib.Meta.NormNum.IsNat.casesOn"],
  "name": "Mathlib.Tactic.Ring.cast_zero.match_1",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocCommRing"],
  "name": "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
  "constType": "Definition"},
 {"references":
  ["Semiring.mul_one",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_8",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.brecOn",
   "Nat.succ",
   "Nat.below",
   "Nat.succ_le_succ.match_1",
   "Unit",
   "Nat.le.refl",
   "Nat.le",
   "Nat.le.step",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.succ_le_succ",
  "constType": "Theorem"},
 {"references": ["Semigroup"],
  "name": "Semigroup.toMul",
  "constType": "Definition"},
 {"references": ["Nat", "FermatLastTheoremWith", "Nat.semiring"],
  "name": "FermatLastTheoremFor",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "AddMonoid.add_zero",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid"],
  "name": "AddGroup.toAddCancelMonoid.proof_3",
  "constType": "Theorem"},
 {"references":
  ["List", "propext", "List.Chain", "List.cons", "And", "List.chain_cons"],
  "name": "Mathlib.Data.List.TFAE._auxLemma.5",
  "constType": "Theorem"},
 {"references": [], "name": "Dvd", "constType": "Other"},
 {"references":
  ["Int",
   "Iff.mpr",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "Neg.neg",
   "Int.instNegInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "Int.emod_eq_emod_iff_emod_sub_eq_zero",
   "Eq.mpr",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "eq_of_heq",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.refl",
   "HEq.refl",
   "Eq.symm",
   "outParam",
   "HMod",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Int.instSemiringInt",
   "id",
   "NonUnitalNonAssocSemiring.toMul",
   "instOfNat",
   "NonAssocSemiring.toNatCast",
   "instNatAtLeastTwo",
   "Nat",
   "instOfNatNat",
   "two_mul",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Int.instAddGroupInt",
   "SubNegMonoid.toNeg",
   "SubNegMonoid.toSub",
   "sub_eq_add_neg",
   "Int.mul_emod_right"],
  "name": "Int.neg_emod_two",
  "constType": "Theorem"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.toMin",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "IsCoprime",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Semiring.toOne",
   "Exists.intro",
   "Exists",
   "Exists.casesOn"],
  "name": "IsCoprime.of_mul_left_left.match_1",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedRing",
   "Nat",
   "Iff.intro",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "bit1",
   "CanonicallyOrderedCommSemiring.toOne",
   "Nat.canonicallyOrderedCommSemiring",
   "instAddNat",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Iff.mp",
   "Not",
   "LE.le",
   "Preorder.toLE",
   "LinearOrder.toPartialOrder",
   "LinearOrderedRing.toLinearOrder",
   "not_le",
   "Iff.mpr",
   "pow_nonneg",
   "StrictOrderedSemiring.toOrderedSemiring",
   "pow_bit1_neg"],
  "name": "pow_bit1_neg_iff",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.zero_add",
  "constType": "Definition"},
 {"references": [], "name": "NonAssocRing.mk", "constType": "Other"},
 {"references": [], "name": "NonUnitalSemiring.mk", "constType": "Other"},
 {"references": [], "name": "LinearOrderedCommRing.mk", "constType": "Other"},
 {"references": ["SubtractionMonoid"],
  "name": "SubtractionMonoid.toSubNegMonoid",
  "constType": "Definition"},
 {"references": [], "name": "CommMonoid", "constType": "Other"},
 {"references": ["Mod", "HMod.mk", "Mod.mod"],
  "name": "instHMod",
  "constType": "Definition"},
 {"references": [], "name": "OrderedSemiring", "constType": "Other"},
 {"references": [], "name": "OrderedCommSemiring", "constType": "Other"},
 {"references":
  ["LinearOrderedRing",
   "Nat",
   "Even",
   "instAddNat",
   "Exists.casesOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Exists",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Exists.intro",
   "Eq.mpr",
   "id",
   "congrArg",
   "pow_bit0_nonneg",
   "Eq.refl"],
  "name": "Even.pow_nonneg",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "of_eq_true",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "congrFun",
   "add_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.single_pow",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.decidableLT",
  "constType": "Definition"},
 {"references": ["AddGroupWithOne"],
  "name": "AddGroupWithOne.toNeg",
  "constType": "Definition"},
 {"references": [], "name": "Rat", "constType": "Other"},
 {"references": ["Eq.refl", "Ne"],
  "name": "_private.Std.Data.Int.Lemmas.0.Ne._eq_1",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "propext",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "eq_add_neg_iff_add_eq"],
  "name": "Mathlib.NumberTheory.FLT.Basic._auxLemma.5",
  "constType": "Theorem"},
 {"references": [], "name": "AddCancelMonoid", "constType": "Other"},
 {"references": ["MulOneClass", "MulOneClass.one_mul"],
  "name": "one_mul",
  "constType": "Theorem"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.min_def",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "propext",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "add_neg_eq_iff_eq_add"],
  "name": "Mathlib.NumberTheory.FLT.Basic._auxLemma.2",
  "constType": "Theorem"},
 {"references": [], "name": "InvolutiveNeg", "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "Int",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.subNatNat",
   "instMulNat",
   "Nat.zero",
   "Eq.ndrec",
   "of_eq_true",
   "OfNat.ofNat",
   "instOfNatInt",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "Int.zero_mul",
   "Nat.zero_mul",
   "Int.subNatNat_self",
   "eq_self",
   "Eq.symm",
   "Nat.succ",
   "Or.casesOn",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "Or",
   "Nat.lt_or_ge",
   "Or.inl",
   "Eq.mpr",
   "Int.negOfNat",
   "Nat.pred",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Int.negSucc",
   "id",
   "Int.subNatNat_of_lt",
   "Eq.refl",
   "Nat.succ_pred_eq_of_pos",
   "Nat.sub_pos_of_lt",
   "Neg.neg",
   "Int.instNegInt",
   "Int.neg_ofNat_succ",
   "Nat.mul_sub_left_distrib",
   "Nat.mul_lt_mul_of_pos_left",
   "Nat.succ_pos",
   "Or.inr",
   "LE.le",
   "Int.subNatNat_of_le",
   "Nat.mul_le_mul_left"],
  "name": "Int.ofNat_mul_subNatNat",
  "constType": "Theorem"},
 {"references": [], "name": "Or.rec", "constType": "Other"},
 {"references":
  ["StrictOrderedRing",
   "Semiring",
   "Ring.toSemiring",
   "StrictOrderedRing.toRing",
   "StrictOrderedSemiring.mk",
   "StrictOrderedRing.toPartialOrder",
   "StrictOrderedRing.add_le_add_left",
   "StrictOrderedRing.toStrictOrderedSemiring.proof_1",
   "StrictOrderedRing.toNontrivial",
   "StrictOrderedRing.zero_le_one",
   "StrictOrderedRing.toStrictOrderedSemiring.proof_2",
   "StrictOrderedRing.toStrictOrderedSemiring.proof_3"],
  "name": "StrictOrderedRing.toStrictOrderedSemiring",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocRing"],
  "name": "NonUnitalNonAssocRing.left_distrib",
  "constType": "Definition"},
 {"references": ["CommMonoid"],
  "name": "CommMonoid.mul_comm",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "IsCoprime",
   "IsCoprime.pow_right",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "IsCoprime.pow_left"],
  "name": "IsCoprime.pow",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.toMax",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.emod_add_ediv.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HDiv.hDiv",
   "instHDiv",
   "Int.instDivInt_1",
   "Nat",
   "congrArg",
   "instAddNat",
   "Nat.instModNat",
   "Int.natAbs",
   "Int.ofNat",
   "instMulNat",
   "Nat.instDivNat",
   "Nat.mod_add_div",
   "Nat.cast",
   "instNatCastInt",
   "Nat.succ",
   "Neg.neg",
   "Int.instNegInt",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.neg_mul_neg",
   "Int.negSucc",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.emod_zero",
   "Int.emod_add_ediv.aux"],
  "name": "Int.emod_add_ediv",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedSemiring",
   "ContravariantClass.mk",
   "Subtype",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Subtype.val",
   "LT.lt",
   "Preorder.toLT",
   "Monotone.reflect_lt",
   "LinearOrderedAddCommMonoid.toLinearOrder",
   "LinearOrderedSemiring.toLinearOrderedAddCommMonoid",
   "OrderedSemiring.toPartialOrder",
   "StrictOrderedSemiring.toOrderedSemiring",
   "OrderedSemiring.toSemiring",
   "monotone_mul_right_of_nonneg",
   "Subtype.property"],
  "name": "LinearOrderedSemiring.toMulPosReflectLT",
  "constType": "Definition"},
 {"references": ["Ring"],
  "name": "Ring.zsmul_succ'",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Iff.mpr",
   "Not",
   "LT.lt",
   "instLTNat",
   "LE.le",
   "instLENat",
   "Iff.intro",
   "Nat.ge_of_not_lt",
   "flip",
   "False",
   "Nat.not_le_of_gt"],
  "name": "Nat.le_lt_asymm",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "CommMonoid",
   "Int",
   "CommRing.toCommMonoid",
   "Int.instCommRingInt"],
  "name": "Int.instCommMonoidInt",
  "constType": "Definition"},
 {"references": ["Lattice"],
  "name": "Lattice.inf_le_right",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedRing",
   "pow_bit0_nonneg",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat"],
  "name": "sq_nonneg",
  "constType": "Theorem"},
 {"references":
  ["MulZeroClass",
   "NoZeroDivisors",
   "MulZeroClass.toMul",
   "MulZeroClass.toZero",
   "Iff.intro",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Or",
   "NoZeroDivisors.eq_zero_or_eq_zero_of_mul_eq_zero",
   "Or.elim",
   "mul_eq_zero_of_left",
   "mul_eq_zero_of_right"],
  "name": "mul_eq_zero",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocSemiring.mul_zero",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_5",
  "constType": "Theorem"},
 {"references": ["Not", "Eq"], "name": "Ne", "constType": "Definition"},
 {"references": [], "name": "AddCommMonoid", "constType": "Other"},
 {"references":
  ["LinearOrderedRing",
   "NoZeroDivisors.mk",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Iff.mpr",
   "Or",
   "Not",
   "And",
   "Decidable.or_iff_not_and_not",
   "instDecidableEq",
   "LinearOrderedRing.toLinearOrder",
   "Or.casesOn",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "GT.gt",
   "lt_or_gt_of_ne",
   "And.left",
   "False",
   "Or.inl",
   "And.right",
   "Ne.symm",
   "StrictOrderedRing.toStrictOrderedSemiring",
   "LT.lt.ne",
   "StrictOrderedRing.toPartialOrder",
   "mul_pos_of_neg_of_neg",
   "Or.inr",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "MulZeroClass.toZero",
   "mul_neg_of_neg_of_pos",
   "StrictOrderedSemiring.toMulPosStrictMono",
   "Eq.refl",
   "mul_neg_of_pos_of_neg",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "mul_pos"],
  "name": "LinearOrderedRing.noZeroDivisors",
  "constType": "Definition"},
 {"references": [], "name": "Div", "constType": "Other"},
 {"references":
  ["LinearOrderedSemiring",
   "LinearOrderedAddCommMonoid.mk",
   "LinearOrder.mk",
   "StrictOrderedSemiring.toPartialOrder",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedSemiring.toMin",
   "LinearOrderedSemiring.toMax",
   "LinearOrderedSemiring.toOrd",
   "LinearOrderedSemiring.le_total",
   "LinearOrderedSemiring.decidableLE",
   "LinearOrderedSemiring.decidableEq",
   "LinearOrderedSemiring.decidableLT",
   "LinearOrderedSemiring.min_def",
   "LinearOrderedSemiring.max_def",
   "LinearOrderedSemiring.compare_eq_compareOfLessAndEq",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.add_le_add_left"],
  "name": "LinearOrderedSemiring.toLinearOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.zpow_succ'",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "implies_congr",
  "constType": "Theorem"},
 {"references": ["Pow"], "name": "Pow.pow", "constType": "Definition"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.compare_eq_compareOfLessAndEq",
  "constType": "Definition"},
 {"references": ["NonUnitalCommRing"],
  "name": "NonUnitalCommRing.mul_comm",
  "constType": "Definition"},
 {"references": [], "name": "AddCancelMonoid.mk", "constType": "Other"},
 {"references": ["Int", "rfl", "Nat", "Int.gcd"],
  "name": "Int.gcd_eq_natAbs",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "AddCommGroup.mk",
   "AddGroup.mk",
   "SubNegMonoid.mk",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "Ring.toNeg",
   "Ring.toSub",
   "Ring.sub_eq_add_neg",
   "Ring.zsmul",
   "Ring.zsmul_zero'",
   "Ring.zsmul_succ'",
   "Ring.zsmul_neg'",
   "Ring.add_left_neg",
   "AddCommMonoid.add_comm"],
  "name": "Ring.toAddCommGroup",
  "constType": "Definition"},
 {"references": ["outParam", "HMod"],
  "name": "HMod.hMod",
  "constType": "Definition"},
 {"references": [], "name": "inferInstanceAs", "constType": "Definition"},
 {"references": [], "name": "Bool.false", "constType": "Other"},
 {"references":
  ["Mul",
   "Zero",
   "IsLeftCancelMulZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "mul_left_cancel₀"],
  "name": "mul_right_injective₀",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq.rec",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq",
   "Nat.mul_one",
   "Nat.mul_comm"],
  "name": "Nat.one_mul",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Int.add.match_1",
   "Nat",
   "Int.ofNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Int.negOfNat",
   "Nat.succ"],
  "name": "Int.mul",
  "constType": "Definition"},
 {"references": ["Int", "Nat", "rfl", "Int.pow"],
  "name": "pow_eq",
  "constType": "Theorem"},
 {"references": [], "name": "Units", "constType": "Other"},
 {"references":
  ["Bool",
   "Eq",
   "Bool.false",
   "ne_true_of_eq_false.match_1",
   "Not",
   "Bool.true",
   "Bool.noConfusion",
   "False"],
  "name": "ne_true_of_eq_false",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.min_def",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "Int",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.negOfNat",
   "instMulNat",
   "Nat.zero",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.succ"],
  "name": "Int.ofNat_mul_negOfNat",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Int.negOfNat.match_1",
   "Int",
   "Unit",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.negSucc"],
  "name": "Int.negOfNat",
  "constType": "Definition"},
 {"references":
  ["Nat", "Nat.Prime", "Irreducible.not_dvd_one", "Nat.commMonoid"],
  "name": "Nat.Prime.not_dvd_one",
  "constType": "Theorem"},
 {"references": ["Semifield"],
  "name": "Semifield.toNontrivial",
  "constType": "Definition"},
 {"references": [], "name": "Exists.intro", "constType": "Other"},
 {"references":
  ["Ring",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "Ring.toSub",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm"],
  "name": "Mathlib.Tactic.Ring.sub_congr",
  "constType": "Theorem"},
 {"references": [], "name": "IsEmpty.mk", "constType": "Other"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.toInv",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Mathlib.Meta.NormNum.IsNat.casesOn"],
  "name": "Mathlib.Tactic.Ring.cast_pos.match_1",
  "constType": "Definition"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.add_zero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Int",
   "Eq.mpr",
   "Eq",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "AddMonoid.mk",
   "AddSemigroup.mk",
   "Int.instAddInt",
   "Int.add_assoc",
   "Zero.ofOfNat0",
   "instOfNatInt",
   "Int.zero_add",
   "Int.add_zero",
   "Int.instMulInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.zero_mul",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.add_mul",
   "Int.add_comm",
   "Int.one_mul",
   "Int.mul_add",
   "Int.mul_zero",
   "Int.mul_assoc",
   "Int.mul_comm"],
  "name": "Int.instCommRingInt.proof_5",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Commute",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Nat",
   "Commute.symm",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Commute.pow_right"],
  "name": "Commute.pow_left",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toOrd",
  "constType": "Definition"},
 {"references": [], "name": "NonAssocSemiring", "constType": "Other"},
 {"references": [], "name": "SubtractionCommMonoid.mk", "constType": "Other"},
 {"references": ["CommGroupWithZero"],
  "name": "CommGroupWithZero.toCommMonoidWithZero",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocCommSemiring"],
  "name": "NonUnitalNonAssocCommSemiring.mul_comm",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "OrderedSemiring",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Eq.mpr",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsNat.to_eq",
   "rfl",
   "Nat.cast_nonneg"],
  "name": "Mathlib.Meta.Positivity.nonneg_of_isNat",
  "constType": "Theorem"},
 {"references":
  ["AddZeroClass",
   "Preorder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "add_lt_of_lt_of_neg"],
  "name": "Left.add_neg",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HDiv.hDiv",
   "instHDiv",
   "Int.instDivInt_1",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.mul_comm",
   "Int.emod_add_ediv"],
  "name": "Int.emod_add_ediv'",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Eq.ndrec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "of_eq_true",
   "Eq.trans",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "True",
   "congrFun",
   "congrArg",
   "pow_add",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.pow_add",
  "constType": "Theorem"},
 {"references": ["outParam", "HDiv"],
  "name": "HDiv.hDiv",
  "constType": "Definition"},
 {"references": [], "name": "CommMonoidWithZero.mk", "constType": "Other"},
 {"references": [], "name": "Field", "constType": "Other"},
 {"references": ["lt_of_le_of_ne"],
  "name": "LE.le.lt_of_ne",
  "constType": "Theorem"},
 {"references":
  ["MulZeroClass",
   "mt",
   "Eq",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "mul_eq_zero_of_left"],
  "name": "left_ne_zero_of_mul",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Eq.trans",
   "True",
   "congrArg",
   "add_left_comm",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_gt",
  "constType": "Theorem"},
 {"references": ["True.intro"], "name": "trivial", "constType": "Definition"},
 {"references":
  ["NonAssocRing",
   "NoZeroDivisors",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "MulZeroOneClass.toZero",
   "NonAssocSemiring.toMulZeroOneClass",
   "NonAssocRing.toNonAssocSemiring",
   "CharZero",
   "AddGroupWithOne.toAddMonoidWithOne",
   "AddCommGroupWithOne.toAddGroupWithOne",
   "NonAssocRing.toAddCommGroupWithOne",
   "propext",
   "Eq",
   "Neg.neg",
   "AddGroupWithOne.toNeg",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "eq_neg_self_iff"],
  "name": "Mathlib.Algebra.CharZero.Lemmas._auxLemma.10",
  "constType": "Theorem"},
 {"references": [], "name": "OrderedSemiring.mk", "constType": "Other"},
 {"references":
  ["Mul",
   "Add",
   "LeftDistribClass",
   "Eq.symm",
   "HMul.hMul",
   "instHMul",
   "HAdd.hAdd",
   "instHAdd",
   "mul_add"],
  "name": "Mathlib.NumberTheory.FLT.Basic._auxLemma.1",
  "constType": "Theorem"},
 {"references": ["Mul", "HasDistribNeg", "HasDistribNeg.mul_neg"],
  "name": "mul_neg",
  "constType": "Theorem"},
 {"references": ["CommSemiring"],
  "name": "CommSemiring.toSemiring",
  "constType": "Definition"},
 {"references": ["CommRing", "Ring.zsmul_succ'", "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_3",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Or.imp_right",
   "Int.NonNeg",
   "Neg.neg",
   "Int.instNegInt",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "LE.le",
   "Int.instLEInt",
   "Eq.mp",
   "Eq.ndrec",
   "Eq",
   "Eq.refl",
   "of_eq_true",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.neg_add",
   "Int.neg_neg",
   "Int.add_comm",
   "eq_self",
   "Int.nonneg_or_nonneg_neg"],
  "name": "Int.le_total",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedRing",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "pow_bit0_pos",
   "Nat",
   "instOfNatNat"],
  "name": "sq_pos_of_ne_zero",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalSemiring",
   "SemigroupWithZero.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalSemiring.mul_assoc",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "NonUnitalSemiring.toSemigroupWithZero",
  "constType": "Definition"},
 {"references": ["Monoid", "Units"],
  "name": "Units.val",
  "constType": "Definition"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.toDiv",
  "constType": "Definition"},
 {"references":
  ["DivisionCommMonoid",
   "Nat",
   "of_eq_true",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "DivInvMonoid.toMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "Eq.trans",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "CommMonoid.toMonoid",
   "DivisionCommMonoid.toCommMonoid",
   "Inv.inv",
   "InvOneClass.toInv",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "DivInvMonoid.toInv",
   "True",
   "congr",
   "congrArg",
   "congrFun",
   "div_eq_mul_inv",
   "mul_pow",
   "inv_pow",
   "eq_self"],
  "name": "div_pow",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "NonUnitalNonAssocSemiring.mul_zero",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "inferInstanceAs"],
  "name": "CommSemiring.toCommMonoidWithZero.proof_2",
  "constType": "Theorem"},
 {"references": [], "name": "Lean.Syntax.node", "constType": "Other"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.add_assoc",
   "Nat.add_comm"],
  "name": "Nat.add_left_comm",
  "constType": "Theorem"},
 {"references": ["Ring"], "name": "Ring.toSemiring", "constType": "Definition"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.decidableEq",
  "constType": "Definition"},
 {"references":
  ["Ring", "Int", "Mathlib.Meta.NormNum.IsInt.mk", "Int.rawCast", "rfl"],
  "name": "Mathlib.Meta.NormNum.IsInt.of_raw",
  "constType": "Theorem"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.mul_le_mul_of_nonneg_left",
  "constType": "Definition"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.zpow_neg'",
  "constType": "Definition"},
 {"references":
  ["CommRing.mk",
   "Rat",
   "Ring.mk",
   "Semiring.mk",
   "NonUnitalSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "AddMonoid.mk",
   "AddSemigroup.mk",
   "Add.mk",
   "HAdd.hAdd",
   "instHAdd",
   "Rat.instAddRat",
   "Rat.add_assoc",
   "Zero.mk",
   "OfNat.ofNat",
   "Rat.instOfNatRat",
   "Rat.zero_add",
   "Rat.add_zero",
   "nsmulRec",
   "Rat.commRing.proof_1",
   "Rat.commRing.proof_2",
   "Rat.add_comm",
   "Mul.mk",
   "HMul.hMul",
   "instHMul",
   "Rat.instMulRat",
   "Rat.mul_add",
   "Rat.add_mul",
   "Rat.zero_mul",
   "Rat.mul_zero",
   "Rat.mul_assoc",
   "One.mk",
   "Rat.one_mul",
   "Rat.mul_one",
   "NatCast.mk",
   "Nat",
   "Int.cast",
   "Rat.instIntCastRat",
   "Nat.cast",
   "Int",
   "instNatCastInt",
   "Rat.commRing.proof_3",
   "Rat.commRing.proof_4",
   "npowRec",
   "Rat.commRing.proof_5",
   "Rat.commRing.proof_6",
   "Neg.mk",
   "Neg.neg",
   "Rat.instNegRat",
   "Rat.instSubRat",
   "Rat.sub_eq_add_neg",
   "zsmulRec",
   "Rat.neg",
   "Rat.commRing.proof_7",
   "Rat.commRing.proof_8",
   "Rat.commRing.proof_9",
   "Rat.add_left_neg",
   "IntCast.mk",
   "Rat.commRing.proof_10",
   "Rat.commRing.proof_11",
   "Rat.mul_comm"],
  "name": "Rat.commRing",
  "constType": "Definition"},
 {"references": [], "name": "Sub.mk", "constType": "Other"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.toDiv",
  "constType": "Definition"},
 {"references": [], "name": "Semifield", "constType": "Other"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "Eq.mpr",
   "Iff",
   "Eq",
   "Abs.abs",
   "Neg.toHasAbs",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "OrderedAddCommGroup.toAddCommGroup",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "Max.max",
   "LinearOrder.toMax",
   "Neg.neg",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "abs_eq_max_neg",
   "SemilatticeInf.toPartialOrder",
   "Lattice.toSemilatticeInf",
   "propext",
   "max_eq_left_iff",
   "neg_le_self_iff",
   "Iff.rfl"],
  "name": "abs_eq_self",
  "constType": "Theorem"},
 {"references": ["Preorder", "lt_irrefl"],
  "name": "Linarith.lt_irrefl",
  "constType": "Theorem"},
 {"references": [], "name": "NonUnitalRing.mk", "constType": "Other"},
 {"references": ["StrictOrderedRing"],
  "name": "StrictOrderedRing.toRing",
  "constType": "Definition"},
 {"references": [], "name": "And.rec", "constType": "Other"},
 {"references":
  ["Ring",
   "AddCommMonoid.add_comm",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_1",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.ndrec", "Eq.refl", "Eq.symm"],
  "name": "Mathlib.Tactic.Ring.of_eq",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq.symm",
   "Neg.neg",
   "Int.instNegInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Int.neg_mul_eq_neg_mul"],
  "name": "Int.neg_mul",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "decidable_of_decidable_of_iff",
   "Eq",
   "Int.mod",
   "OfNat.ofNat",
   "instOfNatInt",
   "Dvd.dvd",
   "Int.instDvdInt",
   "Int.instDecidableEqInt",
   "Int.decidableDvd.proof_1"],
  "name": "Int.decidableDvd",
  "constType": "Definition"},
 {"references":
  ["Rat",
   "Nat",
   "Nat.gcd",
   "Int.natAbs",
   "Rat.num",
   "Rat.den",
   "Rat.mk'",
   "HMul.hMul",
   "Int",
   "instHMul",
   "Int.instMulInt",
   "Int.div",
   "Nat.cast",
   "instNatCastInt",
   "instMulNat",
   "HDiv.hDiv",
   "instHDiv",
   "Nat.instDivNat",
   "Rat.mul.proof_1",
   "Rat.mul.proof_2"],
  "name": "Rat.mul",
  "constType": "Definition"},
 {"references":
  ["Mul", "Add", "RightDistribClass", "RightDistribClass.right_distrib"],
  "name": "right_distrib",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "Nat",
   "Eq",
   "Neg.neg",
   "Ring.toNeg",
   "Eq.ndrec",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Ring.toSemiring",
   "of_eq_true",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "Eq.trans",
   "True",
   "congrArg",
   "mul_neg",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.neg_mul",
  "constType": "Theorem"},
 {"references": ["AddGroupWithOne", "Nat", "AddGroupWithOne.intCast_ofNat"],
  "name": "Int.cast_ofNat",
  "constType": "Theorem"},
 {"references":
  ["GroupWithZero",
   "DivInvMonoid.mk",
   "MonoidWithZero.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "GroupWithZero.toInv",
   "GroupWithZero.toDiv",
   "GroupWithZero.div_eq_mul_inv",
   "GroupWithZero.zpow",
   "GroupWithZero.zpow_zero'",
   "GroupWithZero.zpow_succ'",
   "GroupWithZero.zpow_neg'"],
  "name": "GroupWithZero.toDivInvMonoid",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Int.subNatNat_self.match_1",
   "Eq",
   "Int",
   "Int.subNatNat",
   "OfNat.ofNat",
   "instOfNatInt",
   "Unit",
   "rfl",
   "instOfNatNat",
   "Eq.mpr",
   "Nat.succ",
   "Nat.cast",
   "instNatCastInt",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.subNatNat_of_sub_eq_zero",
   "Nat.sub_self",
   "Int.ofNat_zero"],
  "name": "Int.subNatNat_self",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow_zero'",
  "constType": "Definition"},
 {"references": ["StrictOrderedRing"],
  "name": "StrictOrderedRing.toPartialOrder",
  "constType": "Definition"},
 {"references":
  ["CommSemigroup",
   "right_comm",
   "Mul.mul",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "mul_comm",
   "mul_assoc",
   "CommSemigroup.toSemigroup"],
  "name": "mul_right_comm",
  "constType": "Theorem"},
 {"references":
  ["Dvd.mk", "Int", "Exists", "Eq", "HMul.hMul", "instHMul", "Int.instMulInt"],
  "name": "Int.instDvdInt",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.decidableEq",
  "constType": "Definition"},
 {"references": [], "name": "Pow.mk", "constType": "Other"},
 {"references":
  ["StrictOrderedRing",
   "OrderedAddCommGroup.mk",
   "AddCommGroup.mk",
   "AddGroup.mk",
   "SubNegMonoid.mk",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "StrictOrderedRing.toRing",
   "Ring.toNeg",
   "Ring.toSub",
   "Ring.sub_eq_add_neg",
   "Ring.zsmul",
   "Ring.zsmul_zero'",
   "Ring.zsmul_succ'",
   "Ring.zsmul_neg'",
   "Ring.add_left_neg",
   "AddCommMonoid.add_comm",
   "StrictOrderedRing.toPartialOrder",
   "StrictOrderedRing.add_le_add_left"],
  "name": "StrictOrderedRing.toOrderedAddCommGroup",
  "constType": "Definition"},
 {"references": [], "name": "LinearOrderedField.mk", "constType": "Other"},
 {"references":
  ["Int",
   "Dvd.dvd",
   "Int.instDvdInt",
   "Iff.mp",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Int.gcd",
   "Int.natAbs_dvd",
   "Iff.mpr",
   "Nat",
   "Nat.instDvdNat",
   "Int.coe_nat_dvd",
   "Nat.dvd_gcd",
   "Int.natAbs_dvd_natAbs"],
  "name": "Int.dvd_gcd",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "propext",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "neg_add_eq_iff_eq_add"],
  "name": "Mathlib.NumberTheory.FLT.Basic._auxLemma.4",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.mul.match_1",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.mul",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.add_assoc.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat",
   "Int.add_assoc.aux1",
   "Eq.mpr",
   "Nat.cast",
   "instNatCastInt",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.add_comm",
   "Eq.symm",
   "Int.add_assoc.aux2",
   "Int.negSucc",
   "of_eq_true",
   "Nat.succ",
   "instAddNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.add_comm",
   "Nat.add_left_comm",
   "eq_self"],
  "name": "Int.add_assoc",
  "constType": "Theorem"},
 {"references":
  ["CommRing",
   "CommSemiring.mk",
   "Ring.toSemiring",
   "CommRing.toRing",
   "CommRing.mul_comm"],
  "name": "CommRing.toCommSemiring",
  "constType": "Definition"},
 {"references": [], "name": "AddMonoidWithOne", "constType": "Other"},
 {"references": ["or_imp", "False"], "name": "not_or", "constType": "Theorem"},
 {"references":
  ["Decidable",
   "dite",
   "decidable_of_decidable_of_iff",
   "forall_prop_decidable.proof_1",
   "Not",
   "Decidable.isTrue",
   "forall_prop_decidable.proof_2"],
  "name": "forall_prop_decidable",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toOrd",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "Nat",
   "Nat.brecOn",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Nat.below",
   "pow_nonneg.match_1",
   "Unit",
   "Eq.mpr",
   "instOfNatNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "pow_zero",
   "zero_lt_one",
   "OrderedSemiring.zeroLEOneClass",
   "StrictOrderedSemiring.toOrderedSemiring",
   "NeZero.one",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "StrictOrderedSemiring.toNontrivial",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "pow_succ",
   "mul_pos",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "pow_pos",
  "constType": "Theorem"},
 {"references": ["Rat", "HMul.hMul", "instHMul", "Rat.instMulRat", "Rat.inv"],
  "name": "Rat.div",
  "constType": "Definition"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.mul_inv_cancel",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "LinearOrderedSemiring",
   "Nat",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Nat.linearOrderedCommSemiring"],
  "name": "Nat.linearOrderedSemiring",
  "constType": "Definition"},
 {"references": ["Not", "False.rec", "False"],
  "name": "absurd",
  "constType": "Definition"},
 {"references":
  ["OrderedAddCommGroup",
   "CovariantClass.mk",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "OrderedAddCommGroup.toAddCommGroup",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "OrderedAddCommGroup.add_le_add_left"],
  "name": "OrderedAddCommGroup.to_covariantClass_left_le",
  "constType": "Definition"},
 {"references": [], "name": "List.nil", "constType": "Other"},
 {"references": ["propext", "And", "True", "and_true_iff"],
  "name": "Mathlib.Data.List.TFAE._auxLemma.4",
  "constType": "Theorem"},
 {"references":
  ["Decidable",
   "Decidable.isTrue",
   "Not",
   "Decidable.isFalse",
   "Decidable.casesOn"],
  "name": "of_decide_eq_true.match_1",
  "constType": "Definition"},
 {"references": ["CancelCommMonoidWithZero", "GCDMonoid"],
  "name": "GCDMonoid.gcd",
  "constType": "Definition"},
 {"references":
  ["NonAssocSemiring",
   "Nat",
   "Nat.rec",
   "Eq",
   "Nat.cast",
   "NonAssocSemiring.toNatCast",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "of_eq_true",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "AddMonoidWithOne.toNatCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "instOfNatNat",
   "Eq.trans",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "True",
   "congr",
   "congrArg",
   "MulZeroClass.mul_zero",
   "Nat.cast_zero",
   "eq_self",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "Nat.cast_add",
   "congrFun",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "Nat.cast_succ",
   "mul_add",
   "Distrib.leftDistribClass",
   "NonUnitalNonAssocSemiring.toDistrib",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "MulOneClass.toOne",
   "mul_one"],
  "name": "Nat.cast_mul",
  "constType": "Theorem"},
 {"references":
  ["NoZeroDivisors.to_isDomain",
   "Rat",
   "CommRing.toRing",
   "Rat.commRing",
   "CommGroupWithZero.toNontrivial",
   "Rat.commGroupWithZero",
   "CancelMonoidWithZero.to_noZeroDivisors",
   "GroupWithZero.toCancelMonoidWithZero",
   "CommGroupWithZero.toGroupWithZero"],
  "name": "Rat.isDomain",
  "constType": "Definition"},
 {"references": [], "name": "Eq.refl", "constType": "Other"},
 {"references":
  ["Ring",
   "Int",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.mul",
   "Mathlib.Meta.NormNum.isInt_mul.match_1",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Int.cast",
   "Ring.toIntCast",
   "Eq.symm",
   "NonAssocRing.toIntCast",
   "Int.instMulInt",
   "Int.cast_mul"],
  "name": "Mathlib.Meta.NormNum.isInt_mul",
  "constType": "Theorem"},
 {"references": ["Membership.mk", "List", "List.Mem"],
  "name": "List.instMembershipList",
  "constType": "Definition"},
 {"references": ["Subtype", "Subtype.property"],
  "name": "Subtype.prop",
  "constType": "Theorem"},
 {"references":
  ["LinearOrder",
   "Lattice.mk",
   "SemilatticeSup.mk",
   "Sup.mk",
   "Max.max",
   "LinearOrder.toMax",
   "LinearOrder.toPartialOrder",
   "le_max_left",
   "le_max_right",
   "max_le",
   "Inf.mk",
   "Min.min",
   "LinearOrder.toMin",
   "min_le_left",
   "min_le_right",
   "le_min"],
  "name": "LinearOrder.toLattice",
  "constType": "Definition"},
 {"references": [], "name": "HPow.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Int.negOfNat.match_1",
   "Int",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "Unit",
   "Int.ofNat",
   "Int.negSucc"],
  "name": "Int.subNatNat",
  "constType": "Definition"},
 {"references": [], "name": "Lattice", "constType": "Other"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.toNonUnitalNonAssocSemiring",
  "constType": "Definition"},
 {"references": [], "name": "propext", "constType": "Axiom"},
 {"references":
  ["GroupWithZero",
   "dite",
   "Eq",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "DivInvMonoid.mk",
   "MonoidWithZero.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Inv.mk",
   "GroupWithZero.toInv",
   "GroupWithZero.toDiv",
   "GroupWithZero.div_eq_mul_inv",
   "GroupWithZero.zpow",
   "GroupWithZero.zpow_zero'",
   "GroupWithZero.zpow_succ'",
   "GroupWithZero.zpow_neg'",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "DivInvMonoid.toMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Classical.propDecidable",
   "of_eq_true",
   "Eq.trans",
   "MulZeroClass.toZero",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "True",
   "congr",
   "congrArg",
   "congrFun",
   "MulZeroClass.zero_mul",
   "GroupWithZero.inv_zero",
   "MulZeroClass.mul_zero",
   "eq_self",
   "Not",
   "_private.Mathlib.Algebra.GroupWithZero.Basic.0.inv_eq_of_mul",
   "SemigroupWithZero.toSemigroup",
   "MonoidWithZero.toSemigroupWithZero",
   "One.toOfNat1",
   "Monoid.toOne",
   "mul_assoc",
   "MulZeroClass.toMul",
   "mul_inv_cancel_left₀",
   "False",
   "eq_false",
   "not_false_eq_true",
   "mul_inv_cancel"],
  "name": "GroupWithZero.toDivisionMonoid.proof_2",
  "constType": "Theorem"},
 {"references":
  ["CommRing",
   "NonUnitalNonAssocSemiring.mul_zero",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_10",
  "constType": "Theorem"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.zsmul_succ'",
  "constType": "Definition"},
 {"references": ["Eq.rec", "Eq", "Iff", "Iff.rfl", "Or", "Eq.symm", "or_self"],
  "name": "or_self_iff",
  "constType": "Theorem"},
 {"references":
  ["List",
   "propext",
   "List.TFAE",
   "List.cons",
   "And",
   "Iff",
   "List.tfae_cons_cons"],
  "name": "Mathlib.Data.List.TFAE._auxLemma.2",
  "constType": "Theorem"},
 {"references":
  ["Semigroup",
   "Eq.symm",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "mul_assoc"],
  "name": "Mathlib.Algebra.GroupPower.Basic._auxLemma.1",
  "constType": "Theorem"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.mul_lt_mul_of_pos_left",
  "constType": "Definition"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "le_not_le_of_lt.match_1",
   "And",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "Iff.mp",
   "lt_iff_le_not_le"],
  "name": "le_not_le_of_lt",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocSemiring",
   "MulZeroClass.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "NonUnitalNonAssocSemiring.toMulZeroClass",
  "constType": "Definition"},
 {"references": [], "name": "DivisionRing", "constType": "Other"},
 {"references": ["Div", "HDiv.mk", "Div.div"],
  "name": "instHDiv",
  "constType": "Definition"},
 {"references": ["One"], "name": "One.one", "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Eq.symm",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "Nat.cast_add"],
  "name": "Mathlib.Data.Nat.Cast.Defs._auxLemma.3",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.max_def",
  "constType": "Definition"},
 {"references": [], "name": "Iff", "constType": "Other"},
 {"references": [], "name": "StrictOrderedSemiring.mk", "constType": "Other"},
 {"references":
  ["List",
   "List.TFAE",
   "Nat",
   "autoParam",
   "Eq",
   "Option",
   "List.get?",
   "Option.some",
   "_auto._@.Mathlib.Data.List.TFAE._hyg.507",
   "_auto._@.Mathlib.Data.List.TFAE._hyg.546",
   "List.get?_mem"],
  "name": "List.TFAE.out",
  "constType": "Theorem"},
 {"references": [], "name": "HasDistribNeg", "constType": "Other"},
 {"references":
  ["NonUnitalCommSemiring",
   "CommSemigroup.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "NonUnitalSemiring.mul_assoc",
   "NonUnitalCommSemiring.mul_comm"],
  "name": "NonUnitalCommSemiring.toCommSemigroup",
  "constType": "Definition"},
 {"references": ["List", "List.nil", "List.cons", "List.rec"],
  "name": "List.casesOn",
  "constType": "Definition"},
 {"references": ["LinearOrderedAddCommGroup"],
  "name": "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
  "constType": "Definition"},
 {"references": [], "name": "PartialOrder.mk", "constType": "Other"},
 {"references": ["PartialOrder"],
  "name": "PartialOrder.toPreorder",
  "constType": "Definition"},
 {"references": ["LinearOrderedAddCommMonoid"],
  "name": "LinearOrderedAddCommMonoid.toLinearOrder",
  "constType": "Definition"},
 {"references":
  ["AddGroupWithOne",
   "Eq.mpr",
   "Eq",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "OfNat.ofNat",
   "Int",
   "instOfNatInt",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "id",
   "Eq.ndrec",
   "instNatCastInt",
   "Eq.refl",
   "Int.cast_ofNat",
   "Nat",
   "instOfNatNat",
   "Nat.cast_one"],
  "name": "Int.cast_one",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "Semiring",
   "Nat",
   "CommSemiring.toSemiring",
   "Nat.commSemiring"],
  "name": "Nat.semiring",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.zero", "Nat.succ", "Nat.rec"],
  "name": "Nat.casesOn",
  "constType": "Definition"},
 {"references": [], "name": "OrderBot.mk", "constType": "Other"},
 {"references":
  ["Int",
   "Nat",
   "Nat.rec",
   "Eq",
   "Int.natAbs",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "instHPow",
   "Monoid.toNatPow",
   "Nat.monoid",
   "Eq.refl",
   "Nat.zero",
   "Eq.mpr",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Int.instMonoidInt",
   "id",
   "Eq.ndrec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "pow_succ'",
   "instMulNat",
   "Int.instMulInt",
   "Int.natAbs_mul"],
  "name": "Int.natAbs_pow",
  "constType": "Theorem"},
 {"references": [], "name": "Semifield.mk", "constType": "Other"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.toAddMonoid",
  "constType": "Definition"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.toSemiring",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Iff.intro",
   "LE.le",
   "Int",
   "Int.instLEInt",
   "Nat.cast",
   "instNatCastInt",
   "instLENat",
   "Int.ofNat_le.match_1",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Int.le.dest",
   "Nat.le.intro",
   "Int.ofNat.inj",
   "instAddNat",
   "Eq.trans",
   "Int.ofNat",
   "Int.ofNat_add",
   "Int.ofNat_le.match_2",
   "Nat.le.dest",
   "Int.le.intro",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm"],
  "name": "Int.ofNat_le",
  "constType": "Theorem"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.inv_zero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.below",
   "Nat.zero_add.match_1",
   "Unit",
   "rfl",
   "Nat.succ",
   "congrArg",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.zero_add",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "Mathlib.Meta.NormNum.IsNat",
   "Nat.add",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Mathlib.Meta.NormNum.IsNat.casesOn",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.isNat_add.match_1",
  "constType": "Definition"},
 {"references": ["neg_sq"], "name": "neg_pow_two", "constType": "Theorem"},
 {"references":
  ["Semiring",
   "IsDomain",
   "CancelMonoidWithZero.mk",
   "Semiring.toMonoidWithZero",
   "IsDomain.toIsCancelMulZero"],
  "name": "IsDomain.toCancelMonoidWithZero",
  "constType": "Definition"},
 {"references": ["AddSemigroup"],
  "name": "AddSemigroup.toAdd",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "dite",
   "Decidable",
   "LE.le",
   "instLENat",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.true",
   "instDecidableEqBool",
   "Decidable.isTrue",
   "Nat.le_of_ble_eq_true",
   "Not",
   "Decidable.isFalse",
   "Nat.not_le_of_not_ble_eq_true"],
  "name": "Nat.decLe",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "Eq.symm",
  "constType": "Theorem"},
 {"references": [],
  "name": "Mathlib.Meta.NormNum.IsNat.mk",
  "constType": "Other"},
 {"references":
  ["GroupWithZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "GroupWithZero.toMonoidWithZero",
   "IsUnit.div_self",
   "GroupWithZero.toDivisionMonoid",
   "Ne.isUnit"],
  "name": "div_self",
  "constType": "Theorem"},
 {"references":
  ["StrictOrderedRing",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedRing.toStrictOrderedSemiring",
   "GT.gt",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "StrictOrderedRing.toRing",
   "Neg.neg",
   "Ring.toNeg",
   "neg_of_neg_pos",
   "AddGroupWithOne.toAddGroup",
   "Ring.toAddGroupWithOne",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Eq.mpr",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "NegZeroClass.toNeg",
   "id",
   "Eq",
   "Mathlib.Algebra.Order.Group.Defs._auxLemma.10",
   "Eq.mp",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "Eq.trans",
   "congrFun",
   "congrArg",
   "neg_mul",
   "Std.Classes.Order._auxLemma.4",
   "mul_pos_of_neg_of_neg",
   "neg_neg_of_pos"],
  "name": "Linarith.mul_neg",
  "constType": "Theorem"},
 {"references": [], "name": "LE", "constType": "Other"},
 {"references": ["Nat", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.add_assoc.match_1",
  "constType": "Definition"},
 {"references": ["Pow", "HPow.mk", "Pow.pow"],
  "name": "instHPow",
  "constType": "Definition"},
 {"references":
  ["inferInstance", "Ring", "Int", "CommRing.toRing", "Int.instCommRingInt"],
  "name": "Int.instRingInt",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Iff.intro",
   "Eq",
   "Int",
   "Nat.cast",
   "instNatCastInt",
   "Int.ofNat.inj",
   "congrArg"],
  "name": "Int.ofNat_inj",
  "constType": "Theorem"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.inv_zero",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.pow_succ",
   "Nat.mul_comm"],
  "name": "Nat.pow_succ'",
  "constType": "Theorem"},
 {"references": [], "name": "NonUnitalCommSemiring", "constType": "Other"},
 {"references": ["CommRing"],
  "name": "CommRing.mul_comm",
  "constType": "Definition"},
 {"references":
  ["CommRing",
   "Int",
   "Int.instCommRingInt",
   "LinearOrder",
   "Int.instLinearOrderInt",
   "Nontrivial",
   "Int.instNontrivialInt",
   "LinearOrderedCommRing.mk",
   "LinearOrderedRing.mk",
   "StrictOrderedRing.mk",
   "CommRing.toRing",
   "LinearOrder.toPartialOrder",
   "Int.add_le_add_left",
   "Int.linearOrderedCommRing.proof_1",
   "Int.linearOrderedCommRing.proof_2",
   "Int.mul_pos",
   "LinearOrder.toMin",
   "LinearOrder.toMax",
   "LinearOrder.toOrd",
   "LinearOrder.le_total",
   "LinearOrder.decidableLE",
   "LinearOrder.decidableEq",
   "LinearOrder.decidableLT",
   "LinearOrder.min_def",
   "LinearOrder.max_def",
   "LinearOrder.compare_eq_compareOfLessAndEq",
   "CommRing.mul_comm"],
  "name": "Int.linearOrderedCommRing",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "of_eq_true",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "add_assoc",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_lt",
  "constType": "Theorem"},
 {"references": ["Iff.refl"], "name": "Iff.rfl", "constType": "Theorem"},
 {"references":
  ["Nat",
   "Or.casesOn",
   "LT.lt",
   "instLTNat",
   "GE.ge",
   "instLENat",
   "Or",
   "Eq",
   "Nat.lt_or_ge",
   "Int",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Int.negSucc",
   "Int.subNatNat",
   "instMulNat",
   "Nat.succ",
   "Or.inl",
   "Eq.mpr",
   "Nat.pred",
   "HSub.hSub",
   "instHSub",
   "instSubNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.subNatNat_of_lt",
   "Nat.cast",
   "instNatCastInt",
   "Int.subNatNat_of_le",
   "Nat.le_of_lt",
   "of_eq_true",
   "Int.ofNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.succ_pred_eq_of_pos",
   "Nat.sub_pos_of_lt",
   "Nat.mul_sub_left_distrib",
   "eq_self",
   "Nat.mul_lt_mul_of_pos_left",
   "Nat.succ_pos",
   "Or.inr",
   "GT.gt",
   "Neg.neg",
   "Int.instNegInt",
   "Int.negSucc_mul_ofNat",
   "Eq.symm",
   "Nat.le_antisymm",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.subNatNat_self",
   "Int.mul_zero"],
  "name": "Int.negSucc_mul_subNatNat",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.decidableLE",
  "constType": "Definition"},
 {"references": [], "name": "Neg.mk", "constType": "Other"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.zpow_zero'",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "AddGroup",
   "Int",
   "AddGroupWithOne.toAddGroup",
   "Ring.toAddGroupWithOne",
   "CommRing.toRing",
   "Int.instCommRingInt"],
  "name": "Int.instAddGroupInt",
  "constType": "Definition"},
 {"references": ["Int", "Iff.rfl", "LT.lt", "Int.instLTInt"],
  "name": "Int.lt_iff_add_one_le",
  "constType": "Theorem"},
 {"references": ["Zero"], "name": "Zero.zero", "constType": "Definition"},
 {"references": [], "name": "Preorder", "constType": "Other"},
 {"references":
  ["Int",
   "Eq.mpr",
   "LE.le",
   "Int.instLEInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "OfNat.ofNat",
   "instOfNatNat",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Int.natAbs_sq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "sq",
   "instLENat",
   "instMulNat",
   "Eq.trans",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Int.instSemiringInt",
   "NonAssocSemiring.toNatCast",
   "congrArg",
   "Mathlib.Data.Nat.Cast.Basic._auxLemma.1",
   "Mathlib.Data.Nat.Cast.Order._auxLemma.8",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "OrderedSemiring.zeroLEOneClass",
   "OrderedCommSemiring.toOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "StrictOrderedSemiring.to_charZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Nat.le_mul_self"],
  "name": "Int.natAbs_le_self_sq",
  "constType": "Theorem"},
 {"references": ["Semiring", "IsDomain"],
  "name": "IsDomain.toIsCancelMulZero",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "_private.Mathlib.Algebra.Group.Defs.0.neg_eq_of_add",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "Eq.mpr",
   "Eq",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "add_assoc",
   "add_neg_cancel_left",
   "add_right_neg"],
  "name": "AddGroup.toSubtractionMonoid.proof_2",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "AddMonoid.nsmul_zero",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid"],
  "name": "AddGroup.toAddCancelMonoid.proof_4",
  "constType": "Theorem"},
 {"references": ["CommMagma"],
  "name": "CommMagma.mul_comm",
  "constType": "Definition"},
 {"references": ["Mul.mk", "Rat", "Rat.mul"],
  "name": "Rat.instMulRat",
  "constType": "Definition"},
 {"references":
  ["rfl",
   "Int",
   "NatCast.natCast",
   "NatCast.mk",
   "Nat",
   "Nat.cast",
   "instNatCastInt",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Int.instCommRingInt.proof_2",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Eq",
   "Bool",
   "Nat.beq",
   "Bool.false",
   "Nat.brecOn",
   "False",
   "Nat.below",
   "Nat.ne_of_beq_eq_false.match_1",
   "Nat.zero",
   "Bool.noConfusion",
   "Nat.succ",
   "Nat.noConfusion",
   "absurd",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.ne_of_beq_eq_false",
  "constType": "Theorem"},
 {"references": ["DivisionCommMonoid"],
  "name": "DivisionCommMonoid.toDivisionMonoid",
  "constType": "Definition"},
 {"references": [], "name": "AddCommMonoid.mk", "constType": "Other"},
 {"references": ["Field"],
  "name": "Field.qsmul_eq_mul'",
  "constType": "Definition"},
 {"references": ["eq_true", "List.Chain", "List.nil", "List.Chain.nil"],
  "name": "Mathlib.Data.List.TFAE._auxLemma.6",
  "constType": "Theorem"},
 {"references": ["AddZeroClass"],
  "name": "AddZeroClass.toZero",
  "constType": "Definition"},
 {"references": [], "name": "Eq", "constType": "Other"},
 {"references": [], "name": "MulOneClass.mk", "constType": "Other"},
 {"references": ["AddGroupWithOne"],
  "name": "AddGroupWithOne.toSub",
  "constType": "Definition"},
 {"references": ["Monoid"], "name": "Monoid.toOne", "constType": "Definition"},
 {"references":
  ["Preorder",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "lt_of_le_not_le.match_1",
   "LT.lt",
   "Preorder.toLT",
   "Iff.mpr",
   "And",
   "lt_iff_le_not_le",
   "And.intro"],
  "name": "lt_of_le_not_le",
  "constType": "Theorem"},
 {"references": ["Field"],
  "name": "Field.zpow_succ'",
  "constType": "Definition"},
 {"references": ["Decidable"],
  "name": "DecidableRel",
  "constType": "Definition"},
 {"references": ["Ring", "Semiring.natCast_succ", "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_9",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Fermat42",
   "ne_zero_pow",
   "Semiring.toMonoidWithZero",
   "Int.instSemiringInt",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "two_ne_zero",
   "LinearOrderedCommMonoidWithZero.toZero",
   "Nat.linearOrderedCommMonoidWithZero",
   "NeZero.succ",
   "ne_of_gt",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Eq.mpr",
   "LT.lt",
   "Preorder.toLT",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Int.instMonoidInt",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "And.right",
   "Ne",
   "instOfNatInt",
   "And",
   "Mathlib.Tactic.Ring.of_eq",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Int.instCommSemiringInt",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.add_congr",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Nat.semiring",
   "Mathlib.Tactic.Ring.pow_add",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.one_mul",
   "Mathlib.Tactic.Ring.one_pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "add_pos",
   "AddMonoid.toAddZeroClass",
   "Int.instAddMonoidInt",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddZeroClass.toAdd",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "Int.instAddGroupInt",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "sq_pos_of_ne_zero",
   "pow_ne_zero",
   "IsDomain.to_noZeroDivisors",
   "Int.instRingInt",
   "LinearOrderedRing.isDomain",
   "And.left"],
  "name": "Fermat42.ne_zero",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Nat.semiring",
   "OfNat.ofNat",
   "instOfNatNat",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "True",
   "congrArg",
   "congrFun",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "congr",
   "Nat.cast_one",
   "pow_one",
   "mul_one",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "add_zero",
   "AddMonoid.toAddZeroClass",
   "AddMonoidWithOne.toAddMonoid",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.atom_pf",
  "constType": "Theorem"},
 {"references": ["Monoid", "Exists", "Units", "Eq", "Units.val"],
  "name": "IsUnit",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "CovariantClass.mk",
   "Subtype",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Subtype.val",
   "StrictOrderedSemiring.mul_lt_mul_of_pos_left",
   "Subtype.prop"],
  "name": "StrictOrderedSemiring.toPosMulStrictMono",
  "constType": "Definition"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.zsmul",
  "constType": "Definition"},
 {"references": ["Semifield"],
  "name": "Semifield.zpow_zero'",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "of_eq_true",
   "Or",
   "And",
   "Even",
   "instAddNat",
   "Not",
   "Odd",
   "Nat.semiring",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "Mathlib.Data.Nat.Parity._auxLemma.4",
   "Mathlib.Logic.Basic._auxLemma.10",
   "and_self",
   "congrFun",
   "eq_true",
   "Decidable.em",
   "Nat.instDecidablePredNatEvenInstAddNat"],
  "name": "Nat.even_xor_odd",
  "constType": "Theorem"},
 {"references": [], "name": "Or.inl", "constType": "Other"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.add_comm.match_1",
  "constType": "Definition"},
 {"references":
  ["MonoidWithZero",
   "NoZeroDivisors",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "MonoidWithZero.toZero",
   "Nat",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "mt",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "pow_eq_zero"],
  "name": "pow_ne_zero",
  "constType": "Theorem"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Mathlib.Tactic.Ring.cast_pos.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Nat.rawCast",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "of_eq_true",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddMonoidWithOne.toAddMonoid",
   "AddZeroClass.toZero",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "add_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.cast_pos",
  "constType": "Theorem"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.mul_add.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Nat.succ", "constType": "Other"},
 {"references":
  ["Nat",
   "rfl",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.add_zero",
  "constType": "Theorem"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.zpow_zero'",
  "constType": "Definition"},
 {"references": ["Field"],
  "name": "Field.toCommRing",
  "constType": "Definition"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow_neg'",
  "constType": "Definition"},
 {"references": [], "name": "True", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Mathlib.Meta.NormNum.IsNat.casesOn"],
  "name": "Mathlib.Tactic.Ring.add_overlap_pf_zero.match_1",
  "constType": "Definition"},
 {"references": ["Nat", "rfl", "Int", "Int.negOfNat"],
  "name": "Int.negOfNat_eq",
  "constType": "Theorem"},
 {"references": [], "name": "Mul.mk", "constType": "Other"},
 {"references":
  ["AddGroup",
   "Iff.intro",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "SubNegMonoid.toNeg",
   "neg_add_cancel_right",
   "add_neg_cancel_right"],
  "name": "add_neg_eq_iff_eq_add",
  "constType": "Theorem"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.mul_le_mul_of_nonneg_right",
  "constType": "Definition"},
 {"references": ["PartialOrder", "PartialOrder.le_antisymm"],
  "name": "le_antisymm",
  "constType": "Theorem"},
 {"references": ["Trans.mk", "Eq", "Eq.rec", "Eq.symm"],
  "name": "instTransEq",
  "constType": "Definition"},
 {"references":
  ["CommSemigroup",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "Eq.trans",
   "Semigroup.toMul",
   "CommSemigroup.toSemigroup",
   "True",
   "congr",
   "congrArg",
   "mul_left_comm",
   "mul_assoc",
   "eq_self"],
  "name": "mul_mul_mul_comm",
  "constType": "Theorem"},
 {"references": ["propext", "True", "Iff.intro", "trivial"],
  "name": "eq_true",
  "constType": "Theorem"},
 {"references": [], "name": "Preorder.mk", "constType": "Other"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "Eq",
   "Bool",
   "Nat.beq",
   "Bool.false",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsNat.casesOn",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.isNat_eq_false.match_1",
  "constType": "Definition"},
 {"references":
  ["Field.mk",
   "Rat",
   "Rat.commRing",
   "Rat.instInvRat",
   "Rat.instDivRat",
   "Rat.field.proof_1",
   "zpowRec",
   "Semiring.toOne",
   "Ring.toSemiring",
   "CommRing.toRing",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Rat.field.proof_2",
   "Rat.field.proof_3",
   "Rat.field.proof_4",
   "Rat.nontrivial",
   "RatCast.mk",
   "Rat.cast",
   "instRatCastRat",
   "CommGroupWithZero.mul_inv_cancel",
   "Rat.commGroupWithZero",
   "CommGroupWithZero.inv_zero",
   "Rat.field.proof_5",
   "HMul.hMul",
   "instHMul",
   "Rat.instMulRat",
   "Rat.field.proof_6"],
  "name": "Rat.field",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.le", "Nat.succ"],
  "name": "Nat.lt",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsNat.casesOn",
   "Eq",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.IsNat.to_isInt.match_1",
  "constType": "Definition"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.emod.match_1",
  "constType": "Definition"},
 {"references":
  ["CommRing.mk",
   "Int",
   "Ring.mk",
   "Semiring.mk",
   "NonUnitalSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "AddMonoid.mk",
   "AddSemigroup.mk",
   "Int.instAddInt",
   "Int.add_assoc",
   "Zero.ofOfNat0",
   "instOfNatInt",
   "Int.zero_add",
   "Int.add_zero",
   "Nat",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.zero_mul",
   "Int.instCommRingInt.proof_1",
   "Int.add_comm",
   "Int.mul_add",
   "Int.add_mul",
   "Int.mul_zero",
   "Int.mul_assoc",
   "One.ofOfNat1",
   "Int.one_mul",
   "Int.mul_one",
   "NatCast.mk",
   "Int.instCommRingInt.proof_2",
   "Int.instCommRingInt.proof_3",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "Int.instCommRingInt.proof_4",
   "Int.instCommRingInt.proof_5",
   "Int.instNegInt",
   "Int.instSubInt",
   "Int.sub_eq_add_neg",
   "Int.instCommRingInt.proof_6",
   "Int.instCommRingInt.proof_7",
   "Int.add_left_neg",
   "IntCast.mk",
   "Int.instCommRingInt.proof_8",
   "Int.instCommRingInt.proof_9",
   "Int.mul_comm"],
  "name": "Int.instCommRingInt",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocCommSemiring"],
  "name": "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.compare_eq_compareOfLessAndEq",
  "constType": "Definition"},
 {"references": [], "name": "CommSemiring", "constType": "Other"},
 {"references": [], "name": "Bool.true", "constType": "Other"},
 {"references": ["LinearOrder", "le_of_not_lt"],
  "name": "le_of_not_gt",
  "constType": "Theorem"},
 {"references":
  ["Ring", "Eq", "Neg.neg", "Ring.toNeg", "Eq.ndrec", "Eq.refl", "Eq.symm"],
  "name": "Mathlib.Tactic.Ring.neg_congr",
  "constType": "Theorem"},
 {"references": [], "name": "One", "constType": "Other"},
 {"references": ["Semigroup", "Semigroup.mul_assoc"],
  "name": "mul_assoc",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "rfl",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.mul_zero",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "Int",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.add",
   "Mathlib.Meta.NormNum.isInt_add.match_1",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Int.cast",
   "Ring.toIntCast",
   "Eq.symm",
   "AddGroupWithOne.toIntCast",
   "Ring.toAddGroupWithOne",
   "Int.instAddInt",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Int.cast_add"],
  "name": "Mathlib.Meta.NormNum.isInt_add",
  "constType": "Theorem"},
 {"references": ["Ring"],
  "name": "Ring.intCast_ofNat",
  "constType": "Definition"},
 {"references": ["DivInvMonoid", "DivInvMonoid.div_eq_mul_inv"],
  "name": "div_eq_mul_inv",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedRing",
   "Nat",
   "Even",
   "instAddNat",
   "Eq.mpr",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "Abs.abs",
   "Neg.toHasAbs",
   "Ring.toNeg",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "LinearOrderedRing.toLinearOrder",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "abs_pow",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommGroup.toPartialOrder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "LinearOrderedRing.toLinearOrderedAddCommGroup",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "OrderedAddCommGroup.toAddCommGroup",
   "NegZeroClass.toNeg",
   "LinearOrderedAddCommGroup.toLinearOrder",
   "propext",
   "abs_eq_self",
   "Even.pow_nonneg"],
  "name": "Even.pow_abs",
  "constType": "Theorem"},
 {"references": ["Distrib"],
  "name": "Distrib.toAdd",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "LE.le",
   "instLENat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.below",
   "Nat.zero_le.match_1",
   "Unit",
   "Nat.zero",
   "Nat.le.refl",
   "Nat.succ",
   "Nat.le.step",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.zero_le",
  "constType": "Theorem"},
 {"references": [], "name": "IsRightCancelAdd.mk", "constType": "Other"},
 {"references": ["Monoid"],
  "name": "Monoid.npow_zero",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "AddCommGroup",
   "Int",
   "Ring.toAddCommGroup",
   "CommRing.toRing",
   "Int.instCommRingInt"],
  "name": "Int.instAddCommGroupInt",
  "constType": "Definition"},
 {"references": ["OrderedCommSemiring"],
  "name": "OrderedCommSemiring.toOrderedSemiring",
  "constType": "Definition"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.neg.match_1",
  "constType": "Definition"},
 {"references": [], "name": "CharZero", "constType": "Other"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.toPartialOrder",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "List.tfae_of_cycle",
   "FermatLastTheoremWith",
   "Nat.semiring",
   "Int",
   "Int.instSemiringInt",
   "List.cons",
   "Rat",
   "Rat.semiring",
   "List.nil",
   "List.Chain.cons",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Or.casesOn",
   "Even",
   "instAddNat",
   "Odd",
   "Or",
   "False",
   "Nat.even_or_odd",
   "Int.natAbs",
   "ne_of_gt",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "LinearOrderedCommMonoidWithZero.toZero",
   "Nat.linearOrderedCommMonoidWithZero",
   "Iff.mpr",
   "LT.lt",
   "instLTNat",
   "instOfNatNat",
   "instOfNatInt",
   "Int.natAbs_pos",
   "Iff.mp",
   "Nat.cast",
   "instNatCastInt",
   "Int.coe_nat_inj'",
   "Eq.mpr",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Int.instRingInt",
   "Abs.abs",
   "Neg.toHasAbs",
   "Int.instNegInt",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "Int.instLinearOrderInt",
   "id",
   "congr",
   "AddMonoidWithOne.toNatCast",
   "Semiring.toNatCast",
   "Nat.monoid",
   "congrArg",
   "Eq.trans",
   "Nat.cast_add",
   "Nat.cast_pow",
   "congrFun",
   "Int.coe_natAbs",
   "of_eq_true",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "Ring.toNeg",
   "StrictOrderedRing.toRing",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedRing.toLinearOrder",
   "True",
   "LinearOrderedRing",
   "Even.pow_abs",
   "eq_self",
   "Preorder.toLT",
   "LinearOrder.toPartialOrder",
   "Ne.lt_or_lt",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Int.instAddGroupInt",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Int.instMonoidInt",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "One.toOfNat1",
   "Monoid.toOne",
   "abs_of_neg",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "eq_true",
   "neg_pow",
   "Mathlib.NumberTheory.FLT.Basic._auxLemma.1",
   "Distrib.leftDistribClass",
   "Int.instDistribInt",
   "LT.lt.not_lt",
   "StrictOrderedRing.toPartialOrder",
   "Int.instHPowIntNat",
   "pow_pos",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "lt_of_le_of_lt",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Int.instCommSemiringInt",
   "Mathlib.Meta.Positivity.nonneg_of_isNat",
   "OrderedCommSemiring.toOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Eq.refl",
   "Eq.trans_lt",
   "Int.instLTInt",
   "Eq.symm",
   "add_neg",
   "AddMonoid.toAddZeroClass",
   "Int.instAddMonoidInt",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddZeroClass.toAdd",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "Odd.pow_neg",
   "_private.Mathlib.Tactic.Positivity.Basic.0.Mathlib.Meta.Positivity.int_natAbs_pos",
   "inferInstance",
   "PartialOrder",
   "Zero",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "abs_of_pos",
   "Monoid",
   "HasDistribNeg",
   "Odd.neg_pow",
   "Mathlib.NumberTheory.FLT.Basic._auxLemma.2",
   "Mathlib.NumberTheory.FLT.Basic._auxLemma.3",
   "Mathlib.NumberTheory.FLT.Basic._auxLemma.4",
   "Mathlib.NumberTheory.FLT.Basic._auxLemma.5",
   "Int.instAddInt",
   "add_pos",
   "Rat.den",
   "Int.instMulInt",
   "Rat.num",
   "_private.Mathlib.Tactic.Positivity.Basic.0.Mathlib.Meta.Positivity.mul_ne_zero_of_ne_zero_of_pos",
   "StrictOrderedSemiring.toOrderedSemiring",
   "IsDomain.to_noZeroDivisors",
   "LinearOrderedRing.isDomain",
   "Eq.mp",
   "Eq.ndrec",
   "Rat.instOfNatRat",
   "propext",
   "Rat.num_ne_zero",
   "OrderedSemiring.toPartialOrder",
   "OrderedSemiring.toSemiring",
   "Nat.cast_pos",
   "Int.instNontrivialInt",
   "Mathlib.Meta.Positivity.lt_of_le_of_ne'",
   "zero_le",
   "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
   "Nat.canonicallyOrderedCommSemiring",
   "_private.Mathlib.Tactic.Positivity.Basic.0.Mathlib.Meta.Positivity.mul_ne_zero_of_pos_of_ne_zero",
   "mul_pos",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "StrictOrderedSemiring.toPosMulStrictMono",
   "Rat.monoid",
   "Rat.instMulRat",
   "Int.cast_injective",
   "DivisionRing.toRing",
   "Rat.divisionRing",
   "StrictOrderedSemiring.to_charZero",
   "Rat.instLinearOrderedSemiringRat",
   "HDiv.hDiv",
   "instHDiv",
   "GroupWithZero.toDiv",
   "DivisionSemiring.toGroupWithZero",
   "Semifield.toDivisionSemiring",
   "LinearOrderedSemifield.toSemifield",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Rat.instLinearOrderedFieldRat",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "div_left_inj'",
   "Ring.toSemiring",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "NonAssocRing.toIntCast",
   "Ring.toIntCast",
   "Int.cast_add",
   "Int.cast_pow",
   "Int.cast_mul",
   "Int.cast_ofNat",
   "DivisionSemiring.toDiv",
   "DivisionSemiring.toSemiring",
   "DivInvMonoid.toDiv",
   "DivisionMonoid.toDivInvMonoid",
   "DivisionCommMonoid.toDivisionMonoid",
   "CommGroupWithZero.toDivisionCommMonoid",
   "Rat.commGroupWithZero",
   "DivInvMonoid.toMonoid",
   "add_div",
   "Mathlib.NumberTheory.FLT.Basic._auxLemma.6",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "GroupWithZero.toDivisionMonoid",
   "mul_div_mul_comm",
   "Rat.instDivRat",
   "Rat.instIntCastRat",
   "Rat.num_div_den",
   "div_self",
   "Rat.instPartialOrderRat",
   "CommGroupWithZero.toCommMonoidWithZero",
   "Rat.instOrderedSemiringRat",
   "Rat.nontrivial",
   "mul_one",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "one_mul",
   "LT.lt.ne'",
   "Rat.den_pos",
   "List.Chain.nil",
   "cast",
   "AddMonoid.toZero",
   "Not",
   "implies_congr",
   "Nat.cast_zero",
   "Mathlib.Algebra.CharZero.Defs._auxLemma.2",
   "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
   "Mathlib.Data.Nat.Cast.Defs._auxLemma.3"],
  "name": "fermatLastTheoremWith_nat_int_rat_tfae",
  "constType": "Theorem"},
 {"references": ["Ring", "Semiring.natCast_zero", "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_8",
  "constType": "Theorem"},
 {"references": ["PUnit"], "name": "Unit", "constType": "Definition"},
 {"references":
  ["inferInstance",
   "CommSemiring",
   "Rat",
   "CommRing.toCommSemiring",
   "Rat.commRing"],
  "name": "Rat.commSemiring",
  "constType": "Definition"},
 {"references": ["Add.mk", "Nat", "Nat.add"],
  "name": "instAddNat",
  "constType": "Definition"},
 {"references": ["eq_true", "Eq", "rfl"],
  "name": "eq_self",
  "constType": "Theorem"},
 {"references": ["NonUnitalNonAssocRing"],
  "name": "NonUnitalNonAssocRing.right_distrib",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Monoid",
   "Int",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "CommRing.toCommSemiring",
   "Int.instCommRingInt"],
  "name": "Int.instMonoidInt",
  "constType": "Definition"},
 {"references":
  ["AddGroupWithOne",
   "CharZero",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Int",
   "Eq.mpr",
   "Iff",
   "Eq",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "HSub.hSub",
   "instHSub",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "AddGroupWithOne.toAddGroup",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "propext",
   "sub_eq_zero",
   "Int.instSubInt",
   "AddGroupWithOne.toSub",
   "Int.cast_sub",
   "instOfNatInt",
   "Int.cast_eq_zero",
   "Int.instAddGroupInt",
   "Iff.rfl"],
  "name": "Int.cast_inj",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Int.natAbs_mul_self.match_1",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Nat",
   "Int.ofNat",
   "instMulNat",
   "instOfNatNat",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.one_mul",
   "Int.negSucc"],
  "name": "Int.one_mul",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "Monoid",
   "Rat",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Rat.semiring"],
  "name": "Rat.monoid",
  "constType": "Definition"},
 {"references": [], "name": "LinearOrderedField", "constType": "Other"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow_succ'",
  "constType": "Definition"},
 {"references":
  ["Eq.rec",
   "Not",
   "Eq",
   "Mathlib.Tactic.PushNeg.not_not_eq",
   "Ne",
   "Eq.symm",
   "ne_eq"],
  "name": "Mathlib.Tactic.PushNeg.not_ne_eq",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq.rec",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq",
   "Int.mul_zero",
   "Int.mul_comm"],
  "name": "Int.zero_mul",
  "constType": "Theorem"},
 {"references":
  ["Finset",
   "CommMonoid",
   "Eq.trans",
   "Multiset.prod",
   "Multiset.map",
   "Function.const",
   "Finset.val",
   "Multiset.replicate",
   "FunLike.coe",
   "AddMonoidHom",
   "Multiset",
   "Nat",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Multiset.instCanonicallyOrderedAddCommMonoidMultiset",
   "Nat.addMonoid",
   "AddHomClass.toFunLike",
   "AddZeroClass.toAdd",
   "AddMonoidHomClass.toAddHomClass",
   "AddMonoidHom.addMonoidHomClass",
   "Multiset.card",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "CommMonoid.toMonoid",
   "Finset.card",
   "congr_arg",
   "Multiset.map_const",
   "Multiset.prod_replicate"],
  "name": "Finset.prod_const",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Neg.neg",
   "Int.instNegInt"],
  "name": "Int.sub",
  "constType": "Definition"},
 {"references": ["StrictOrderedCommSemiring"],
  "name": "StrictOrderedCommSemiring.mul_comm",
  "constType": "Definition"},
 {"references":
  ["MulZeroClass.zero_mul",
   "Rat",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Rat.commRing"],
  "name": "Rat.commGroupWithZero.proof_1",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocRing",
   "neg_neg",
   "SubtractionMonoid.toInvolutiveNeg",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "NonUnitalNonAssocRing.toAddCommGroup"],
  "name": "NonUnitalNonAssocRing.toHasDistribNeg.proof_1",
  "constType": "Theorem"},
 {"references": ["Not", "by_contra"],
  "name": "Mathlib.Tactic.Contrapose.mtr",
  "constType": "Theorem"},
 {"references": ["CommRing"],
  "name": "CommRing.toRing",
  "constType": "Definition"},
 {"references": ["LE", "OrderBot"],
  "name": "OrderBot.toBot",
  "constType": "Definition"},
 {"references": ["IntCast", "IntCast.intCast"],
  "name": "Int.cast",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Mathlib.Tactic.Ring.cast_zero.match_1",
   "Eq",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "of_eq_true",
   "Eq.trans",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "True",
   "congrFun",
   "congrArg",
   "Nat.cast_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.cast_zero",
  "constType": "Theorem"},
 {"references": ["Mod.mk", "Nat", "Nat.mod"],
  "name": "Nat.instModNat",
  "constType": "Definition"},
 {"references":
  ["PartialOrder",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "Ne",
   "lt_of_le_not_le",
   "mt",
   "Eq",
   "le_antisymm"],
  "name": "lt_of_le_of_ne",
  "constType": "Theorem"},
 {"references":
  ["AddGroupWithOne",
   "Eq.trans",
   "IntCast.intCast",
   "AddGroupWithOne.toIntCast",
   "Nat.cast",
   "Int",
   "instNatCastInt",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "AddMonoidWithOne.toNatCast",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "AddGroupWithOne.toAddGroup",
   "AddGroupWithOne.intCast_ofNat",
   "Nat.cast_zero"],
  "name": "Int.cast_zero",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "LE.le",
   "Int.instLEInt",
   "Int.le_trans.match_1",
   "Exists",
   "Nat",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.le.dest",
   "Int.le.intro",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.add_assoc"],
  "name": "Int.add_le_add_left",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocSemiring",
   "Distrib.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.left_distrib",
   "NonUnitalNonAssocSemiring.right_distrib"],
  "name": "NonUnitalNonAssocSemiring.toDistrib",
  "constType": "Definition"},
 {"references": ["LT.mk", "Int", "Int.lt"],
  "name": "Int.instLTInt",
  "constType": "Definition"},
 {"references": ["Monoid", "Monoid.npow_zero"],
  "name": "pow_zero",
  "constType": "Theorem"},
 {"references": ["NatPow", "Pow.mk", "Nat", "NatPow.pow"],
  "name": "instPowNat",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "IsCoprime",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "IsCoprime.of_mul_left_left.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Semiring.toOne",
   "Exists.intro",
   "Exists",
   "Eq.mpr",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "NonUnitalCommSemiring.toCommSemigroup",
   "CommSemiring.toNonUnitalCommSemiring",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "mul_right_comm",
   "Semigroup.toMul",
   "SemigroupWithZero.toSemigroup",
   "NonUnitalSemiring.toSemigroupWithZero",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "mul_assoc"],
  "name": "IsCoprime.of_mul_left_left",
  "constType": "Theorem"},
 {"references": [], "name": "NonUnitalNonAssocRing.mk", "constType": "Other"},
 {"references": ["Preorder", "Preorder.le_trans"],
  "name": "le_trans",
  "constType": "Theorem"},
 {"references": ["MulOneClass"],
  "name": "MulOneClass.one_mul",
  "constType": "Definition"},
 {"references": ["Left.add_nonneg"],
  "name": "add_nonneg",
  "constType": "Theorem"},
 {"references": ["SubNegZeroMonoid"],
  "name": "SubNegZeroMonoid.neg_zero",
  "constType": "Definition"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.le_total",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "propext",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "eq_neg_add_iff_add_eq"],
  "name": "Mathlib.NumberTheory.FLT.Basic._auxLemma.3",
  "constType": "Theorem"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.add_zero",
  "constType": "Definition"},
 {"references": ["CanonicallyOrderedCommSemiring"],
  "name": "CanonicallyOrderedCommSemiring.toOne",
  "constType": "Definition"},
 {"references": ["LinearOrderedSemiring"],
  "name": "LinearOrderedSemiring.toOrd",
  "constType": "Definition"},
 {"references":
  ["List",
   "List.brecOn",
   "Membership.mem",
   "List.instMembershipList",
   "List.ilast'",
   "List.cons",
   "List.below",
   "List.foldl_eq_foldr.match_1",
   "List.nil",
   "of_eq_true",
   "Eq.trans",
   "Eq",
   "True",
   "Std.Data.List.Lemmas._auxLemma.3",
   "eq_self",
   "Eq.mpr",
   "Or",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "propext",
   "List.mem_cons",
   "Or.inr",
   "PProd.fst",
   "List.rec",
   "PUnit",
   "PProd"],
  "name": "List.ilast'_mem",
  "constType": "Theorem"},
 {"references":
  ["List",
   "List.below",
   "List.rec",
   "PProd",
   "PProd.mk",
   "List.nil",
   "PUnit",
   "PUnit.unit",
   "List.cons"],
  "name": "List.brecOn",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "Int",
   "Nat",
   "Nat.rec",
   "Eq",
   "Int.cast",
   "Ring.toIntCast",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Ring.toSemiring",
   "Eq.mpr",
   "Nat.zero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Int.instMonoidInt",
   "id",
   "Eq.ndrec",
   "instOfNatNat",
   "Eq.refl",
   "pow_zero",
   "AddMonoidWithOne.toOne",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "AddGroupWithOne.toIntCast",
   "instOfNatInt",
   "Int.cast_one",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "pow_succ",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "NonAssocRing.toIntCast",
   "Int.instMulInt",
   "Int.cast_mul"],
  "name": "Int.cast_pow",
  "constType": "Theorem"},
 {"references": [], "name": "MulZeroOneClass.mk", "constType": "Other"},
 {"references":
  ["Monoid",
   "Exists",
   "Units",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Units.val"],
  "name": "Associated",
  "constType": "Definition"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.toInv",
  "constType": "Definition"},
 {"references": ["Field"], "name": "Field.qsmul", "constType": "Definition"},
 {"references":
  ["Preorder",
   "Nat",
   "LT.lt",
   "Preorder.toLT",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.rel_of_forall_rel_succ_of_lt",
   "instIsTransLtToLT"],
  "name": "strictMono_nat_of_lt_succ",
  "constType": "Theorem"},
 {"references":
  ["AddZeroClass",
   "Preorder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "lt_add_of_lt_of_pos"],
  "name": "Left.add_pos",
  "constType": "Theorem"},
 {"references":
  ["Semiring.natCast_zero",
   "Nat",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "inferInstance",
   "LinearOrderedSemiring",
   "Nat.linearOrderedSemiring"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_9",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.rec"],
  "name": "Eq.ndrec",
  "constType": "Definition"},
 {"references":
  ["CommSemiring.mk",
   "Nat",
   "Semiring.mk",
   "NonUnitalSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "AddMonoid.mk",
   "AddSemigroup.mk",
   "Add.mk",
   "Nat.add",
   "Nat.add_assoc",
   "Zero.mk",
   "Nat.zero",
   "Nat.zero_add",
   "Nat.add_zero",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.zero_mul",
   "Nat.commSemiring.proof_1",
   "Nat.add_comm",
   "Mul.mk",
   "Nat.mul",
   "Nat.left_distrib",
   "Nat.right_distrib",
   "Nat.mul_zero",
   "Nat.mul_assoc",
   "One.mk",
   "Nat.succ",
   "Nat.one_mul",
   "Nat.mul_one",
   "NatCast.mk",
   "Nat.commSemiring.proof_2",
   "Nat.commSemiring.proof_3",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "Nat.pow_zero",
   "Nat.pow_succ'",
   "Nat.mul_comm"],
  "name": "Nat.commSemiring",
  "constType": "Definition"},
 {"references": ["Semifield"],
  "name": "Semifield.zpow",
  "constType": "Definition"},
 {"references": [], "name": "DivInvMonoid.mk", "constType": "Other"},
 {"references":
  ["GroupWithZero",
   "dite",
   "Eq",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "DivInvMonoid.mk",
   "MonoidWithZero.toMonoid",
   "GroupWithZero.toMonoidWithZero",
   "Inv.mk",
   "GroupWithZero.toInv",
   "GroupWithZero.toDiv",
   "GroupWithZero.div_eq_mul_inv",
   "GroupWithZero.zpow",
   "GroupWithZero.zpow_zero'",
   "GroupWithZero.zpow_succ'",
   "GroupWithZero.zpow_neg'",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Classical.propDecidable",
   "of_eq_true",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "GroupWithZero.inv_zero",
   "eq_self",
   "Not",
   "left_inv_eq_right_inv",
   "inv_mul_cancel",
   "inv_ne_zero"],
  "name": "GroupWithZero.toDivisionMonoid.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "StrictOrderedRing.mk", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "Nat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "of_eq_true",
   "CommMonoid.toMonoid",
   "CommSemiring.toCommMonoid",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Eq.trans",
   "True",
   "congr",
   "congrArg",
   "mul_pow",
   "congrFun",
   "pow_mul",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.mul_pow",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedField",
   "LinearOrderedCommRing.mul_comm",
   "LinearOrderedField.toLinearOrderedCommRing"],
  "name": "LinearOrderedField.toLinearOrderedSemifield.proof_1",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "SemilatticeInf",
   "Rat",
   "Lattice.toSemilatticeInf",
   "Rat.instLatticeRat"],
  "name": "Rat.instSemilatticeInfRat",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.refl",
   "Nat.zero",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Nat.mul_succ",
   "Nat.add_succ",
   "Nat.add_right_comm"],
  "name": "Nat.succ_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Neg", "constType": "Other"},
 {"references": [], "name": "AddCommMonoidWithOne.mk", "constType": "Other"},
 {"references": ["Field"],
  "name": "Field.ratCast_mk",
  "constType": "Definition"},
 {"references": [], "name": "HMod", "constType": "Other"},
 {"references": ["Distrib"],
  "name": "Distrib.left_distrib",
  "constType": "Definition"},
 {"references": [], "name": "Option.some", "constType": "Other"},
 {"references":
  ["Ring",
   "IsRightCancelMulZero",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "Ring.toSemiring",
   "NoZeroDivisors.mk",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "dite",
   "Or",
   "Classical.propDecidable",
   "Or.inr",
   "Not",
   "Or.inl",
   "HSub.hSub",
   "instHSub",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "MulZeroClass.toZero",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "Eq.mp",
   "Eq.ndrec",
   "SubNegZeroMonoid.toSubNegMonoid",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Ring.toAddCommGroup",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "Eq.refl",
   "sub_zero",
   "IsRightCancelMulZero.mul_right_cancel_of_ne_zero",
   "MulZeroClass.toMul",
   "Eq.symm",
   "sub_mul",
   "MulZeroClass.zero_mul"],
  "name": "IsRightCancelMulZero.to_noZeroDivisors",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Int",
   "Int.natAbs_mul_self.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "of_eq_true",
   "instAddNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.add_assoc",
   "eq_self",
   "Int.subNatNat",
   "Nat.succ",
   "Int.subNatNat_add"],
  "name": "Int.add_assoc.aux1",
  "constType": "Theorem"},
 {"references":
  ["Nontrivial.mk",
   "Int",
   "Nontrivial.exists_pair_ne",
   "Int.instNontrivialInt"],
  "name": "Int.linearOrderedCommRing.proof_1",
  "constType": "Theorem"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.zpow",
  "constType": "Definition"},
 {"references": [], "name": "Inv.mk", "constType": "Other"},
 {"references": ["Xor'", "Or.imp", "And", "Not", "And.left"],
  "name": "Xor'.or",
  "constType": "Theorem"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.mul_lt_mul_of_pos_right",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Iff.intro",
   "And",
   "PythagoreanTriple",
   "Eq",
   "Nat",
   "Int.gcd",
   "OfNat.ofNat",
   "instOfNatNat",
   "Exists",
   "Or",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "instOfNatInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Neg.neg",
   "Int.instNegInt",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "Exists.casesOn",
   "PythagoreanTriple.IsPrimitiveClassified",
   "And.left",
   "PythagoreanTriple.isPrimitiveClassified_of_coprime",
   "And.right",
   "Exists.intro",
   "And.casesOn",
   "Or.casesOn",
   "Eq.ndrec",
   "And.intro",
   "Or.inl",
   "rfl",
   "Eq.mpr",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "SubtractionMonoid.toSubNegMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Int.instAddCommGroupInt",
   "SubNegMonoid.toNeg",
   "id",
   "congrArg",
   "neg_add_rev",
   "Eq.mp",
   "eq_or_eq_neg_of_sq_eq_sq",
   "Int.instCommRingInt",
   "LinearOrderedRing.noZeroDivisors",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Eq.refl",
   "sq",
   "Eq.symm",
   "PythagoreanTriple.eq",
   "Mathlib.Tactic.Ring.of_eq",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Int.instCommSemiringInt",
   "NonUnitalNonAssocSemiring.toMul",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Int.instRingInt",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.add_congr",
   "Int.rawCast",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.Ring.sub_congr",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Nat.semiring",
   "Mathlib.Tactic.Ring.pow_add",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.one_mul",
   "Mathlib.Tactic.Ring.one_pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Tactic.Ring.sub_pf",
   "Mathlib.Tactic.Ring.neg_add",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Tactic.Ring.mul_pp_pf_overlap",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_add",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Mathlib.Tactic.Ring.mul_one",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "Mathlib.Tactic.Ring.add_overlap_pf",
   "Mathlib.Meta.NormNum.isInt_add",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Mathlib.Tactic.Ring.pow_nat",
   "Mathlib.Tactic.Ring.coeff_one",
   "Mathlib.Tactic.Ring.pow_one_cast",
   "Mathlib.Tactic.Ring.pow_bit0",
   "Mathlib.Tactic.Ring.pow_one",
   "Or.inr",
   "_private.Mathlib.NumberTheory.PythagoreanTriples.0.coprime_sq_sub_mul",
   "Mathlib.Tactic.Ring.neg_congr",
   "Int.gcd_comm"],
  "name": "PythagoreanTriple.coprime_classification",
  "constType": "Theorem"},
 {"references": [], "name": "HEq", "constType": "Other"},
 {"references":
  ["Ring",
   "NonUnitalNonAssocSemiring.mul_zero",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_5",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Or.casesOn",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Neg.neg",
   "Int.instNegInt",
   "Or",
   "Int.natAbs_eq",
   "Exists",
   "IsUnit",
   "Int.instMonoidInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Or.inl",
   "Exists.intro",
   "OfNat.ofNat",
   "instOfNatInt",
   "isUnit_one",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Int.instSemiringInt",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "one_mul",
   "Or.inr",
   "IsUnit.neg",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "Monoid.toOne",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "Iff.mpr",
   "neg_eq_iff_eq_neg",
   "of_eq_true",
   "NonUnitalNonAssocRing.toMul",
   "Eq.trans",
   "True",
   "congrArg",
   "neg_mul",
   "eq_self"],
  "name": "Int.exists_unit_of_abs",
  "constType": "Theorem"},
 {"references": ["Semifield"],
  "name": "Semifield.toDiv",
  "constType": "Definition"},
 {"references":
  ["AddCommGroupWithOne",
   "AddGroupWithOne.mk",
   "AddCommGroupWithOne.toIntCast",
   "AddMonoidWithOne.mk",
   "AddCommGroupWithOne.toNatCast",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "AddCommGroupWithOne.toAddCommGroup",
   "AddCommGroupWithOne.toOne",
   "AddCommGroupWithOne.natCast_zero",
   "AddCommGroupWithOne.natCast_succ",
   "SubNegMonoid.toNeg",
   "SubNegMonoid.toSub",
   "SubNegMonoid.sub_eq_add_neg",
   "SubNegMonoid.zsmul",
   "SubNegMonoid.zsmul_zero'",
   "SubNegMonoid.zsmul_succ'",
   "SubNegMonoid.zsmul_neg'",
   "AddGroup.add_left_neg",
   "AddCommGroupWithOne.intCast_ofNat",
   "AddCommGroupWithOne.intCast_negSucc"],
  "name": "AddCommGroupWithOne.toAddGroupWithOne",
  "constType": "Definition"},
 {"references": [], "name": "GroupWithZero", "constType": "Other"},
 {"references": ["Preorder", "LT.lt", "Preorder.toLT", "lt_irrefl", "lt_trans"],
  "name": "lt_asymm",
  "constType": "Theorem"},
 {"references": ["PProd"], "name": "PProd.fst", "constType": "Definition"},
 {"references": [], "name": "PartialOrder", "constType": "Other"},
 {"references":
  ["Int",
   "Ne",
   "OfNat.ofNat",
   "instOfNatInt",
   "id",
   "Iff",
   "Fermat42",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "instOfNatNat",
   "Iff.intro",
   "And",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "And.intro",
   "mul_ne_zero",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Int.instCommSemiringInt",
   "IsDomain.to_noZeroDivisors",
   "Int.instRingInt",
   "LinearOrderedRing.isDomain",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "And.left",
   "And.right",
   "Mathlib.Tactic.LinearCombination.eq_of_add",
   "Int.instAddGroupInt",
   "Mathlib.Tactic.LinearCombination.c_mul_pf",
   "Mathlib.Tactic.Ring.of_eq",
   "HSub.hSub",
   "instHSub",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Mathlib.Tactic.Ring.sub_congr",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Int.rawCast",
   "Int.negOfNat",
   "Mathlib.Tactic.Ring.add_congr",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.one_mul",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Nat.semiring",
   "Eq.refl",
   "Mathlib.Tactic.Ring.pow_add",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.one_pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Mathlib.Tactic.Ring.sub_pf",
   "Mathlib.Tactic.Ring.neg_add",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.cast_zero",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "right_ne_zero_of_mul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "Iff.mp",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "CancelMonoidWithZero.toMonoidWithZero",
   "IsDomain.toCancelMonoidWithZero",
   "Int.instSemiringInt",
   "mul_right_inj'",
   "pow_ne_zero"],
  "name": "Fermat42.mul",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocCommRing",
   "NonUnitalNonAssocCommSemiring.mk",
   "NonUnitalNonAssocSemiring.mk",
   "AddCommMonoid.mk",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "AddCommGroup.toAddGroup",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "AddCommGroup.add_comm",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalNonAssocRing.left_distrib",
   "NonUnitalNonAssocRing.right_distrib",
   "NonUnitalNonAssocRing.zero_mul",
   "NonUnitalNonAssocRing.mul_zero",
   "NonUnitalNonAssocCommRing.mul_comm"],
  "name": "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
  "constType": "Definition"},
 {"references": ["Nat", "NatCast", "Nat.AtLeastTwo", "OfNat.mk", "Nat.cast"],
  "name": "instOfNat",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.zero_mul",
  "constType": "Definition"},
 {"references":
  ["List",
   "List.brecOn",
   "List.below",
   "List.ilast'.match_1",
   "List.nil",
   "List.cons",
   "PProd.fst",
   "List.rec",
   "PUnit",
   "PProd"],
  "name": "List.ilast'",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Nat",
   "Nat.rec",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Eq.mpr",
   "Nat.zero",
   "OfNat.ofNat",
   "instOfNatNat",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.mul_zero",
   "One.toOfNat1",
   "Monoid.toOne",
   "pow_zero",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.mul_succ",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "pow_add",
   "pow_succ'"],
  "name": "pow_mul",
  "constType": "Theorem"},
 {"references": ["Semiring"],
  "name": "Semiring.toNatCast",
  "constType": "Definition"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.max_def",
  "constType": "Definition"},
 {"references": [], "name": "Nontrivial.mk", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "CommSemiring.toSemiring",
   "OfNat.ofNat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Eq.trans",
   "One.toOfNat1",
   "Monoid.toOne",
   "AddMonoidWithOne.toOne",
   "True",
   "congr",
   "congrArg",
   "pow_zero",
   "congrFun",
   "Nat.cast_one",
   "add_zero",
   "AddMonoid.toAddZeroClass",
   "AddMonoidWithOne.toAddMonoid",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.pow_zero",
  "constType": "Theorem"},
 {"references": ["AddLeftCancelSemigroup"],
  "name": "AddLeftCancelSemigroup.add_left_cancel",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "propext",
   "sub_eq_zero",
   "Eq.mp"],
  "name": "Mathlib.Tactic.LinearCombination.eq_of_add",
  "constType": "Theorem"},
 {"references":
  ["Add",
   "IsLeftCancelAdd",
   "Function.Injective.ne_iff",
   "HAdd.hAdd",
   "instHAdd",
   "add_right_injective"],
  "name": "add_ne_add_right",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "LinearOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "SemilatticeInf.toPartialOrder",
   "Lattice.toSemilatticeInf",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "abs_of_nonneg",
   "LT.lt.le"],
  "name": "abs_of_pos",
  "constType": "Theorem"},
 {"references": [], "name": "LinearOrderedCommRing", "constType": "Other"},
 {"references": ["outParam", "HMul"],
  "name": "HMul.hMul",
  "constType": "Definition"},
 {"references": [], "name": "CovariantClass", "constType": "Other"},
 {"references": [], "name": "NonUnitalCommRing.mk", "constType": "Other"},
 {"references":
  ["InvolutiveNeg",
   "propext",
   "Eq",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "neg_inj"],
  "name": "Mathlib.Algebra.Group.Basic._auxLemma.14",
  "constType": "Theorem"},
 {"references":
  ["CommMonoid",
   "CommGroup.mk",
   "Units",
   "CommMonoid.toMonoid",
   "Units.instGroupUnits",
   "Units.instCommGroupUnits.proof_1"],
  "name": "Units.instCommGroupUnits",
  "constType": "Definition"},
 {"references": [], "name": "IsLeftCancelMulZero.mk", "constType": "Other"},
 {"references":
  ["CanonicallyOrderedAddCommMonoid",
   "Iff.intro",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "CanonicallyOrderedAddCommMonoid.toOrderedAddCommMonoid",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "ExistsAddOfLE.exists_add_of_le",
   "CanonicallyOrderedAddCommMonoid.existsAddOfLE",
   "Exists.casesOn",
   "Eq.ndrec",
   "le_self_add",
   "Eq.symm"],
  "name": "le_iff_exists_add",
  "constType": "Theorem"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.toSemiring",
  "constType": "Definition"},
 {"references":
  ["AddZeroClass",
   "Preorder",
   "CovariantClass",
   "Function.swap",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "LE.le",
   "Preorder.toLE",
   "Trans.trans",
   "instTransLtToLTLeToLE",
   "Eq",
   "instTransEq_1",
   "add_lt_add_right",
   "zero_add"],
  "name": "add_lt_of_neg_of_le",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedRing",
   "Nat",
   "Eq.mpr",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "StrictOrderedSemiring.toSemiring",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "bit0",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "pow_bit0",
   "mul_self_nonneg"],
  "name": "pow_bit0_nonneg",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Int",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.add_mul",
   "Int.add_comm",
   "Int.one_mul"],
  "name": "Int.instCommRingInt.proof_1",
  "constType": "Theorem"},
 {"references": ["NegZeroClass"],
  "name": "NegZeroClass.neg_zero",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.casesOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Nat",
   "Int.ofNat",
   "Eq.ndrec",
   "of_eq_true",
   "Nat.cast",
   "instNatCastInt",
   "instMulNat",
   "Eq.trans",
   "True",
   "congrArg",
   "Nat.mul_comm",
   "eq_self",
   "Eq.symm",
   "Int.negSucc",
   "Int.negOfNat",
   "Nat.succ",
   "Eq.refl",
   "congrFun"],
  "name": "Int.mul_comm",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "LE.le",
   "Int.instLEInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Int.mul_nonneg.match_1",
   "Exists",
   "Nat",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Int.eq_ofNat_of_zero_le",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl"],
  "name": "Int.eq_natAbs_of_zero_le",
  "constType": "Theorem"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.toMin",
  "constType": "Definition"},
 {"references":
  ["AddGroupWithOne",
   "Nat",
   "id",
   "Eq",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "Int.subNatNat",
   "HSub.hSub",
   "instHSub",
   "AddGroupWithOne.toSub",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Nat.casesOn",
   "instSubNat",
   "Int.negOfNat.match_1",
   "Int",
   "Unit",
   "Int.ofNat",
   "Int.negSucc",
   "Nat.zero",
   "Eq.ndrec",
   "of_eq_true",
   "instNatCastInt",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.cast_ofNat",
   "Nat.cast_sub",
   "LE.le",
   "instLENat",
   "eq_true",
   "Nat.le_of_sub_eq_zero",
   "eq_self",
   "Eq.symm",
   "Eq.refl",
   "Nat.succ",
   "Eq.mpr",
   "Neg.neg",
   "AddGroupWithOne.toNeg",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Int.cast_negSucc",
   "Nat.add_one",
   "le_of_lt",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Nat.linearOrder",
   "Nat.lt_of_sub_eq_succ",
   "SubNegMonoid.toSub",
   "SubtractionMonoid.toSubNegMonoid",
   "AddGroup.toSubtractionMonoid",
   "AddGroupWithOne.toAddGroup",
   "SubNegMonoid.toNeg",
   "neg_sub"],
  "name": "Int.cast_subNatNat",
  "constType": "Theorem"},
 {"references": ["Rat", "Rat.divInt_self"],
  "name": "Rat.num_den",
  "constType": "Theorem"},
 {"references":
  ["Ord.mk",
   "Int",
   "compareOfLessAndEq",
   "Int.instLTInt",
   "Int.decLt",
   "Int.instDecidableEqInt"],
  "name": "instOrdInt",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_4",
  "constType": "Theorem"},
 {"references":
  ["One",
   "Add",
   "HAdd.hAdd",
   "instHAdd",
   "bit0",
   "OfNat.ofNat",
   "One.toOfNat1"],
  "name": "bit1",
  "constType": "Definition"},
 {"references": [], "name": "Monoid", "constType": "Other"},
 {"references": [], "name": "SubNegMonoid", "constType": "Other"},
 {"references":
  ["Ring",
   "Nat",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.to_isNat.match_1",
   "Mathlib.Meta.NormNum.IsNat",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Int.cast",
   "Ring.toIntCast",
   "of_eq_true",
   "Eq",
   "AddGroupWithOne.toIntCast",
   "Nat.cast",
   "Int",
   "instNatCastInt",
   "AddMonoidWithOne.toNatCast",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.cast_ofNat",
   "eq_self"],
  "name": "Mathlib.Meta.NormNum.IsInt.to_isNat",
  "constType": "Theorem"},
 {"references": ["Semiring", "IsDomain"],
  "name": "IsDomain.toNontrivial",
  "constType": "Definition"},
 {"references": [], "name": "OrderedCommSemiring.mk", "constType": "Other"},
 {"references": ["Div.mk", "Int", "Int.ediv"],
  "name": "Int.instDivInt_1",
  "constType": "Definition"},
 {"references": ["Semiring"],
  "name": "Semiring.npow",
  "constType": "Definition"},
 {"references": ["CancelMonoidWithZero"],
  "name": "CancelMonoidWithZero.toIsCancelMulZero",
  "constType": "Definition"},
 {"references": ["Exists", "Exists.intro", "Exists.rec"],
  "name": "Exists.casesOn",
  "constType": "Definition"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.mul_zero",
  "constType": "Definition"},
 {"references":
  ["List",
   "Nat",
   "Iff.intro",
   "Eq",
   "Option",
   "List.get?",
   "Option.some",
   "Exists",
   "LT.lt",
   "instLTNat",
   "List.length",
   "List.get",
   "Fin.mk",
   "Exists.intro",
   "Eq.mp",
   "Eq.ndrec",
   "Eq.refl",
   "Option.some.injEq",
   "List.get?_eq_get",
   "Nat.lt_of_not_le",
   "LE.le",
   "instLENat",
   "Eq.casesOn",
   "Option.none",
   "HEq",
   "Eq.rec",
   "List.get?_len_le",
   "False",
   "Option.noConfusion",
   "HEq.refl",
   "List.get?_eq_some.match_1"],
  "name": "List.get?_eq_some",
  "constType": "Theorem"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.toAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "LE",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "Eq.mpr",
   "Iff",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "propext",
   "add_le_add_iff_left",
   "AddGroup.covconv",
   "of_eq_true",
   "SubNegMonoid.toNeg",
   "AddZeroClass.toZero",
   "Eq.trans",
   "AddMonoid.toZero",
   "True",
   "congrFun",
   "congrArg",
   "congr",
   "add_right_neg",
   "add_zero",
   "iff_self"],
  "name": "Left.neg_nonpos_iff",
  "constType": "Theorem"},
 {"references":
  ["inferInstance", "DivisionRing", "Rat", "Field.toDivisionRing", "Rat.field"],
  "name": "Rat.divisionRing",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.below",
   "Nat.succ_add.match_1",
   "Eq.rec",
   "OfNat.ofNat",
   "instOfNatNat",
   "rfl",
   "Eq.symm",
   "Nat.mul_zero",
   "Nat.zero_mul",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd",
   "Nat.succ_mul",
   "Nat.mul_succ"],
  "name": "Nat.mul_comm",
  "constType": "Theorem"},
 {"references":
  ["SubNegZeroMonoid",
   "NegZeroClass.mk",
   "AddMonoid.toZero",
   "SubNegMonoid.toAddMonoid",
   "SubNegZeroMonoid.toSubNegMonoid",
   "SubNegMonoid.toNeg",
   "SubNegZeroMonoid.neg_zero"],
  "name": "SubNegZeroMonoid.toNegZeroClass",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "HasDistribNeg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Nat",
   "Odd",
   "Nat.semiring",
   "Exists.casesOn",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "OfNat.ofNat",
   "instOfNat",
   "Semiring.toNatCast",
   "Odd.proof_1",
   "One.toOfNat1",
   "Semiring.toOne",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "Eq.ndrec",
   "Eq.mpr",
   "id",
   "congr",
   "instAddNat",
   "congrArg",
   "pow_add",
   "instMulNat",
   "congrFun",
   "pow_mul",
   "instOfNatNat",
   "neg_sq",
   "pow_one",
   "of_eq_true",
   "Eq.trans",
   "True",
   "mul_neg",
   "eq_self",
   "Eq.symm"],
  "name": "Odd.neg_pow",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "HasDistribNeg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Neg.mk",
   "Units",
   "Units.mk",
   "Neg.neg",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "Units.val",
   "Inv.inv",
   "Units.instInv",
   "Units.instNegUnits.proof_1",
   "Units.instNegUnits.proof_2"],
  "name": "Units.instNegUnits",
  "constType": "Definition"},
 {"references": ["Mul", "Add", "LeftDistribClass"],
  "name": "LeftDistribClass.left_distrib",
  "constType": "Definition"},
 {"references":
  ["CommMonoidWithZero",
   "MonoidWithZero.mk",
   "CommMonoid.toMonoid",
   "CommMonoidWithZero.toCommMonoid",
   "CommMonoidWithZero.toZero",
   "CommMonoidWithZero.zero_mul",
   "CommMonoidWithZero.mul_zero"],
  "name": "CommMonoidWithZero.toMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["Int", "And", "Fermat42", "LE.le", "Nat", "instLENat", "Int.natAbs"],
  "name": "Fermat42.Minimal",
  "constType": "Definition"},
 {"references": ["AddMonoid"],
  "name": "AddMonoid.toAddSemigroup",
  "constType": "Definition"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.toNatCast",
  "constType": "Definition"},
 {"references": ["Mul", "SemiconjBy"],
  "name": "Commute",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Eq.mpr",
   "Iff",
   "LT.lt",
   "Int",
   "Int.instLTInt",
   "Nat.cast",
   "instNatCastInt",
   "instLTNat",
   "LE.le",
   "Int.instLEInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "propext",
   "Int.lt_iff_add_one_le",
   "Nat.succ",
   "Eq.symm",
   "Int.ofNat_succ",
   "instLENat",
   "Int.ofNat_le",
   "Iff.rfl"],
  "name": "Int.ofNat_lt",
  "constType": "Theorem"},
 {"references":
  ["MulZeroOneClass",
   "Nontrivial",
   "NeZero.mk",
   "MulZeroOneClass.toZero",
   "OfNat.ofNat",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "MulZeroOneClass.toMulOneClass",
   "Eq",
   "Zero.toOfNat0",
   "Exists.casesOn",
   "Exists",
   "Ne",
   "False",
   "exists_pair_ne",
   "Trans.trans",
   "instTransEq",
   "HMul.hMul",
   "instHMul",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "MulOneClass.toMul",
   "Eq.refl",
   "one_mul",
   "MulZeroClass.toZero",
   "MulZeroClass.zero_mul"],
  "name": "NeZero.one",
  "constType": "Definition"},
 {"references":
  ["Semiring",
   "MonoidWithZero.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "NonUnitalSemiring.mul_assoc",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.npow",
   "Semiring.npow_zero",
   "Semiring.npow_succ",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero"],
  "name": "Semiring.toMonoidWithZero",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalCommRing", "constType": "Other"},
 {"references":
  ["Int",
   "_private.Init.Data.Int.Basic.0.Int.decNonneg",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt"],
  "name": "Int.decLe",
  "constType": "Definition"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.zpow_neg'",
  "constType": "Definition"},
 {"references": ["SubtractionMonoid"],
  "name": "SubtractionMonoid.neg_neg",
  "constType": "Definition"},
 {"references": ["Rat"], "name": "Rat.den_nz", "constType": "Definition"},
 {"references": ["Monoid"],
  "name": "Monoid.one_mul",
  "constType": "Definition"},
 {"references": ["Decidable", "Eq"],
  "name": "DecidableEq",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "of_eq_true",
   "Eq",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Ring.toAddCommGroup",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "Ring.toSemiring",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "neg_zero",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.neg_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Iff.intro",
   "Not",
   "Nat.Coprime",
   "Exists",
   "And",
   "Nat.Prime",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Exists.intro",
   "Nat.minFac",
   "Nat.gcd",
   "And.intro",
   "Nat.minFac_prime",
   "Dvd.dvd.trans",
   "Nat.semigroup",
   "Nat.minFac_dvd",
   "Nat.gcd_dvd_left",
   "Nat.gcd_dvd_right",
   "Exists.casesOn",
   "Eq",
   "Nat.not_coprime_of_dvd_of_dvd",
   "Nat.Prime.one_lt",
   "And.left",
   "And.right",
   "Eq.refl"],
  "name": "Nat.Prime.not_coprime_iff_dvd",
  "constType": "Theorem"},
 {"references": ["CommMonoidWithZero"],
  "name": "CommMonoidWithZero.toCommMonoid",
  "constType": "Definition"},
 {"references": [], "name": "LinearOrderedSemiring.mk", "constType": "Other"},
 {"references":
  ["Nat",
   "Rat",
   "Eq.refl",
   "zpowRec",
   "Monoid.toOne",
   "CommMonoid.toMonoid",
   "CommRing.toCommMonoid",
   "Rat.commRing",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Rat.instInvRat",
   "Int.ofNat",
   "Nat.succ"],
  "name": "Rat.commGroupWithZero.proof_5",
  "constType": "Theorem"},
 {"references":
  ["AddRightCancelMonoid",
   "AddMonoid.mk",
   "AddRightCancelSemigroup.toAddSemigroup",
   "AddRightCancelMonoid.toAddRightCancelSemigroup",
   "AddRightCancelMonoid.toZero",
   "AddRightCancelMonoid.zero_add",
   "AddRightCancelMonoid.add_zero",
   "AddRightCancelMonoid.nsmul",
   "AddRightCancelMonoid.nsmul_zero",
   "AddRightCancelMonoid.nsmul_succ"],
  "name": "AddRightCancelMonoid.toAddMonoid",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedAddCommGroup",
   "LinearOrder.mk",
   "OrderedAddCommGroup.toPartialOrder",
   "LinearOrderedAddCommGroup.toOrderedAddCommGroup",
   "LinearOrderedAddCommGroup.toMin",
   "LinearOrderedAddCommGroup.toMax",
   "LinearOrderedAddCommGroup.toOrd",
   "LinearOrderedAddCommGroup.le_total",
   "LinearOrderedAddCommGroup.decidableLE",
   "LinearOrderedAddCommGroup.decidableEq",
   "LinearOrderedAddCommGroup.decidableLT",
   "LinearOrderedAddCommGroup.min_def",
   "LinearOrderedAddCommGroup.max_def",
   "LinearOrderedAddCommGroup.compare_eq_compareOfLessAndEq"],
  "name": "LinearOrderedAddCommGroup.toLinearOrder",
  "constType": "Definition"},
 {"references": ["Nat", "Finset.mk", "Multiset.range", "Multiset.nodup_range"],
  "name": "Finset.range",
  "constType": "Definition"},
 {"references": [],
  "name": "Mathlib.Meta.NormNum.IsInt.mk",
  "constType": "Other"},
 {"references": [], "name": "NeZero.mk", "constType": "Other"},
 {"references": ["Int", "Eq.refl", "Ordering", "Ord.compare", "instOrdInt"],
  "name": "Int.instLinearOrderInt.proof_3",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Exists",
   "Nat",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Exists.intro",
   "Exists.casesOn"],
  "name": "Int.mul_nonneg.match_1",
  "constType": "Definition"},
 {"references":
  ["Rat",
   "Iff.not",
   "Eq",
   "Int",
   "Rat.num",
   "OfNat.ofNat",
   "instOfNatInt",
   "Rat.instOfNatRat",
   "Rat.num_eq_zero"],
  "name": "Rat.num_ne_zero",
  "constType": "Theorem"},
 {"references": ["Semiring"],
  "name": "Semiring.npow_succ",
  "constType": "Definition"},
 {"references":
  ["Int",
   "PythagoreanTriple",
   "Eq",
   "Nat",
   "Int.gcd",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "instOfNatInt",
   "LT.lt",
   "Int.instLTInt",
   "Exists.casesOn",
   "Exists",
   "And",
   "Or",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Neg.neg",
   "Int.instNegInt",
   "LE.le",
   "Int.instLEInt",
   "Iff.mp",
   "PythagoreanTriple.coprime_classification",
   "And.intro",
   "And.casesOn",
   "Or.casesOn",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Int.instLinearOrderInt",
   "Preorder.toLT",
   "le_or_lt",
   "Or.inl",
   "Exists.intro",
   "And.left",
   "And.right",
   "Or.inr",
   "False.elim",
   "Eq.mpr",
   "False",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Iff.mpr",
   "Not",
   "imp_false",
   "not_lt",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Int.instAddGroupInt",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "neg_nonpos",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "add_nonneg",
   "AddMonoid.toAddZeroClass",
   "Int.instAddMonoidInt",
   "StrictOrderedRing.toPartialOrder",
   "sq_nonneg",
   "zero_ne_one",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Int.instCommSemiringInt",
   "Semiring.toOne",
   "Int.instSemiringInt",
   "NeZero.charZero_one",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Int.instRingInt",
   "StrictOrderedSemiring.to_charZero",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "Eq.mp",
   "Semigroup.toMul",
   "Int.instSemigroupInt",
   "Int.mul_emod_right",
   "mul_assoc",
   "Eq.symm",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "neg_sq",
   "Mathlib.Tactic.Ring.of_eq",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Nat.rawCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.mul_pf_right",
   "Mathlib.Tactic.Ring.mul_one",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Int.rawCast",
   "Int.negOfNat",
   "Mathlib.Meta.NormNum.instAddMonoidWithOne",
   "Mathlib.Tactic.Ring.neg_congr",
   "Mathlib.Tactic.Ring.neg_add",
   "Mathlib.Tactic.Ring.neg_mul",
   "Mathlib.Tactic.Ring.neg_one_mul",
   "Mathlib.Meta.NormNum.IsInt.to_raw_eq",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.isInt_mul",
   "Int.ofNat",
   "Mathlib.Meta.NormNum.IsInt.of_raw",
   "Mathlib.Meta.NormNum.IsNat.to_isInt",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Mathlib.Tactic.Ring.neg_zero",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Meta.NormNum.IsInt.to_isNat",
   "Nat.gcd",
   "Int.natAbs",
   "Int.natAbs_neg",
   "Int.neg_emod_two",
   "le_of_not_gt",
   "GT.gt",
   "Linarith.lt_irrefl",
   "AddZeroClass.toAdd",
   "StrictOrderedRing.toRing",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "OrderedAddCommGroup.toAddCommGroup",
   "One.toOfNat1",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "instOfNat",
   "Semiring.toNatCast",
   "instNatAtLeastTwo",
   "Mathlib.Tactic.Ring.add_congr",
   "Mathlib.Tactic.Ring.add_pf_add_gt",
   "Mathlib.Tactic.Ring.add_pf_add_overlap",
   "Mathlib.Meta.NormNum.isInt_add",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
   "Mathlib.Tactic.Ring.add_overlap_pf_zero",
   "Mathlib.Tactic.Ring.cast_zero",
   "add_lt_of_neg_of_le",
   "IsRightCancelAdd.covariant_swap_add_lt_of_covariant_swap_add_le",
   "IsCancelAdd.toIsRightCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "OrderedCommSemiring.toOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Linarith.mul_neg",
   "neg_neg_of_pos",
   "zero_lt_one",
   "OrderedSemiring.zeroLEOneClass",
   "of_eq_true",
   "eq_true",
   "Mathlib.Meta.NormNum.isNat_lt_true",
   "Bool",
   "Bool.false",
   "Int.add_one_le_iff"],
  "name": "PythagoreanTriple.coprime_classification'",
  "constType": "Theorem"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.natCast_zero",
  "constType": "Definition"},
 {"references":
  ["OrderedSemiring",
   "Nontrivial",
   "Nat",
   "Nat.cast_pos'",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "OrderedSemiring.toPartialOrder",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "OrderedSemiring.zeroLEOneClass",
   "NeZero.one",
   "NonAssocSemiring.toMulZeroOneClass"],
  "name": "Nat.cast_pos",
  "constType": "Theorem"},
 {"references": ["Preorder", "LT.lt", "Preorder.toLT", "Ne.symm", "LT.lt.ne"],
  "name": "LT.lt.ne'",
  "constType": "Theorem"},
 {"references":
  ["OrderedAddCommMonoid",
   "covariant_swap_add_of_covariant_add",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "AddCommMonoid.toAddCommSemigroup",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "OrderedAddCommMonoid.toCovariantClassLeft"],
  "name": "OrderedAddCommMonoid.toCovariantClassRight",
  "constType": "Definition"},
 {"references": ["Nat", "Int.ofNat_inj"],
  "name": "Int.coe_nat_inj'",
  "constType": "Theorem"},
 {"references": ["Semigroup"],
  "name": "Semigroup.mul_assoc",
  "constType": "Definition"},
 {"references":
  ["CommRing",
   "IsCoprime",
   "CommRing.toCommSemiring",
   "IsCoprime.of_add_mul_left_left",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "Neg.neg",
   "Ring.toNeg",
   "CommRing.toRing",
   "Eq.mpr",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "id",
   "Eq",
   "congrFun",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "congrArg",
   "Eq.trans",
   "mul_neg",
   "add_neg_cancel_right",
   "AddGroupWithOne.toAddGroup",
   "Ring.toAddGroupWithOne"],
  "name": "IsCoprime.add_mul_left_left",
  "constType": "Theorem"},
 {"references":
  ["CommMonoid", "Finset", "Multiset.prod", "Multiset.map", "Finset.val"],
  "name": "Finset.prod",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "CharZero.mk",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "StrictOrderedSemiring.toSemiring",
   "StrictMono.injective",
   "Nat",
   "Nat.linearOrder",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "strictMono_nat_of_lt_succ",
   "Eq.mpr",
   "LT.lt",
   "Preorder.toLT",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "id",
   "Eq",
   "Eq.ndrec",
   "Nat.succ",
   "Eq.refl",
   "Nat.cast_succ",
   "lt_add_one",
   "AddMonoid.toAddZeroClass",
   "OrderedSemiring.zeroLEOneClass",
   "StrictOrderedSemiring.toOrderedSemiring",
   "NeZero.one",
   "NonAssocSemiring.toMulZeroOneClass",
   "StrictOrderedSemiring.toNontrivial",
   "IsLeftCancelAdd.covariant_add_lt_of_covariant_add_le",
   "AddZeroClass.toAdd",
   "IsCancelAdd.toIsLeftCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddCancelCommMonoid.toAddCancelMonoid",
   "OrderedCancelAddCommMonoid.toCancelAddCommMonoid",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid"],
  "name": "StrictOrderedSemiring.to_charZero",
  "constType": "Definition"},
 {"references": ["Nat", "Nat.zero", "Nat.succ", "Nat.casesOn"],
  "name": "Nat.add.match_1",
  "constType": "Definition"},
 {"references": ["Ring"],
  "name": "Ring.zsmul_zero'",
  "constType": "Definition"},
 {"references":
  ["OrderedSemiring",
   "Nat",
   "Nat.cast_nonneg'",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "OrderedSemiring.toPartialOrder",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "OrderedSemiring.zeroLEOneClass"],
  "name": "Nat.cast_nonneg",
  "constType": "Theorem"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.toMul",
  "constType": "Definition"},
 {"references": ["SemilatticeInf"],
  "name": "SemilatticeInf.toPartialOrder",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "IsCoprime",
   "Eq.mpr",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "propext",
   "isCoprime_comm",
   "IsCoprime.mul_left",
   "Eq.mp"],
  "name": "IsCoprime.mul_right",
  "constType": "Theorem"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.toAddMonoid",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "LinearOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "SemilatticeInf.toPartialOrder",
   "Lattice.toSemilatticeInf",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "abs_of_nonpos",
   "LT.lt.le"],
  "name": "abs_of_neg",
  "constType": "Theorem"},
 {"references": ["DivisionMonoid"],
  "name": "DivisionMonoid.inv_inv",
  "constType": "Definition"},
 {"references":
  ["Preorder", "LE.le", "Preorder.toLE", "LT.lt", "Preorder.toLT"],
  "name": "lt_of_le_of_lt.match_1",
  "constType": "Definition"},
 {"references": [], "name": "CommMagma.mk", "constType": "Other"},
 {"references": ["AddGroupWithOne"],
  "name": "AddGroupWithOne.toAddMonoidWithOne",
  "constType": "Definition"},
 {"references":
  ["LinearOrder",
   "Or.symm",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "LE.le",
   "Preorder.toLE",
   "lt_or_le"],
  "name": "le_or_lt",
  "constType": "Theorem"},
 {"references":
  ["Nat", "rfl", "Int.natAbs", "Nat.cast", "Int", "instNatCastInt"],
  "name": "Int.natAbs_ofNat",
  "constType": "Theorem"},
 {"references":
  ["OrderedSemiring",
   "CharZero",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "Eq",
   "Bool",
   "Nat.ble",
   "Bool.false",
   "Mathlib.Meta.NormNum.isNat_lt_true.match_1",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toPartialOrder",
   "Iff.mpr",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "instLTNat",
   "Nat.cast_lt",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "OrderedSemiring.zeroLEOneClass",
   "Iff.mp",
   "Mathlib.Meta.NormNum.ble_eq_false"],
  "name": "Mathlib.Meta.NormNum.isNat_lt_true",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Eq",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "id",
   "Eq.rec",
   "Eq.refl",
   "Eq.trans",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HDiv.hDiv",
   "instHDiv",
   "Int.instDivInt_1",
   "Eq.ndrec",
   "Eq.symm",
   "Int.emod_add_ediv",
   "Int.emod_add_ediv'",
   "Int.add_mul",
   "Int.mul_add",
   "Int.mul_assoc",
   "Int.add_mul_emod_self_left",
   "Int.add_mul_emod_self"],
  "name": "Int.mul_emod",
  "constType": "Theorem"},
 {"references":
  ["rfl",
   "Int",
   "Nat.cast",
   "instNatCastInt",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat"],
  "name": "Int.ofNat_one",
  "constType": "Theorem"},
 {"references": [], "name": "DistribLattice", "constType": "Other"},
 {"references":
  ["Preorder",
   "LT.lt",
   "Preorder.toLT",
   "Eq",
   "absurd",
   "False",
   "Eq.rec",
   "Not",
   "lt_irrefl"],
  "name": "ne_of_gt",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedRing",
   "LinearOrder.mk",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedRing.toMin",
   "LinearOrderedRing.toMax",
   "LinearOrderedRing.toOrd",
   "LinearOrderedRing.le_total",
   "LinearOrderedRing.decidableLE",
   "LinearOrderedRing.decidableEq",
   "LinearOrderedRing.decidableLT",
   "LinearOrderedRing.min_def",
   "LinearOrderedRing.max_def",
   "LinearOrderedRing.compare_eq_compareOfLessAndEq"],
  "name": "LinearOrderedRing.toLinearOrder",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedCommSemiring",
   "StrictOrderedSemiring.add_le_add_left",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring"],
  "name": "StrictOrderedCommSemiring.toOrderedCommSemiring.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "SemigroupWithZero", "constType": "Other"},
 {"references":
  ["Preorder",
   "And",
   "LE.le",
   "Preorder.toLE",
   "Not",
   "And.intro",
   "And.casesOn"],
  "name": "lt_of_lt_of_le.match_1",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Iff.intro",
   "Eq",
   "Nat",
   "Int.gcd",
   "OfNat.ofNat",
   "instOfNatNat",
   "IsCoprime",
   "Int.instCommSemiringInt",
   "Exists.casesOn",
   "Exists",
   "IsUnit",
   "Int.instMonoidInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Int.exists_unit_of_abs",
   "Exists.intro",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "One.toOfNat1",
   "Semiring.toOne",
   "Nat.gcdA",
   "Nat.gcdB",
   "Eq.mpr",
   "Semigroup.toMul",
   "Int.instSemigroupInt",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "mul_assoc",
   "Eq.symm",
   "CommMagma.toMul",
   "NonUnitalNonAssocCommSemiring.toCommMagma",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "mul_comm",
   "Nat.gcd",
   "Int.instAddInt",
   "Nat.gcd_eq_gcd_ab",
   "Int.gcd_eq_natAbs",
   "instOfNatInt",
   "Int.ofNat_one",
   "Decidable.byContradiction",
   "instDecidableEqNat",
   "Not",
   "And",
   "Nat.Prime",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "False",
   "Iff.mp",
   "Nat.Coprime",
   "Nat.Prime.not_coprime_iff_dvd",
   "And.casesOn",
   "Nat.Prime.not_dvd_one",
   "Int.instDvdInt",
   "propext",
   "Int.coe_nat_dvd",
   "dvd_add",
   "Distrib.leftDistribClass",
   "Int.instDistribInt",
   "Dvd.dvd.mul_left",
   "Int.instCommSemigroupInt",
   "Iff.mpr",
   "Int.coe_nat_dvd_left"],
  "name": "Int.gcd_eq_one_iff_coprime",
  "constType": "Theorem"},
 {"references": [], "name": "Sub", "constType": "Other"},
 {"references": [], "name": "Lattice.mk", "constType": "Other"},
 {"references":
  ["Int",
   "LT.lt",
   "Int.instLTInt",
   "HMod.hMod",
   "instHMod",
   "Int.instModInt_1",
   "OfNat.ofNat",
   "instOfNatInt",
   "LE.le",
   "Int.instLEInt",
   "Int.emod_two_eq_zero_or_one.match_1",
   "Or",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Nat",
   "instOfNatNat",
   "Or.inl",
   "rfl",
   "Or.inr",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "False.elim",
   "LT.lt.not_le",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "Eq.mpr",
   "Preorder.toLE",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "Int.instRingInt",
   "AddMonoidWithOne.toNatCast",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Nat.cast_add",
   "Iff.mpr",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "Int.instAddMonoidInt",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "le_add_iff_nonneg_left",
   "OrderedAddCommMonoid.toCovariantClassRight",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "OrderedCommSemiring.toOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedCommRing.toLinearOrderedCommSemiring",
   "IsRightCancelAdd.contravariant_swap_add_le_of_contravariant_swap_add_lt",
   "IsCancelAdd.toIsRightCancelAdd",
   "AddCancelMonoid.toIsCancelAdd",
   "AddGroup.toAddCancelMonoid",
   "Int.instAddGroupInt",
   "OrderedCancelAddCommMonoid.toContravariantClassRight",
   "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toLinearOrderedSemiring",
   "Int.NonNeg.mk",
   "Int.negSucc",
   "Int.NonNeg.casesOn",
   "Int.NonNeg",
   "HSub.hSub",
   "instHSub",
   "Int.instSubInt",
   "HEq",
   "Int.ofNat",
   "Int.noConfusion",
   "HEq.refl",
   "Int.emod_nonneg",
   "of_decide_eq_true",
   "Ne",
   "instDecidableNot",
   "Int.instDecidableEqInt",
   "Bool",
   "Bool.true",
   "Eq.rec",
   "Abs.abs",
   "Neg.toHasAbs",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "SemilatticeSup.toSup",
   "Lattice.toSemilatticeSup",
   "DistribLattice.toLattice",
   "instDistribLattice",
   "Int.instLinearOrderInt",
   "Int.emod_lt",
   "abs_of_nonneg",
   "OrderedAddCommGroup.to_covariantClass_left_le",
   "StrictOrderedRing.toOrderedAddCommGroup",
   "Int.decLe"],
  "name": "Int.emod_two_eq_zero_or_one",
  "constType": "Theorem"},
 {"references":
  ["Dvd.mk", "Nat", "Exists", "Eq", "HMul.hMul", "instHMul", "instMulNat"],
  "name": "Nat.instDvdNat",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring",
   "OrderedCancelAddCommMonoid.mk",
   "OrderedAddCommMonoid.mk",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedSemiring.add_le_add_left",
   "StrictOrderedSemiring.le_of_add_le_add_left"],
  "name": "StrictOrderedSemiring.toOrderedCancelAddCommMonoid",
  "constType": "Definition"},
 {"references":
  ["CommRing",
   "NonUnitalCommRing.mk",
   "NonUnitalRing.mk",
   "NonUnitalNonAssocRing.mk",
   "AddCommGroup.mk",
   "AddGroup.mk",
   "SubNegMonoid.mk",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing",
   "Ring.toNeg",
   "Ring.toSub",
   "CommRing.toNonUnitalCommRing.proof_1",
   "Ring.zsmul",
   "CommRing.toNonUnitalCommRing.proof_2",
   "CommRing.toNonUnitalCommRing.proof_3",
   "CommRing.toNonUnitalCommRing.proof_4",
   "CommRing.toNonUnitalCommRing.proof_5",
   "CommRing.toNonUnitalCommRing.proof_6",
   "NonUnitalNonAssocSemiring.toMul",
   "CommRing.toNonUnitalCommRing.proof_7",
   "CommRing.toNonUnitalCommRing.proof_8",
   "CommRing.toNonUnitalCommRing.proof_9",
   "CommRing.toNonUnitalCommRing.proof_10",
   "CommRing.toNonUnitalCommRing.proof_11",
   "CommRing.mul_comm"],
  "name": "CommRing.toNonUnitalCommRing",
  "constType": "Definition"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.toStrictOrderedRing",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalNonAssocSemiring", "constType": "Other"},
 {"references": [], "name": "Int.ofNat", "constType": "Other"},
 {"references": ["CommRing.mul_comm", "Rat", "Field.toCommRing", "Rat.field"],
  "name": "Rat.instLinearOrderedFieldRat.proof_4",
  "constType": "Theorem"},
 {"references": ["Left.mul_pos"], "name": "mul_pos", "constType": "Theorem"},
 {"references": ["Monoid", "Nat", "Monoid.npow_succ"],
  "name": "pow_succ",
  "constType": "Theorem"},
 {"references": ["MulOneClass", "MulOneClass.mul_one"],
  "name": "mul_one",
  "constType": "Theorem"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.toMax",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec"], "name": "Eq.mp", "constType": "Definition"},
 {"references":
  ["Nat",
   "Int",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Neg.neg",
   "Int.instNegInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat.cast",
   "instNatCastInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Int.neg_mul",
   "eq_self"],
  "name": "Int.instCommRingInt.proof_7",
  "constType": "Theorem"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.zpow_succ'",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec"], "name": "cast", "constType": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.left_distrib",
  "constType": "Definition"},
 {"references": ["Nonempty", "propext", "forall_const"],
  "name": "Std.Logic._auxLemma.32",
  "constType": "Theorem"},
 {"references":
  ["Lattice",
   "SemilatticeInf.mk",
   "Lattice.toInf",
   "SemilatticeSup.toPartialOrder",
   "Lattice.toSemilatticeSup",
   "Lattice.inf_le_left",
   "Lattice.inf_le_right",
   "Lattice.le_inf"],
  "name": "Lattice.toSemilatticeInf",
  "constType": "Definition"},
 {"references":
  ["rfl",
   "Nat",
   "NatCast.natCast",
   "NatCast.mk",
   "OfNat.ofNat",
   "instOfNatNat"],
  "name": "Nat.commSemiring.proof_2",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "left_neg_eq_right_neg",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "neg_add_self"],
  "name": "_private.Mathlib.Algebra.Group.Defs.0.neg_eq_of_add",
  "constType": "Theorem"},
 {"references": ["Mul", "Eq", "Eq.rec", "HMul.hMul", "instHMul", "rfl"],
  "name": "Mathlib.Tactic.LinearCombination.c_mul_pf",
  "constType": "Theorem"},
 {"references":
  ["NonAssocRing",
   "Int",
   "Exists.casesOn",
   "Nat",
   "Or",
   "Eq",
   "Nat.cast",
   "instNatCastInt",
   "Neg.neg",
   "Int.instNegInt",
   "Exists",
   "Int.cast",
   "NonAssocRing.toIntCast",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Int.eq_nat_or_neg",
   "Or.casesOn",
   "Eq.ndrec",
   "Nat.rec",
   "of_eq_true",
   "AddMonoidWithOne.toNatCast",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "CommRing.toRing",
   "Int.instCommRingInt",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "forall_congr",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "AddGroupWithOne.toAddGroup",
   "AddCommGroupWithOne.toAddGroupWithOne",
   "NonAssocRing.toAddCommGroupWithOne",
   "MulZeroClass.toZero",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "congr",
   "congrArg",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "congrFun",
   "Nat.cast_zero",
   "MulZeroClass.zero_mul",
   "Int.cast_zero",
   "eq_self",
   "Std.Logic._auxLemma.32",
   "instNonempty",
   "Int.instInhabitedInt",
   "Nat.succ",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddGroupWithOne.toIntCast",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "Nat.cast_succ",
   "add_mul",
   "Distrib.rightDistribClass",
   "NonUnitalNonAssocSemiring.toDistrib",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "CommRing.toCommSemiring",
   "MulOneClass.toOne",
   "one_mul",
   "Int.cast_add",
   "id",
   "Eq.mp",
   "Int.cast_ofNat",
   "instOfNatInt",
   "Int.cast_one",
   "NonAssocRing.toNonAssocSemiring",
   "Eq.symm",
   "SubtractionCommMonoid.toSubtractionMonoid",
   "AddCommGroup.toDivisionAddCommMonoid",
   "Ring.toAddCommGroup",
   "neg_zero",
   "AddGroupWithOne.toNeg",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocRing",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "SubtractionMonoid.toSubNegMonoid",
   "SubNegMonoid.toNeg",
   "neg_add_rev",
   "neg_mul",
   "Int.cast_neg",
   "Mathlib.Algebra.Group.Basic._auxLemma.14"],
  "name": "Int.cast_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Option.none", "constType": "Other"},
 {"references": ["GroupWithZero"],
  "name": "GroupWithZero.div_eq_mul_inv",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "Eq.mpr",
   "Iff",
   "Eq",
   "HSub.hSub",
   "instHSub",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "sub_eq_add_neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "propext",
   "add_neg_eq_iff_eq_add",
   "Iff.rfl"],
  "name": "sub_eq_iff_eq_add",
  "constType": "Theorem"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.natCast_zero",
  "constType": "Definition"},
 {"references": ["Int", "Eq.refl", "Max.max", "Int.instMaxInt"],
  "name": "Int.instLinearOrderInt.proof_2",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "LT",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "LT.lt",
   "Eq.mpr",
   "Iff",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "propext",
   "add_lt_add_iff_left",
   "AddGroup.covconv",
   "AddMonoid.toZero",
   "SubNegMonoid.toNeg",
   "add_neg_self",
   "AddZeroClass.toZero",
   "add_zero",
   "Iff.rfl"],
  "name": "Left.neg_pos_iff",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "AddMonoid",
   "Int",
   "AddMonoidWithOne.toAddMonoid",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne",
   "CommRing.toRing",
   "Int.instCommRingInt"],
  "name": "Int.instAddMonoidInt",
  "constType": "Definition"},
 {"references": ["Mul"], "name": "Mul.mul", "constType": "Definition"},
 {"references": [], "name": "HSub", "constType": "Other"},
 {"references": [], "name": "HSub.mk", "constType": "Other"},
 {"references":
  ["AddGroupWithOne",
   "CharZero",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Int",
   "Int.cast_injective.match_1",
   "Eq",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "Iff.mp",
   "Int.cast_inj"],
  "name": "Int.cast_injective",
  "constType": "Theorem"},
 {"references": ["NonUnitalNonAssocRing"],
  "name": "NonUnitalNonAssocRing.zero_mul",
  "constType": "Definition"},
 {"references":
  ["List",
   "List.rec",
   "List.Chain",
   "List.cons",
   "List.ilast'",
   "List.TFAE",
   "Eq.mpr",
   "List.nil",
   "Iff",
   "id",
   "Eq",
   "implies_congr",
   "Eq.trans",
   "And",
   "True",
   "Mathlib.Data.List.TFAE._auxLemma.5",
   "congrArg",
   "Mathlib.Data.List.TFAE._auxLemma.6",
   "Mathlib.Data.List.TFAE._auxLemma.4",
   "Eq.refl",
   "Mathlib.Data.List.TFAE._auxLemma.2",
   "Mathlib.Data.List.TFAE._auxLemma.1",
   "Iff.intro",
   "And.casesOn",
   "And.intro",
   "Function.comp",
   "Iff.mp",
   "And.right",
   "List.Mem.head",
   "List.ilast'_mem",
   "Eq.mp",
   "forall_congr"],
  "name": "List.tfae_of_cycle",
  "constType": "Theorem"},
 {"references":
  ["Semiring",
   "Nat",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Nat.mul",
   "Mathlib.Meta.NormNum.isNat_mul.match_1",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Eq.symm",
   "NonAssocSemiring.toNatCast",
   "instMulNat",
   "Nat.cast_mul"],
  "name": "Mathlib.Meta.NormNum.isNat_mul",
  "constType": "Theorem"},
 {"references":
  ["Distrib",
   "LeftDistribClass.mk",
   "Distrib.toMul",
   "Distrib.toAdd",
   "Distrib.left_distrib"],
  "name": "Distrib.leftDistribClass",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Nat",
   "Nat.rec",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Eq.mpr",
   "Nat.zero",
   "id",
   "Eq.ndrec",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.refl",
   "Nat.add_zero",
   "One.toOfNat1",
   "Monoid.toOne",
   "pow_zero",
   "MulOneClass.toOne",
   "mul_one",
   "Nat.succ",
   "pow_succ'",
   "Semigroup.toMul",
   "Monoid.toSemigroup",
   "Eq.symm",
   "mul_assoc",
   "Nat.add_assoc"],
  "name": "pow_add",
  "constType": "Theorem"},
 {"references": ["IsEmpty", "propext", "True", "IsEmpty.forall_iff"],
  "name": "Mathlib.Logic.IsEmpty._auxLemma.1",
  "constType": "Theorem"},
 {"references": ["Lattice"],
  "name": "Lattice.le_inf",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.mul_add.match_1",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat",
   "of_eq_true",
   "Nat.cast",
   "instNatCastInt",
   "instMulNat",
   "instAddNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "Nat.left_distrib",
   "eq_self",
   "Eq.mpr",
   "Int.negSucc",
   "Int.subNatNat",
   "Nat.succ",
   "OfNat.ofNat",
   "instOfNatNat",
   "id",
   "congr",
   "Int.negOfNat",
   "Int.ofNat_mul_subNatNat",
   "Int.negOfNat_eq_subNatNat_zero",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Int.subNatNat_add",
   "Int.add_comm",
   "Int.negOfNat_add",
   "Nat.succ_add",
   "Nat.mul_comm",
   "Nat.right_distrib",
   "Int.negSucc_mul_subNatNat"],
  "name": "Int.mul_add",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Nat",
   "Nat.Prime",
   "Dvd.dvd",
   "Int.instDvdInt",
   "Nat.cast",
   "instNatCastInt",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "Nat.Prime.dvd_of_dvd_pow",
   "Int.natAbs",
   "Eq.mp",
   "Nat.instDvdNat",
   "instHPow",
   "Monoid.toNatPow",
   "Nat.monoid",
   "Eq.ndrec",
   "Eq",
   "Eq.refl",
   "Int.natAbs_pow",
   "propext",
   "Int.coe_nat_dvd_left"],
  "name": "Int.Prime.dvd_pow",
  "constType": "Theorem"},
 {"references": ["left_distrib"], "name": "mul_add", "constType": "Theorem"},
 {"references":
  ["LinearOrderedCommSemiring",
   "Nat",
   "Nat.linearOrderedCommSemiring",
   "CommMonoidWithZero",
   "inferInstance",
   "CommSemiring.toCommMonoidWithZero",
   "Nat.commSemiring",
   "LinearOrderedCommMonoidWithZero.mk",
   "LinearOrderedCommMonoid.mk",
   "LinearOrder.mk",
   "StrictOrderedSemiring.toPartialOrder",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedCommSemiring.toMin",
   "LinearOrderedCommSemiring.toMax",
   "LinearOrderedCommSemiring.toOrd",
   "LinearOrderedCommSemiring.le_total",
   "LinearOrderedCommSemiring.decidableLE",
   "LinearOrderedCommSemiring.decidableEq",
   "LinearOrderedCommSemiring.decidableLT",
   "LinearOrderedCommSemiring.min_def",
   "LinearOrderedCommSemiring.max_def",
   "LinearOrderedCommSemiring.compare_eq_compareOfLessAndEq",
   "CommMonoidWithZero.toCommMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "Nat.mul_le_mul_left",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "Nat.linearOrderedCommMonoidWithZero.proof_1",
   "Nat.linearOrderedCommMonoidWithZero.proof_2",
   "Nat.linearOrderedCommMonoidWithZero.proof_3"],
  "name": "Nat.linearOrderedCommMonoidWithZero",
  "constType": "Definition"},
 {"references":
  ["Monoid",
   "Eq.mpr",
   "Eq",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "OfNat.ofNat",
   "instOfNatNat",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "id",
   "Eq.ndrec",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Eq.refl",
   "pow_succ",
   "pow_one"],
  "name": "pow_two",
  "constType": "Theorem"},
 {"references": ["Or", "Or.elim.match_1"],
  "name": "Or.elim",
  "constType": "Theorem"},
 {"references":
  ["Decidable", "Not", "False", "Decidable.byCases", "id", "False.elim"],
  "name": "Decidable.byContradiction",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Fermat42.Minimal",
   "Iff.mp",
   "Eq",
   "Nat",
   "Int.gcd",
   "OfNat.ofNat",
   "instOfNatNat",
   "IsCoprime",
   "Int.instCommSemiringInt",
   "Int.gcd_eq_one_iff_coprime",
   "Decidable.byContradiction",
   "instDecidableEqNat",
   "Not",
   "Exists.casesOn",
   "And",
   "Nat.Prime",
   "Dvd.dvd",
   "Nat.instDvdNat",
   "Int.natAbs",
   "Exists",
   "False",
   "Nat.Coprime",
   "Nat.Prime.not_coprime_iff_dvd",
   "And.casesOn",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.instDvdInt",
   "Iff.mpr",
   "Int.coe_nat_dvd_left",
   "Eq.ndrec",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "Fermat42",
   "Nat.le_lt_asymm",
   "And.right",
   "LE.le",
   "instLENat",
   "Eq.mpr",
   "LT.lt",
   "instLTNat",
   "instMulNat",
   "id",
   "Eq.refl",
   "Int.natAbs_mul",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "StrictOrderedSemiring.toPartialOrder",
   "Nat.strictOrderedSemiring",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Nat.semiring",
   "MulOneClass.toMul",
   "propext",
   "lt_mul_iff_one_lt_left",
   "LinearOrderedCommMonoidWithZero.toZero",
   "Nat.linearOrderedCommMonoidWithZero",
   "StrictOrderedSemiring.toMulPosStrictMono",
   "LinearOrderedSemiring.toMulPosReflectLT",
   "Nat.linearOrderedSemiring",
   "Nat.pos_of_ne_zero",
   "Ne",
   "instOfNatInt",
   "Int.natAbs_ne_zero",
   "Fermat42.ne_zero",
   "Nat.monoid",
   "Int.instHPowIntNat",
   "Int.natAbs_pow",
   "Int.natAbs_ofNat",
   "Nat.one_lt_pow",
   "zero_lt_two",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OrderedSemiring.zeroLEOneClass",
   "Nat.orderedSemiring",
   "NeZero.succ",
   "Nat.zero",
   "OrderedAddCommMonoid.toCovariantClassLeft",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Nat.Prime.one_lt",
   "Fermat42.mul",
   "Int.coe_nat_ne_zero",
   "Nat.Prime.ne_zero",
   "And.left",
   "Eq.symm",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "Int.pow_dvd_pow_iff",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Dvd.intro",
   "Int.instSemigroupInt",
   "Mathlib.Tactic.Ring.of_eq",
   "Semigroup.toMul",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "CommSemiring.toSemiring",
   "NonUnitalNonAssocSemiring.toMul",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Nat.rawCast",
   "Mathlib.Tactic.Ring.instCommSemiringNat",
   "Zero.toOfNat0",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.mul_congr",
   "Mathlib.Tactic.Ring.pow_congr",
   "Mathlib.Tactic.Ring.atom_pf",
   "Mathlib.Tactic.Ring.cast_pos",
   "Mathlib.Meta.NormNum.isNat_ofNat",
   "Mathlib.Tactic.Ring.pow_add",
   "Mathlib.Tactic.Ring.single_pow",
   "Mathlib.Tactic.Ring.mul_pow",
   "Mathlib.Tactic.Ring.one_mul",
   "Mathlib.Tactic.Ring.one_pow",
   "Mathlib.Tactic.Ring.pow_zero",
   "Mathlib.Tactic.Ring.add_mul",
   "Mathlib.Tactic.Ring.mul_add",
   "Mathlib.Tactic.Ring.mul_pf_left",
   "Mathlib.Tactic.Ring.mul_zero",
   "Mathlib.Tactic.Ring.add_pf_add_zero",
   "Mathlib.Tactic.Ring.zero_mul",
   "Mathlib.Meta.NormNum.IsNat.to_raw_eq",
   "Mathlib.Meta.NormNum.isNat_mul",
   "Mathlib.Meta.NormNum.IsNat.of_raw",
   "Mathlib.Tactic.Ring.add_congr",
   "Mathlib.Tactic.Ring.add_pf_add_lt",
   "Mathlib.Tactic.Ring.add_pf_zero_add",
   "Mathlib.Tactic.Ring.mul_pf_right"],
  "name": "Fermat42.coprime_of_minimal",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Int.le_natAbs.match_1",
   "Or",
   "LE.le",
   "Int.instLEInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "Int.le_total",
   "Eq.mpr",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Int.eq_natAbs_of_zero_le",
   "Int.le_refl",
   "Int.le_trans",
   "Int.ofNat_zero_le"],
  "name": "Int.le_natAbs",
  "constType": "Theorem"},
 {"references":
  ["List",
   "Nat",
   "LT.lt",
   "instLTNat",
   "List.length",
   "List.brecOn",
   "Membership.mem",
   "List.instMembershipList",
   "List.get",
   "Fin.mk",
   "List.below",
   "List.get_mem.match_1",
   "OfNat.ofNat",
   "instOfNatNat",
   "List.cons",
   "List.Mem.head",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "List.Mem.tail",
   "PProd.fst",
   "List.rec",
   "PUnit",
   "PProd",
   "Nat.add",
   "List.get.proof_2"],
  "name": "List.get_mem",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "instLENat",
   "Nat.le.dest.match_1",
   "Exists",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "Nat.le.dest",
   "Nat.le.intro",
   "Eq.rec",
   "rfl",
   "Eq.symm",
   "Nat.left_distrib"],
  "name": "Nat.mul_le_mul_left",
  "constType": "Theorem"},
 {"references":
  ["Int",
   "Iff.rfl",
   "LE.le",
   "Int.instLEInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "OfNat.ofNat",
   "instOfNatInt"],
  "name": "Int.add_one_le_iff",
  "constType": "Theorem"},
 {"references": [], "name": "LinearOrderedRing", "constType": "Other"},
 {"references":
  ["Zero", "One", "NeZero", "OfNat.ofNat", "One.toOfNat1", "NeZero.ne'"],
  "name": "zero_ne_one",
  "constType": "Theorem"},
 {"references": [], "name": "StrictOrderedSemiring", "constType": "Other"},
 {"references":
  ["Nat",
   "_private.Mathlib.Data.Int.GCD.0.Nat.P",
   "Nat.xgcdAux",
   "OfNat.ofNat",
   "Int",
   "instOfNatInt",
   "Eq.mp",
   "Prod.mk",
   "Prod",
   "Nat.gcd",
   "Nat.xgcd",
   "Nat.gcdA",
   "Nat.gcdB",
   "Eq.ndrec",
   "Eq",
   "Eq.refl",
   "Nat.xgcd_val",
   "Nat.xgcdAux_val",
   "Nat.xgcdAux_P",
   "of_eq_true",
   "Nat.cast",
   "instNatCastInt",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Int.instSemiringInt",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "MulZeroClass.toMul",
   "NonUnitalNonAssocSemiring.toMulZeroClass",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt",
   "Zero.toOfNat0",
   "MulZeroClass.toZero",
   "Eq.trans",
   "True",
   "congrArg",
   "congr",
   "mul_one",
   "MulZeroClass.mul_zero",
   "add_zero",
   "AddMonoid.toAddZeroClass",
   "Int.instAddMonoidInt",
   "eq_self",
   "zero_add"],
  "name": "Nat.gcd_eq_gcd_ab",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "Eq",
   "Neg.neg",
   "Ring.toNeg",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Eq.ndrec",
   "HSub.hSub",
   "instHSub",
   "Ring.toSub",
   "of_eq_true",
   "SubNegMonoid.toSub",
   "AddGroup.toSubNegMonoid",
   "AddGroupWithOne.toAddGroup",
   "Ring.toAddGroupWithOne",
   "Eq.trans",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "SubNegMonoid.toNeg",
   "True",
   "congrFun",
   "congrArg",
   "sub_eq_add_neg",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.sub_pf",
  "constType": "Theorem"},
 {"references": [], "name": "CommRing", "constType": "Other"},
 {"references": [], "name": "LT.mk", "constType": "Other"},
 {"references": ["String", "Lean.Name.str", "Lean.Name.anonymous"],
  "name": "Lean.Name.mkStr1",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring.zero_le_one",
   "Nat",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Nat.linearOrderedCommSemiring"],
  "name": "Nat.linearOrderedCommMonoidWithZero.proof_3",
  "constType": "Theorem"},
 {"references": [], "name": "Monoid.mk", "constType": "Other"},
 {"references":
  ["CommRing",
   "AddCommMonoid.add_comm",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_6",
  "constType": "Theorem"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "congr",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "Iff.intro",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "SubNegMonoid.toNeg",
   "add_neg_cancel_left",
   "neg_add_cancel_left"],
  "name": "neg_add_eq_iff_eq_add",
  "constType": "Theorem"},
 {"references": ["False", "False.rec"],
  "name": "False.elim",
  "constType": "Definition"},
 {"references": ["Add"], "name": "Add.add", "constType": "Definition"},
 {"references": ["CovariantClass"],
  "name": "CovariantClass.elim",
  "constType": "Definition"},
 {"references": ["AddCommMagma"],
  "name": "AddCommMagma.toAdd",
  "constType": "Definition"},
 {"references": ["eq_true", "Or", "True", "Or.inr", "trivial"],
  "name": "or_true",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedCommRing",
   "LinearOrderedRing.max_def",
   "LinearOrderedCommRing.toLinearOrderedRing"],
  "name": "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_3",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "_private.Mathlib.Algebra.Group.Defs.0.neg_eq_of_add",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "AddGroup.toSubNegMonoid",
   "add_left_neg"],
  "name": "AddGroup.toSubtractionMonoid.proof_1",
  "constType": "Theorem"},
 {"references": ["OfNat", "One.mk", "OfNat.ofNat"],
  "name": "One.ofOfNat1",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Eq.ndrec",
   "of_eq_true",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "Eq.trans",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "True",
   "congr",
   "congrArg",
   "add_left_comm",
   "add_assoc",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_overlap",
  "constType": "Theorem"},
 {"references": ["AddSemigroup", "AddSemigroup.add_assoc"],
  "name": "add_assoc",
  "constType": "Theorem"},
 {"references": ["AddMonoidWithOne"],
  "name": "AddMonoidWithOne.natCast_succ",
  "constType": "Definition"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.div_eq_mul_inv",
  "constType": "Definition"},
 {"references":
  ["CommSemiring",
   "CommMonoid.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "CommSemiring.toSemiring",
   "NonUnitalSemiring.mul_assoc",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.npow",
   "Semiring.npow_zero",
   "Semiring.npow_succ",
   "CommSemiring.mul_comm"],
  "name": "CommSemiring.toCommMonoid",
  "constType": "Definition"},
 {"references":
  ["LinearOrderedField",
   "LinearOrderedSemiring",
   "LinearOrderedRing.toLinearOrderedSemiring",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "LinearOrderedField.toLinearOrderedCommRing",
   "LinearOrderedSemifield.mk",
   "LinearOrderedCommSemiring.mk",
   "StrictOrderedCommSemiring.mk",
   "LinearOrderedSemiring.toStrictOrderedSemiring",
   "LinearOrderedField.toLinearOrderedSemifield.proof_1",
   "LinearOrderedSemiring.toMin",
   "LinearOrderedSemiring.toMax",
   "LinearOrderedSemiring.toOrd",
   "LinearOrderedSemiring.le_total",
   "LinearOrderedSemiring.decidableLE",
   "LinearOrderedSemiring.decidableEq",
   "LinearOrderedSemiring.decidableLT",
   "LinearOrderedSemiring.min_def",
   "LinearOrderedSemiring.max_def",
   "LinearOrderedSemiring.compare_eq_compareOfLessAndEq",
   "LinearOrderedField.toInv",
   "LinearOrderedField.toDiv",
   "LinearOrderedField.div_eq_mul_inv",
   "LinearOrderedField.zpow",
   "LinearOrderedField.zpow_zero'",
   "LinearOrderedField.zpow_succ'",
   "LinearOrderedField.zpow_neg'",
   "LinearOrderedField.inv_zero",
   "LinearOrderedField.mul_inv_cancel"],
  "name": "LinearOrderedField.toLinearOrderedSemifield",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Not",
   "decide_eq_false.match_1",
   "Eq",
   "Bool",
   "Decidable.decide",
   "Bool.false",
   "absurd",
   "Decidable.isTrue",
   "rfl",
   "Decidable.isFalse"],
  "name": "decide_eq_false",
  "constType": "Theorem"},
 {"references": [], "name": "inferInstance", "constType": "Definition"},
 {"references": [], "name": "DivisionMonoid", "constType": "Other"},
 {"references":
  ["Int",
   "Eq.mpr",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Int.instMulInt",
   "OfNat.ofNat",
   "instOfNatInt",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Int.mul_comm",
   "Int.one_mul"],
  "name": "Int.mul_one",
  "constType": "Theorem"},
 {"references": ["Field"],
  "name": "Field.toNontrivial",
  "constType": "Definition"},
 {"references": ["Or", "Not", "Or.elim", "id", "absurd"],
  "name": "Or.resolve_right",
  "constType": "Theorem"},
 {"references":
  ["Distrib",
   "RightDistribClass.mk",
   "Distrib.toMul",
   "Distrib.toAdd",
   "Distrib.right_distrib"],
  "name": "Distrib.rightDistribClass",
  "constType": "Definition"},
 {"references":
  ["NonUnitalCommRing",
   "NonUnitalNonAssocCommRing.mk",
   "NonUnitalRing.toNonUnitalNonAssocRing",
   "NonUnitalCommRing.toNonUnitalRing",
   "NonUnitalCommRing.mul_comm"],
  "name": "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
  "constType": "Definition"},
 {"references": [], "name": "HMul", "constType": "Other"},
 {"references": ["OrderedAddCommGroup"],
  "name": "OrderedAddCommGroup.add_le_add_left",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "rfl",
   "Int",
   "IntCast.intCast",
   "IntCast.mk",
   "Nat.cast",
   "instNatCastInt"],
  "name": "Int.instCommRingInt.proof_8",
  "constType": "Theorem"},
 {"references": ["Nat", "Eq", "Nat.gcd", "OfNat.ofNat", "instOfNatNat"],
  "name": "Nat.Coprime",
  "constType": "Definition"},
 {"references":
  ["CommSemigroup",
   "CommMagma.mk",
   "Semigroup.toMul",
   "CommSemigroup.toSemigroup",
   "CommSemigroup.mul_comm"],
  "name": "CommSemigroup.toCommMagma",
  "constType": "Definition"},
 {"references": [],
  "name": "LinearOrderedCommMonoidWithZero.mk",
  "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.rec",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "instPowNat",
   "instNatPowNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Eq.refl",
   "Nat.zero",
   "Eq.mpr",
   "Nat.succ",
   "HMul.hMul",
   "instHMul",
   "instMulNat",
   "id",
   "Eq.ndrec",
   "Nat.pow_succ",
   "Nat.mul_one"],
  "name": "Nat.one_pow",
  "constType": "Theorem"},
 {"references": ["AddCancelMonoid"],
  "name": "AddCancelMonoid.toAddLeftCancelMonoid",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.le_total",
  "constType": "Definition"},
 {"references": ["Nat", "Unit", "Nat.succ", "Nat.casesOn", "Unit.unit"],
  "name": "Nat.zero_add.match_1",
  "constType": "Definition"},
 {"references": ["Add", "HAdd.mk", "Add.add"],
  "name": "instHAdd",
  "constType": "Definition"},
 {"references": [], "name": "NonUnitalNonAssocRing", "constType": "Other"},
 {"references": [], "name": "HMul.mk", "constType": "Other"},
 {"references": ["NonUnitalNonAssocRing"],
  "name": "NonUnitalNonAssocRing.mul_zero",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.rec", "rfl", "funext"],
  "name": "forall_congr",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "NonAssocRing.mk",
   "NonUnitalNonAssocRing.mk",
   "AddCommGroup.mk",
   "AddGroup.mk",
   "SubNegMonoid.mk",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "Ring.toNeg",
   "Ring.toSub",
   "Ring.sub_eq_add_neg",
   "Ring.zsmul",
   "Ring.zsmul_zero'",
   "Ring.zsmul_succ'",
   "Ring.zsmul_neg'",
   "Ring.add_left_neg",
   "Ring.toNonAssocRing.proof_1",
   "NonUnitalNonAssocSemiring.toMul",
   "Ring.toNonAssocRing.proof_2",
   "Ring.toNonAssocRing.proof_3",
   "Ring.toNonAssocRing.proof_4",
   "Ring.toNonAssocRing.proof_5",
   "Semiring.toOne",
   "Ring.toNonAssocRing.proof_6",
   "Ring.toNonAssocRing.proof_7",
   "Semiring.toNatCast",
   "Ring.toNonAssocRing.proof_8",
   "Ring.toNonAssocRing.proof_9",
   "Ring.toIntCast",
   "Ring.intCast_ofNat",
   "Ring.intCast_negSucc"],
  "name": "Ring.toNonAssocRing",
  "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "LE",
   "ZeroLEOneClass",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddMonoidWithOne.toOne",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "LE.le",
   "Trans.trans",
   "Eq",
   "instTransEq_1",
   "OfNat.ofNat",
   "One.toOfNat1",
   "instOfNat",
   "AddMonoidWithOne.toNatCast",
   "instNatAtLeastTwo",
   "Nat",
   "instOfNatNat",
   "instTransEq",
   "Zero.toOfNat0",
   "Eq.symm",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddZeroClass.toZero",
   "add_zero",
   "add_le_add_left",
   "zero_le_one",
   "one_add_one_eq_two"],
  "name": "one_le_two",
  "constType": "Theorem"},
 {"references": ["AddCommMonoid"],
  "name": "AddCommMonoid.toAddMonoid",
  "constType": "Definition"},
 {"references": ["CommRing", "Ring.zsmul_zero'", "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_2",
  "constType": "Theorem"},
 {"references": ["Int", "Nat", "Int.ofNat", "Int.negSucc", "Int.casesOn"],
  "name": "Int.cast_add.match_1",
  "constType": "Definition"},
 {"references":
  ["NonAssocRing",
   "AddCommGroupWithOne.mk",
   "NonUnitalNonAssocRing.toAddCommGroup",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "NonAssocRing.toIntCast",
   "NonAssocRing.toNatCast",
   "NonAssocRing.toOne",
   "NonAssocRing.natCast_zero",
   "NonAssocRing.natCast_succ",
   "NonAssocRing.intCast_ofNat",
   "NonAssocRing.intCast_negSucc"],
  "name": "NonAssocRing.toAddCommGroupWithOne",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "AddCommSemigroup",
   "Int",
   "AddCommMonoid.toAddCommSemigroup",
   "Int.instAddCommMonoidInt"],
  "name": "Int.instAddCommSemigroupInt",
  "constType": "Definition"},
 {"references": [], "name": "LE.mk", "constType": "Other"},
 {"references": ["Eq", "Eq.rec", "rfl"],
  "name": "congrArg",
  "constType": "Theorem"},
 {"references": [], "name": "RightDistribClass.mk", "constType": "Other"},
 {"references": [], "name": "HDiv.mk", "constType": "Other"},
 {"references": ["NonAssocSemiring"],
  "name": "NonAssocSemiring.one_mul",
  "constType": "Definition"},
 {"references": [], "name": "LinearOrderedSemiring", "constType": "Other"},
 {"references":
  ["AddCancelMonoid",
   "IsCancelAdd.mk",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddRightCancelMonoid.toAddMonoid",
   "AddCancelMonoid.toAddRightCancelMonoid",
   "IsLeftCancelAdd.mk",
   "AddLeftCancelSemigroup.add_left_cancel",
   "AddLeftCancelMonoid.toAddLeftCancelSemigroup",
   "AddCancelMonoid.toAddLeftCancelMonoid",
   "IsRightCancelAdd.mk",
   "AddRightCancelSemigroup.add_right_cancel",
   "AddRightCancelMonoid.toAddRightCancelSemigroup"],
  "name": "AddCancelMonoid.toIsCancelAdd",
  "constType": "Definition"},
 {"references": ["NonAssocRing"],
  "name": "NonAssocRing.toIntCast",
  "constType": "Definition"},
 {"references":
  ["OrderedSemiring",
   "NoZeroDivisors",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "OrderedSemiring.toSemiring",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toPartialOrder",
   "mul_ne_zero",
   "ne_of_gt"],
  "name":
  "_private.Mathlib.Tactic.Positivity.Basic.0.Mathlib.Meta.Positivity.mul_ne_zero_of_ne_zero_of_pos",
  "constType": "Theorem"},
 {"references": ["AddCommMonoidWithOne"],
  "name": "AddCommMonoidWithOne.toAddMonoidWithOne",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Int.decEq.match_2",
   "Decidable",
   "Eq",
   "Nat",
   "Int.decEq.match_1",
   "Int.ofNat",
   "decEq",
   "instDecidableEqNat",
   "Decidable.isTrue",
   "Int.decEq.proof_1",
   "Not",
   "Decidable.isFalse",
   "Int.decEq.proof_2",
   "Int.negSucc",
   "Int.decEq.proof_3",
   "Int.decEq.proof_4",
   "Int.decEq.proof_5",
   "Int.decEq.proof_6"],
  "name": "Int.decEq",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Semiring",
   "Rat",
   "CommSemiring.toSemiring",
   "Rat.commSemiring"],
  "name": "Rat.semiring",
  "constType": "Definition"},
 {"references": [], "name": "LeftDistribClass", "constType": "Other"},
 {"references": ["CommRing", "Ring.sub_eq_add_neg", "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_1",
  "constType": "Theorem"},
 {"references":
  ["OrderedSemiring",
   "ZeroLEOneClass.mk",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "OrderedSemiring.toSemiring",
   "Semiring.toOne",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toPartialOrder",
   "OrderedSemiring.zero_le_one"],
  "name": "OrderedSemiring.zeroLEOneClass",
  "constType": "Definition"},
 {"references":
  ["DivisionSemiring",
   "GroupWithZero.mk",
   "MonoidWithZero.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "DivisionSemiring.toSemiring",
   "NonUnitalSemiring.mul_assoc",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.npow",
   "Semiring.npow_zero",
   "Semiring.npow_succ",
   "AddMonoid.toZero",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalNonAssocSemiring.zero_mul",
   "NonUnitalNonAssocSemiring.mul_zero",
   "DivisionSemiring.toInv",
   "DivisionSemiring.toDiv",
   "DivisionSemiring.div_eq_mul_inv",
   "DivisionSemiring.zpow",
   "DivisionSemiring.zpow_zero'",
   "DivisionSemiring.zpow_succ'",
   "DivisionSemiring.zpow_neg'",
   "DivisionSemiring.toNontrivial",
   "DivisionSemiring.inv_zero",
   "DivisionSemiring.mul_inv_cancel"],
  "name": "DivisionSemiring.toGroupWithZero",
  "constType": "Definition"},
 {"references": ["AddCommGroup"],
  "name": "AddCommGroup.add_comm",
  "constType": "Definition"},
 {"references": [], "name": "Semigroup.mk", "constType": "Other"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.div_eq_mul_inv",
  "constType": "Definition"},
 {"references": ["Lean.Syntax"],
  "name": "autoParam",
  "constType": "Definition"},
 {"references": [], "name": "SubNegZeroMonoid.mk", "constType": "Other"},
 {"references": [], "name": "OfNat", "constType": "Other"},
 {"references":
  ["Ring",
   "Int",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocRing.toNonUnitalNonAssocSemiring",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Mathlib.Meta.NormNum.IsInt",
   "Int.add",
   "Int.cast",
   "Ring.toIntCast",
   "Eq.refl",
   "Mathlib.Meta.NormNum.IsInt.mk",
   "Eq.casesOn",
   "HEq",
   "Eq.ndrec",
   "Mathlib.Meta.NormNum.IsInt.casesOn",
   "Eq.symm",
   "eq_of_heq",
   "HEq.refl"],
  "name": "Mathlib.Meta.NormNum.isInt_add.match_1",
  "constType": "Definition"},
 {"references":
  ["Ring",
   "inferInstance",
   "AddMonoidWithOne",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Ring.toAddGroupWithOne"],
  "name": "Mathlib.Meta.NormNum.instAddMonoidWithOne",
  "constType": "Definition"},
 {"references":
  ["Int",
   "le_trans",
   "PartialOrder.toPreorder",
   "StrictOrderedRing.toPartialOrder",
   "LinearOrderedRing.toStrictOrderedRing",
   "LinearOrderedCommRing.toLinearOrderedRing",
   "Int.linearOrderedCommRing",
   "Nat.cast",
   "instNatCastInt",
   "Int.natAbs",
   "HPow.hPow",
   "Nat",
   "instHPow",
   "Monoid.toNatPow",
   "Int.instMonoidInt",
   "OfNat.ofNat",
   "instOfNatNat",
   "Int.le_natAbs",
   "Int.natAbs_le_self_sq"],
  "name": "Int.le_self_sq",
  "constType": "Theorem"},
 {"references": [], "name": "List.Mem.head", "constType": "Other"},
 {"references": ["CanonicallyOrderedCommSemiring"],
  "name": "CanonicallyOrderedCommSemiring.toCanonicallyOrderedAddCommMonoid",
  "constType": "Definition"},
 {"references": ["Function.Injective", "Iff.intro", "Eq", "congr_arg"],
  "name": "Function.Injective.eq_iff",
  "constType": "Theorem"},
 {"references": [], "name": "CommMonoidWithZero", "constType": "Other"},
 {"references":
  ["Ring",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocRing.toMul",
   "NonAssocRing.toNonUnitalNonAssocRing",
   "Ring.toNonAssocRing",
   "Int.rawCast",
   "Int.negOfNat",
   "Eq.ndrec",
   "Neg.neg",
   "Ring.toNeg",
   "of_eq_true",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "Ring.toAddGroupWithOne",
   "Int.negSucc",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Eq.trans",
   "InvolutiveNeg.toNeg",
   "HasDistribNeg.toInvolutiveNeg",
   "NonUnitalNonAssocRing.toHasDistribNeg",
   "True",
   "congrArg",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "AddGroupWithOne.toAddMonoidWithOne",
   "AddGroupWithOne.toNeg",
   "congrFun",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Int.cast_negSucc",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "Nat.addMonoid",
   "Zero.toOfNat0",
   "AddZeroClass.toZero",
   "zero_add",
   "Nat.cast_one",
   "neg_mul",
   "MulOneClass.toMul",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "Semiring.toNonAssocSemiring",
   "Ring.toSemiring",
   "MulOneClass.toOne",
   "one_mul",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.neg_one_mul",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "AddGroupWithOne.mk",
   "Ring.toIntCast",
   "AddMonoidWithOne.mk",
   "Semiring.toNatCast",
   "Ring.toSemiring",
   "AddCommMonoid.toAddMonoid",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Semiring.toOne",
   "Semiring.natCast_zero",
   "Semiring.natCast_succ",
   "Ring.toNeg",
   "Ring.toSub",
   "Ring.sub_eq_add_neg",
   "Ring.zsmul",
   "Ring.zsmul_zero'",
   "Ring.zsmul_succ'",
   "Ring.zsmul_neg'",
   "Ring.add_left_neg",
   "Ring.intCast_ofNat",
   "Ring.intCast_negSucc"],
  "name": "Ring.toAddGroupWithOne",
  "constType": "Definition"},
 {"references": ["DivInvMonoid"],
  "name": "DivInvMonoid.toDiv",
  "constType": "Definition"},
 {"references":
  ["Decidable",
   "Iff",
   "instDecidableEqProp.match_1",
   "Eq",
   "Decidable.isTrue",
   "propext",
   "Not",
   "Decidable.isFalse",
   "instDecidableEqProp.proof_1"],
  "name": "instDecidableEqProp",
  "constType": "Definition"},
 {"references": ["Inhabited", "Nonempty.intro", "Inhabited.default"],
  "name": "instNonempty",
  "constType": "Definition"},
 {"references": ["Mul", "HasDistribNeg", "HasDistribNeg.neg_mul"],
  "name": "neg_mul",
  "constType": "Theorem"},
 {"references": [], "name": "Eq.rec", "constType": "Other"},
 {"references": ["LinearOrderedRing"],
  "name": "LinearOrderedRing.toOrd",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.right_distrib",
  "constType": "Definition"},
 {"references": ["Abs"], "name": "Abs.abs", "constType": "Definition"},
 {"references":
  ["AddCommSemigroup",
   "left_comm",
   "Add.add",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "add_comm",
   "add_assoc",
   "AddCommSemigroup.toAddSemigroup"],
  "name": "add_left_comm",
  "constType": "Theorem"},
 {"references":
  ["Semigroup",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "Semigroup.toMul",
   "Exists.intro",
   "Eq.symm"],
  "name": "Dvd.intro",
  "constType": "Theorem"},
 {"references":
  ["DivisionMonoid",
   "id",
   "Eq",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "DivInvMonoid.mk",
   "DivInvMonoid.toMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "DivInvMonoid.toDiv",
   "DivInvMonoid.div_eq_mul_inv",
   "DivInvMonoid.zpow",
   "DivInvMonoid.zpow_zero'",
   "DivInvMonoid.zpow_succ'",
   "DivInvMonoid.zpow_neg'",
   "OfNat.ofNat",
   "One.toOfNat1",
   "Monoid.toOne",
   "Eq.mp",
   "HDiv.hDiv",
   "instHDiv",
   "congr",
   "congrArg",
   "one_div",
   "Eq.trans",
   "inv_inv",
   "DivisionMonoid.toInvolutiveInv",
   "Eq.symm",
   "inv_div"],
  "name": "DivisionMonoid.toDivInvOneMonoid.proof_1",
  "constType": "Theorem"},
 {"references": ["List", "List.rec", "PUnit", "PProd"],
  "name": "List.below",
  "constType": "Definition"},
 {"references":
  ["Lean.Syntax.node",
   "Lean.SourceInfo.none",
   "Lean.Name.mkStr4",
   "Array.push",
   "Lean.Syntax",
   "Array.empty",
   "Lean.Name.mkStr1",
   "Lean.mkAtom"],
  "name": "_auto._@.Mathlib.Data.List.TFAE._hyg.507",
  "constType": "Definition"},
 {"references": [],
  "name": "StrictOrderedCommSemiring.mk",
  "constType": "Other"},
 {"references":
  ["OrderedSemiring",
   "CovariantClass.mk",
   "Subtype",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedSemiring.toPartialOrder",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "Semiring.toMonoidWithZero",
   "OrderedSemiring.toSemiring",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "Subtype.val",
   "OrderedSemiring.mul_le_mul_of_nonneg_right",
   "Subtype.property"],
  "name": "OrderedSemiring.toMulPosMono",
  "constType": "Definition"},
 {"references":
  ["MonoidWithZero",
   "NoZeroDivisors",
   "MulZeroClass.toMul",
   "MulZeroOneClass.toMulZeroClass",
   "MonoidWithZero.toMulZeroOneClass",
   "MonoidWithZero.toZero",
   "Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "propext",
   "Eq",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "MonoidWithZero.toMonoid",
   "Zero.toOfNat0",
   "pow_eq_zero_iff"],
  "name": "Mathlib.Algebra.GroupPower.Ring._auxLemma.1",
  "constType": "Theorem"},
 {"references":
  ["GroupWithZero",
   "Ne",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "MonoidWithZero.toZero",
   "GroupWithZero.toMonoidWithZero",
   "IsUnit.div_left_inj",
   "GroupWithZero.toDivisionMonoid",
   "Ne.isUnit"],
  "name": "div_left_inj'",
  "constType": "Theorem"},
 {"references":
  ["AddGroup",
   "AddMonoid.nsmul_succ",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid"],
  "name": "AddGroup.toAddCancelMonoid.proof_5",
  "constType": "Theorem"},
 {"references": [], "name": "Nat.zero", "constType": "Other"},
 {"references":
  ["CommRing",
   "CommMonoid.mk",
   "Monoid.mk",
   "Semigroup.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing",
   "NonUnitalSemiring.mul_assoc",
   "Semiring.toOne",
   "Semiring.one_mul",
   "Semiring.mul_one",
   "Semiring.npow",
   "Semiring.npow_zero",
   "Semiring.npow_succ",
   "CommRing.mul_comm"],
  "name": "CommRing.toCommMonoid",
  "constType": "Definition"},
 {"references": [],
  "name": "LinearOrderedCommMonoidWithZero",
  "constType": "Other"},
 {"references":
  ["Nat",
   "Or.resolve_left",
   "Eq",
   "OfNat.ofNat",
   "instOfNatNat",
   "GT.gt",
   "instLTNat",
   "Nat.eq_zero_or_pos"],
  "name": "Nat.pos_of_ne_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.below",
   "Nat.rec",
   "PProd",
   "PProd.mk",
   "Nat.zero",
   "PUnit",
   "PUnit.unit",
   "Nat.succ"],
  "name": "Nat.brecOn",
  "constType": "Definition"},
 {"references": ["Semiring"],
  "name": "Semiring.natCast_zero",
  "constType": "Definition"},
 {"references": ["Sub", "HSub.mk", "Sub.sub"],
  "name": "instHSub",
  "constType": "Definition"},
 {"references": ["DivInvOneMonoid"],
  "name": "DivInvOneMonoid.toDivInvMonoid",
  "constType": "Definition"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat",
   "Eq",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Mathlib.Meta.NormNum.IsNat.rec"],
  "name": "Mathlib.Meta.NormNum.IsNat.casesOn",
  "constType": "Definition"},
 {"references":
  ["AddGroupWithOne",
   "Int",
   "Int.cast_neg.match_1",
   "Eq",
   "Int.cast",
   "AddGroupWithOne.toIntCast",
   "Neg.neg",
   "Int.instNegInt",
   "AddGroupWithOne.toNeg",
   "Unit",
   "Eq.mpr",
   "Nat.cast",
   "instNatCastInt",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Zero.toOfNat0",
   "NegZeroClass.toZero",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "AddGroupWithOne.toAddGroup",
   "id",
   "Eq.ndrec",
   "instOfNatInt",
   "Eq.refl",
   "Int.cast_zero",
   "NegZeroClass.toNeg",
   "neg_zero",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "AddMonoidWithOne.toNatCast",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Int.cast_ofNat",
   "Nat.add",
   "Int.negSucc",
   "Int.cast_negSucc",
   "Nat.succ",
   "InvolutiveNeg.toNeg",
   "SubtractionMonoid.toInvolutiveNeg",
   "neg_neg"],
  "name": "Int.cast_neg",
  "constType": "Theorem"},
 {"references": ["Nat", "Irreducible", "Nat.monoid"],
  "name": "Nat.Prime",
  "constType": "Definition"},
 {"references":
  ["Int",
   "Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Iff.intro",
   "Dvd.dvd",
   "Int.instDvdInt",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "Eq.mpr",
   "Nat.instDvdNat",
   "Int.natAbs",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "propext",
   "Int.natAbs_dvd_natAbs",
   "instHPow",
   "Monoid.toNatPow",
   "Nat.monoid",
   "Nat.pow_dvd_pow_iff",
   "Int.natAbs_pow",
   "pow_dvd_pow_of_dvd",
   "Int.instCommMonoidInt"],
  "name": "Int.pow_dvd_pow_iff",
  "constType": "Theorem"},
 {"references": ["DivisionSemiring"],
  "name": "DivisionSemiring.zpow_succ'",
  "constType": "Definition"},
 {"references": ["Iff"], "name": "Iff.mpr", "constType": "Definition"},
 {"references": ["LinearOrderedCommSemiring"],
  "name": "LinearOrderedCommSemiring.max_def",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "Iff.intro",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Neg.neg",
   "NegZeroClass.toNeg",
   "SubNegZeroMonoid.toNegZeroClass",
   "SubtractionMonoid.toSubNegZeroMonoid",
   "AddGroup.toSubtractionMonoid",
   "Eq.mpr",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "SubNegMonoid.toNeg",
   "add_neg_cancel_left",
   "Eq.symm",
   "neg_add_cancel_left"],
  "name": "eq_neg_add_iff_add_eq",
  "constType": "Theorem"},
 {"references":
  ["Rat",
   "Eq.mpr",
   "Eq",
   "HDiv.hDiv",
   "instHDiv",
   "Rat.instDivRat",
   "Int.cast",
   "Rat.instIntCastRat",
   "Rat.num",
   "Nat.cast",
   "Semiring.toNatCast",
   "Rat.semiring",
   "Rat.den",
   "AddGroupWithOne.toIntCast",
   "Ring.toAddGroupWithOne",
   "CommRing.toRing",
   "Rat.commRing",
   "Int",
   "instNatCastInt",
   "id",
   "Eq.ndrec",
   "AddMonoidWithOne.toNatCast",
   "AddGroupWithOne.toAddMonoidWithOne",
   "Eq.refl",
   "Eq.symm",
   "Int.cast_ofNat",
   "Rat.divInt",
   "Rat.divInt_eq_div",
   "Rat.num_den"],
  "name": "Rat.num_div_den",
  "constType": "Theorem"},
 {"references":
  ["AddMonoidWithOne",
   "Nat",
   "Mathlib.Meta.NormNum.IsNat.mk",
   "Nat.rawCast",
   "rfl"],
  "name": "Mathlib.Meta.NormNum.IsNat.of_raw",
  "constType": "Theorem"},
 {"references":
  ["LinearOrder",
   "Iff.intro",
   "Not",
   "LT.lt",
   "Preorder.toLT",
   "PartialOrder.toPreorder",
   "LinearOrder.toPartialOrder",
   "LE.le",
   "Preorder.toLE",
   "le_of_not_gt",
   "not_lt_of_ge"],
  "name": "not_lt",
  "constType": "Theorem"},
 {"references": ["OrderedSemiring"],
  "name": "OrderedSemiring.toPartialOrder",
  "constType": "Definition"},
 {"references": ["NonUnitalNonAssocSemiring"],
  "name": "NonUnitalNonAssocSemiring.mul_zero",
  "constType": "Definition"},
 {"references": ["Eq", "Eq.refl", "Eq.rec"],
  "name": "Eq.casesOn",
  "constType": "Definition"},
 {"references":
  ["Nat",
   "Nat.casesOn",
   "Eq",
   "Int",
   "Int.negOfNat",
   "Int.subNatNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.zero",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "Nat.succ"],
  "name": "Int.negOfNat_eq_subNatNat_zero",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LT.lt",
   "instLTNat",
   "OfNat.ofNat",
   "instOfNatNat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.succ",
   "Nat.casesOn",
   "Nat.zero",
   "Nat.le.casesOn",
   "Nat.le",
   "Eq",
   "HEq",
   "Nat.noConfusion",
   "Nat.le.refl",
   "Nat.le.step",
   "Eq.refl",
   "HEq.refl"],
  "name": "zero_pow.match_1",
  "constType": "Definition"},
 {"references": [], "name": "Pow", "constType": "Other"},
 {"references": ["StrictOrderedSemiring"],
  "name": "StrictOrderedSemiring.toSemiring",
  "constType": "Definition"},
 {"references": ["Dvd"], "name": "Dvd.dvd", "constType": "Definition"},
 {"references": ["String", "Lean.Name.str", "Lean.Name.anonymous"],
  "name": "Lean.Name.mkStr4",
  "constType": "Definition"},
 {"references":
  ["Nontrivial.mk",
   "Rat",
   "Exists.intro",
   "Exists",
   "Ne",
   "OfNat.ofNat",
   "Rat.instOfNatRat",
   "Rat.zero_ne_one"],
  "name": "Rat.commGroupWithZero.proof_7",
  "constType": "Theorem"},
 {"references":
  ["NonUnitalNonAssocCommSemiring",
   "CommMagma.mk",
   "NonUnitalNonAssocSemiring.toMul",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommSemiring.mul_comm"],
  "name": "NonUnitalNonAssocCommSemiring.toCommMagma",
  "constType": "Definition"},
 {"references": ["right_distrib"], "name": "add_mul", "constType": "Theorem"},
 {"references":
  ["Int",
   "Int.add_comm.match_1",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "Int.instAddInt",
   "Nat",
   "of_eq_true",
   "Nat.cast",
   "instNatCastInt",
   "instAddNat",
   "Eq.trans",
   "True",
   "congrArg",
   "Nat.add_comm",
   "eq_self",
   "rfl",
   "Int.ofNat",
   "Int.negSucc",
   "Nat.succ"],
  "name": "Int.add_comm",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedCommRing",
   "LinearOrderedRing.le_total",
   "LinearOrderedCommRing.toLinearOrderedRing"],
  "name": "LinearOrderedCommRing.toLinearOrderedCommSemiring.proof_1",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "OrderedSemiring",
   "Rat",
   "OrderedCommSemiring.toOrderedSemiring",
   "StrictOrderedCommSemiring.toOrderedCommSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "LinearOrderedField.toLinearOrderedSemifield",
   "Rat.instLinearOrderedFieldRat"],
  "name": "Rat.instOrderedSemiringRat",
  "constType": "Definition"},
 {"references": ["MulZeroClass"],
  "name": "MulZeroClass.zero_mul",
  "constType": "Definition"},
 {"references": ["Iff.rfl", "False"],
  "name": "imp_false",
  "constType": "Theorem"},
 {"references":
  ["LinearOrderedSemifield",
   "Semifield.mk",
   "CommSemiring.mk",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "LinearOrderedSemifield.toLinearOrderedCommSemiring",
   "StrictOrderedCommSemiring.mul_comm",
   "LinearOrderedSemifield.toInv",
   "LinearOrderedSemifield.toDiv",
   "LinearOrderedSemifield.div_eq_mul_inv",
   "LinearOrderedSemifield.zpow",
   "LinearOrderedSemifield.zpow_zero'",
   "LinearOrderedSemifield.zpow_succ'",
   "LinearOrderedSemifield.zpow_neg'",
   "StrictOrderedSemiring.toNontrivial",
   "LinearOrderedSemifield.inv_zero",
   "LinearOrderedSemifield.mul_inv_cancel"],
  "name": "LinearOrderedSemifield.toSemifield",
  "constType": "Definition"},
 {"references":
  ["inferInstance",
   "Distrib",
   "Int",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonUnitalNonAssocCommSemiring.toNonUnitalNonAssocSemiring",
   "NonUnitalNonAssocCommRing.toNonUnitalNonAssocCommSemiring",
   "NonUnitalCommRing.toNonUnitalNonAssocCommRing",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt"],
  "name": "Int.instDistribInt",
  "constType": "Definition"},
 {"references": [], "name": "Semigroup", "constType": "Other"},
 {"references":
  ["CommSemiring",
   "of_eq_true",
   "Eq",
   "HMul.hMul",
   "instHMul",
   "NonUnitalNonAssocSemiring.toMul",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "OfNat.ofNat",
   "Nat",
   "instOfNatNat",
   "Eq.trans",
   "True",
   "congrFun",
   "congrArg",
   "One.toOfNat1",
   "AddMonoidWithOne.toOne",
   "Nat.cast_one",
   "mul_one",
   "MulZeroOneClass.toMulOneClass",
   "NonAssocSemiring.toMulZeroOneClass",
   "eq_self"],
  "name": "Mathlib.Tactic.Ring.mul_one",
  "constType": "Theorem"},
 {"references": [], "name": "List.Chain.nil", "constType": "Other"},
 {"references":
  ["DivInvOneMonoid",
   "InvOneClass.mk",
   "Monoid.toOne",
   "DivInvMonoid.toMonoid",
   "DivInvOneMonoid.toDivInvMonoid",
   "DivInvMonoid.toInv",
   "DivInvOneMonoid.inv_one"],
  "name": "DivInvOneMonoid.toInvOneClass",
  "constType": "Definition"},
 {"references":
  ["DivisionMonoid",
   "IsUnit",
   "DivInvMonoid.toMonoid",
   "DivisionMonoid.toDivInvMonoid",
   "Eq.mpr",
   "Eq",
   "HDiv.hDiv",
   "instHDiv",
   "DivInvMonoid.toDiv",
   "OfNat.ofNat",
   "One.toOfNat1",
   "InvOneClass.toOne",
   "DivInvOneMonoid.toInvOneClass",
   "DivisionMonoid.toDivInvOneMonoid",
   "HMul.hMul",
   "instHMul",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass",
   "Inv.inv",
   "DivInvMonoid.toInv",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "div_eq_mul_inv",
   "InvOneClass.toInv",
   "IsUnit.mul_inv_cancel"],
  "name": "IsUnit.div_self",
  "constType": "Theorem"},
 {"references": [], "name": "MulZeroOneClass", "constType": "Other"},
 {"references": ["NonUnitalCommRing"],
  "name": "NonUnitalCommRing.toNonUnitalRing",
  "constType": "Definition"},
 {"references":
  ["Membership.mk",
   "Finset",
   "Membership.mem",
   "Multiset",
   "Multiset.instMembershipMultiset",
   "Finset.val"],
  "name": "Finset.instMembershipFinset",
  "constType": "Definition"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.zsmul_neg'",
  "constType": "Definition"},
 {"references":
  ["AddGroup",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "SubNegMonoid.toAddMonoid",
   "AddGroup.toSubNegMonoid",
   "Eq.mpr",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "Neg.neg",
   "SubNegMonoid.toNeg",
   "id",
   "Eq.ndrec",
   "Eq.refl",
   "Eq.symm",
   "neg_add_cancel_left"],
  "name": "AddGroup.toAddCancelMonoid.proof_1",
  "constType": "Theorem"},
 {"references": [], "name": "StrictOrderedCommSemiring", "constType": "Other"},
 {"references":
  ["CommSemigroup",
   "left_comm",
   "Mul.mul",
   "CommMagma.toMul",
   "CommSemigroup.toCommMagma",
   "mul_comm",
   "mul_assoc",
   "CommSemigroup.toSemigroup"],
  "name": "mul_left_comm",
  "constType": "Theorem"},
 {"references":
  ["Monoid",
   "Nat",
   "Commute.pow_right",
   "Commute.refl",
   "MulOneClass.toMul",
   "Monoid.toMulOneClass"],
  "name": "Commute.self_pow",
  "constType": "Theorem"},
 {"references": [], "name": "List.Chain", "constType": "Other"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "Nat.below",
   "Nat.pow.match_1",
   "Unit",
   "OfNat.ofNat",
   "instOfNatNat",
   "Nat.succ",
   "Nat.mul",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.pow",
  "constType": "Definition"},
 {"references": [],
  "name": "CanonicallyOrderedAddCommMonoid.mk",
  "constType": "Other"},
 {"references":
  ["CommSemiring",
   "Mathlib.Meta.NormNum.IsNat",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "NonAssocSemiring.toAddCommMonoidWithOne",
   "Semiring.toNonAssocSemiring",
   "CommSemiring.toSemiring",
   "HAdd.hAdd",
   "instHAdd",
   "Distrib.toAdd",
   "NonUnitalNonAssocSemiring.toDistrib",
   "NonAssocSemiring.toNonUnitalNonAssocSemiring",
   "Eq",
   "Eq.ndrec",
   "Eq.mpr",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "NonUnitalNonAssocSemiring.toAddCommMonoid",
   "id",
   "Eq.refl",
   "add_add_add_comm",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "Mathlib.Meta.NormNum.IsNat.out",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "Nat",
   "instOfNatNat",
   "Nat.cast_zero",
   "CommMonoidWithZero.toZero",
   "CommSemiring.toCommMonoidWithZero",
   "Mathlib.Tactic.Ring.add_pf_zero_add"],
  "name": "Mathlib.Tactic.Ring.add_pf_add_overlap_zero",
  "constType": "Theorem"},
 {"references":
  ["inferInstance",
   "Semigroup",
   "Int",
   "SemigroupWithZero.toSemigroup",
   "NonUnitalSemiring.toSemigroupWithZero",
   "NonUnitalCommSemiring.toNonUnitalSemiring",
   "NonUnitalCommRing.toNonUnitalCommSemiring",
   "CommRing.toNonUnitalCommRing",
   "Int.instCommRingInt"],
  "name": "Int.instSemigroupInt",
  "constType": "Definition"},
 {"references": ["Ring"], "name": "Ring.toIntCast", "constType": "Definition"},
 {"references": ["Semifield"],
  "name": "Semifield.toInv",
  "constType": "Definition"},
 {"references":
  ["Preorder",
   "GT.gt",
   "Preorder.toLT",
   "GE.ge",
   "Preorder.toLE",
   "lt_of_le_of_lt"],
  "name": "gt_of_gt_of_ge",
  "constType": "Theorem"},
 {"references":
  ["Ring",
   "NonUnitalNonAssocSemiring.left_distrib",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring"],
  "name": "Ring.toNonAssocRing.proof_2",
  "constType": "Theorem"},
 {"references": [],
  "name": "NonUnitalNonAssocCommSemiring.mk",
  "constType": "Other"},
 {"references": ["Monoid"], "name": "Monoid.npow", "constType": "Definition"},
 {"references": [], "name": "Mathlib.Meta.NormNum.IsNat", "constType": "Other"},
 {"references": ["NatCast.mk", "Int", "Nat", "Int.ofNat"],
  "name": "instNatCastInt",
  "constType": "Definition"},
 {"references":
  ["Semiring",
   "Nat",
   "Eq.symm",
   "Nat.cast",
   "Semiring.toNatCast",
   "HPow.hPow",
   "instHPow",
   "Monoid.toNatPow",
   "Nat.monoid",
   "MonoidWithZero.toMonoid",
   "Semiring.toMonoidWithZero",
   "Nat.cast_pow"],
  "name": "Mathlib.Algebra.GroupPower.Lemmas._auxLemma.10",
  "constType": "Theorem"},
 {"references":
  ["MulOneClass",
   "Zero",
   "Preorder",
   "MulPosStrictMono",
   "MulOneClass.toMul",
   "MulPosReflectLT",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "Iff.trans",
   "HMul.hMul",
   "instHMul",
   "One.toOfNat1",
   "MulOneClass.toOne",
   "Eq.mpr",
   "Iff",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "one_mul",
   "Iff.rfl",
   "mul_lt_mul_right"],
  "name": "lt_mul_iff_one_lt_left",
  "constType": "Theorem"},
 {"references":
  ["OrderedAddCommMonoid",
   "CovariantClass.mk",
   "HAdd.hAdd",
   "instHAdd",
   "AddZeroClass.toAdd",
   "AddMonoid.toAddZeroClass",
   "AddCommMonoid.toAddMonoid",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.add_le_add_left"],
  "name": "OrderedAddCommMonoid.toCovariantClassLeft",
  "constType": "Definition"},
 {"references": ["LinearOrderedSemifield"],
  "name": "LinearOrderedSemifield.zpow_neg'",
  "constType": "Definition"},
 {"references": ["Nat", "Prod.snd", "Int", "Nat.xgcd"],
  "name": "Nat.gcdB",
  "constType": "Definition"},
 {"references": ["LinearOrderedCommRing"],
  "name": "LinearOrderedCommRing.toLinearOrderedRing",
  "constType": "Definition"},
 {"references": ["List", "Membership.mem", "List.instMembershipList", "Iff"],
  "name": "List.TFAE",
  "constType": "Definition"},
 {"references": [],
  "name": "NonUnitalNonAssocSemiring.mk",
  "constType": "Other"},
 {"references":
  ["Int",
   "Iff.intro",
   "Eq",
   "Nat",
   "Int.natAbs",
   "OfNat.ofNat",
   "instOfNatNat",
   "instOfNatInt",
   "Int.natAbs_eq_zero.match_1",
   "Int.ofNat",
   "congrArg",
   "Int.negSucc",
   "absurd",
   "Nat.succ_ne_zero",
   "Eq.rec",
   "rfl",
   "Eq.symm"],
  "name": "Int.natAbs_eq_zero",
  "constType": "Theorem"},
 {"references": ["Ring", "Int", "Int.cast", "Ring.toIntCast"],
  "name": "Int.rawCast",
  "constType": "Definition"},
 {"references": ["LinearOrder"],
  "name": "LinearOrder.max_def",
  "constType": "Definition"},
 {"references": [], "name": "DivisionSemiring", "constType": "Other"},
 {"references": ["Zero", "NeZero", "NeZero.out"],
  "name": "NeZero.ne",
  "constType": "Theorem"},
 {"references": ["CommMonoidWithZero"],
  "name": "CommMonoidWithZero.toZero",
  "constType": "Definition"},
 {"references": [], "name": "NatCast", "constType": "Other"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.mul_inv_cancel",
  "constType": "Definition"},
 {"references":
  ["StrictOrderedSemiring.toOrderedSemiring'",
   "Nat",
   "Nat.strictOrderedSemiring",
   "Nat.decLe"],
  "name": "Nat.orderedSemiring",
  "constType": "Definition"},
 {"references":
  ["Mul",
   "Zero",
   "Preorder",
   "MulPosMono",
   "MulPosReflectLE",
   "LT.lt",
   "Preorder.toLT",
   "OfNat.ofNat",
   "Zero.toOfNat0",
   "rel_iff_cov",
   "Subtype",
   "HMul.hMul",
   "instHMul",
   "Subtype.val",
   "LE.le",
   "Preorder.toLE",
   "MulPosMono.to_covariantClass_pos_mul_le",
   "Subtype.mk"],
  "name": "mul_le_mul_right",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "OrderedAddCommMonoid.toPartialOrder",
   "OrderedAddCommMonoid.mk",
   "OrderedAddCommMonoid.toAddCommMonoid",
   "inferInstance",
   "OrderedAddCommMonoid",
   "OrderedSemiring.toOrderedAddCommMonoid",
   "Nat.orderedSemiring",
   "OrderedAddCommMonoid.add_le_add_left",
   "Exists.imp",
   "Eq",
   "HAdd.hAdd",
   "instHAdd",
   "AddSemigroup.toAdd",
   "AddMonoid.toAddSemigroup",
   "AddCommMonoid.toAddMonoid",
   "Eq.symm",
   "Nat.le.dest"],
  "name": "Nat.canonicallyOrderedCommSemiring.proof_1",
  "constType": "Theorem"},
 {"references": ["NatCast"],
  "name": "NatCast.natCast",
  "constType": "Definition"},
 {"references": ["SubtractionMonoid"],
  "name": "SubtractionMonoid.neg_add_rev",
  "constType": "Definition"},
 {"references": ["CommRing", "Ring.add_left_neg", "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_5",
  "constType": "Theorem"},
 {"references": [], "name": "Lean.Syntax", "constType": "Other"},
 {"references": [],
  "name": "NonUnitalNonAssocCommSemiring",
  "constType": "Other"},
 {"references":
  ["NonUnitalNonAssocSemiring.mul_zero",
   "Nat",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "StrictOrderedSemiring.toSemiring",
   "StrictOrderedCommSemiring.toStrictOrderedSemiring",
   "LinearOrderedCommSemiring.toStrictOrderedCommSemiring",
   "Nat.linearOrderedCommSemiring"],
  "name": "Nat.linearOrderedCommMonoidWithZero.proof_2",
  "constType": "Theorem"},
 {"references":
  ["LinearOrder",
   "Lattice",
   "inferInstanceAs",
   "LinearOrder.toLattice",
   "DistribLattice.mk",
   "Lattice.mk",
   "Lattice.toSemilatticeSup",
   "Lattice.toInf",
   "Lattice.inf_le_left",
   "Lattice.inf_le_right",
   "Lattice.le_inf",
   "instDistribLattice.proof_1"],
  "name": "instDistribLattice",
  "constType": "Definition"},
 {"references":
  ["CommRing",
   "NonUnitalNonAssocSemiring.right_distrib",
   "NonUnitalSemiring.toNonUnitalNonAssocSemiring",
   "Semiring.toNonUnitalSemiring",
   "Ring.toSemiring",
   "CommRing.toRing"],
  "name": "CommRing.toNonUnitalCommRing.proof_8",
  "constType": "Theorem"},
 {"references":
  ["Nat",
   "Nat.brecOn",
   "LE.le",
   "instLENat",
   "HAdd.hAdd",
   "instHAdd",
   "instAddNat",
   "Nat.below",
   "Nat.succ_add.match_1",
   "Nat.le_refl",
   "Nat.succ",
   "Nat.le_succ_of_le",
   "Nat.add",
   "PProd.fst",
   "Nat.rec",
   "PUnit",
   "PProd"],
  "name": "Nat.le_add_right",
  "constType": "Theorem"},
 {"references": [], "name": "Fin.mk", "constType": "Other"},
 {"references":
  ["Int",
   "Nat",
   "Nat.Prime",
   "Dvd.dvd",
   "Int.instDvdInt",
   "Nat.cast",
   "instNatCastInt",
   "HPow.hPow",
   "Int.instHPowIntNat",
   "Eq.mpr",
   "Nat.instDvdNat",
   "Int.natAbs",
   "id",
   "Eq",
   "Eq.ndrec",
   "Eq.refl",
   "propext",
   "Int.coe_nat_dvd_left",
   "Int.Prime.dvd_pow"],
  "name": "Int.Prime.dvd_pow'",
  "constType": "Theorem"},
 {"references": ["SemilatticeSup"],
  "name": "SemilatticeSup.toSup",
  "constType": "Definition"},
 {"references": ["LinearOrderedField"],
  "name": "LinearOrderedField.div_eq_mul_inv",
  "constType": "Definition"},
 {"references":
  ["Decidable", "Decidable.casesOn", "Bool", "Not", "Bool.false", "Bool.true"],
  "name": "Decidable.decide",
  "constType": "Definition"},
 {"references":
  ["AddCommMonoidWithOne",
   "PartialOrder",
   "CovariantClass",
   "HAdd.hAdd",
   "instHAdd",
   "AddCommMagma.toAdd",
   "AddCommSemigroup.toAddCommMagma",
   "AddCommMonoid.toAddCommSemigroup",
   "AddCommMonoidWithOne.toAddCommMonoid",
   "LE.le",
   "Preorder.toLE",
   "PartialOrder.toPreorder",
   "ZeroLEOneClass",
   "AddMonoid.toZero",
   "AddMonoidWithOne.toAddMonoid",
   "AddCommMonoidWithOne.toAddMonoidWithOne",
   "AddMonoidWithOne.toOne",
   "CharZero",
   "Nat",
   "propext",
   "Nat.cast",
   "AddMonoidWithOne.toNatCast",
   "instLENat",
   "Nat.cast_le"],
  "name": "Mathlib.Data.Nat.Cast.Order._auxLemma.8",
  "constType": "Theorem"},
 {"references": ["SubNegMonoid"],
  "name": "SubNegMonoid.toNeg",
  "constType": "Definition"}]